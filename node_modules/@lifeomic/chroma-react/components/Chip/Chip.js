"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Chip = exports.useStyles = exports.ChipStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var chromicons_1 = require("@lifeomic/chromicons");
var styles_1 = require("../../styles");
exports.ChipStylesKey = 'ChromaChip';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        margin: theme.spacing(1.25, 1.25, 0, 0),
        height: theme.pxToRem(30),
        borderRadius: theme.pxToRem(4),
        backgroundColor: theme.palette.black[50],
        display: 'inline-flex',
        alignItems: 'center',
        color: theme.palette.black[600],
        paddingLeft: theme.spacing(1),
        paddingRight: theme.spacing(1),
    },
    label: {
        fontSize: theme.typography.caption.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        paddingRight: theme.pxToRem(10),
        whiteSpace: 'nowrap',
        overflow: 'hidden',
        textOverflow: 'ellipsis',
        maxWidth: theme.spacing(37.5),
        letterSpacing: '0.4px',
    },
    noDeleteButtonLabel: {
        paddingRight: 0,
    },
    svgStyle: {
        width: theme.pxToRem(10),
        height: theme.pxToRem(10),
    },
    deleteButton: {
        alignItems: 'center',
        background: theme.palette.black[600],
        borderRadius: 9999,
        border: 'none',
        display: 'inline-flex',
        justifyContent: 'center',
        color: theme.palette.common.white,
        cursor: 'pointer',
        height: theme.pxToRem(14),
        minHeight: theme.pxToRem(10),
        minWidth: theme.pxToRem(10),
        padding: 0,
        width: theme.pxToRem(14),
        transition: 'background 0.25s ease, opacity 0.25s ease',
        '&:hover': {
            background: theme.palette.black[600],
            opacity: 0.85,
        },
        '&:disabled': {
            background: theme.palette.black[300],
            color: theme.palette.common.white,
            cursor: 'initial',
        },
        '&:focus': {
            background: theme.palette.black[400],
            outline: 'none',
        },
    },
}); }, { name: exports.ChipStylesKey });
exports.Chip = React.forwardRef(function (_a, ref) {
    var children = _a.children, _b = _a.label, label = _b === void 0 ? '' : _b, disableDelete = _a.disableDelete, onDelete = _a.onDelete, className = _a.className, rootProps = __rest(_a, ["children", "label", "disableDelete", "onDelete", "className"]);
    var classes = (0, exports.useStyles)({});
    return (React.createElement("div", __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, className), tabIndex: 0, "aria-label": label }, rootProps),
        React.createElement("span", { className: (0, clsx_1.default)(classes.label, !onDelete && classes.noDeleteButtonLabel) }, label),
        !!onDelete && (React.createElement("button", { className: classes.deleteButton, "aria-label": "Remove", disabled: disableDelete, onClick: onDelete, type: "button", tabIndex: 0 },
            React.createElement(chromicons_1.X, { className: classes.svgStyle, "aria-hidden": true }))),
        children));
});
//# sourceMappingURL=data:application/json;base64,