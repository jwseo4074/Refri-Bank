"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Text = exports.useStyles = exports.TextStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
exports.TextStylesKey = 'ChromaText';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        color: theme.palette.black.main,
        fontFamily: theme.typography.fontFamily,
        margin: 0,
    },
    inverseColor: {
        color: theme.palette.common.white,
    },
    negativeColor: {
        color: theme.palette.negative.main,
    },
    positiveColor: {
        color: theme.palette.positive.main,
    },
    headline: {
        fontSize: theme.pxToRem(20),
        letterSpacing: theme.pxToRem(0.5),
        lineHeight: theme.pxToRem(28),
    },
    body: {
        fontSize: styles_1.fontSizes.body,
        lineHeight: theme.pxToRem(26),
    },
    subbody: {
        fontSize: theme.pxToRem(14),
        lineHeight: theme.pxToRem(22),
    },
    table: {
        fontSize: theme.pxToRem(14),
        lineHeight: theme.pxToRem(22),
    },
    caption: {
        fontSize: styles_1.fontSizes.caption,
        letterSpacing: theme.pxToRem(0.5),
        lineHeight: theme.pxToRem(20),
    },
    button: {
        fontSize: styles_1.fontSizes.button,
        letterSpacing: theme.pxToRem(0.5),
    },
    tooltip: {
        fontSize: styles_1.fontSizes.tooltip,
        letterSpacing: theme.pxToRem(0.5),
        lineHeight: theme.pxToRem(18),
    },
    code: {
        fontFamily: theme.typography.fontFamilyMonospace,
        fontSize: styles_1.fontSizes.body,
        lineHeight: theme.pxToRem(26),
        letterSpacing: 'normal',
    },
    familyMonospace: {
        fontFamily: theme.typography.fontFamilyMonospace,
    },
    weightLight: {
        fontWeight: theme.typography.fontWeightLight,
    },
    weightRegular: {
        fontWeight: theme.typography.fontWeightRegular,
    },
    weightBold: {
        fontWeight: theme.typography.fontWeightBold,
    },
    marginBottom: {
        marginBottom: theme.spacing(1),
    },
    alignCenter: {
        textAlign: 'center',
    },
    alignJustify: {
        textAlign: 'justify',
    },
    alignLeft: {
        textAlign: 'left',
    },
    alignRight: {
        textAlign: 'right',
    },
}); }, { name: exports.TextStylesKey });
exports.Text = React.forwardRef(function (_a, ref) {
    var _b, _c, _d, _e, _f;
    var align = _a.align, children = _a.children, className = _a.className, _g = _a.color, color = _g === void 0 ? 'default' : _g, _h = _a.family, family = _h === void 0 ? 'default' : _h, marginBottom = _a.marginBottom, _j = _a.size, size = _j === void 0 ? 'body' : _j, _k = _a.useH1, useH1 = _k === void 0 ? false : _k, _l = _a.weight, weight = _l === void 0 ? 'regular' : _l, rootProps = __rest(_a, ["align", "children", "className", "color", "family", "marginBottom", "size", "useH1", "weight"]);
    var classes = (0, exports.useStyles)({});
    var Component = useH1 ? 'h1' : size === 'headline' ? 'h6' : 'p';
    return (React.createElement(Component, __assign({ className: (0, clsx_1.default)(classes.root, (_b = {},
            _b[classes.headline] = size === 'headline',
            _b[classes.body] = size === 'body',
            _b[classes.subbody] = size === 'subbody',
            _b[classes.table] = size === 'table',
            _b[classes.caption] = size === 'caption',
            _b[classes.button] = size === 'button',
            _b[classes.tooltip] = size === 'tooltip',
            _b[classes.code] = size === 'code',
            _b), (_c = {},
            _c[classes.familyMonospace] = family === 'monospace',
            _c), (_d = {},
            _d[classes.weightLight] = weight === 'light',
            _d[classes.weightRegular] = weight === 'regular',
            _d[classes.weightBold] = weight === 'bold' || size === 'button',
            _d), (_e = {},
            _e[classes.inverseColor] = color === 'inverse',
            _e[classes.negativeColor] = color === 'negative',
            _e[classes.positiveColor] = color === 'positive',
            _e), marginBottom && classes.marginBottom, (_f = {},
            _f[classes.alignCenter] = align === 'center',
            _f[classes.alignJustify] = align === 'justify',
            _f[classes.alignLeft] = align === 'left',
            _f[classes.alignRight] = align === 'right',
            _f), className), ref: ref }, rootProps), children));
});
//# sourceMappingURL=data:application/json;base64,