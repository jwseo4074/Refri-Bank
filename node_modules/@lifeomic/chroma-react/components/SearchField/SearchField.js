"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchField = exports.useStyles = exports.SearchFieldStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
var forms_1 = require("../_private/forms");
var UniqueId_1 = require("../_private/UniqueId");
var clipPaths_1 = require("./clipPaths");
exports.SearchFieldStylesKey = 'ChromaSearchField';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        position: 'relative',
    },
    input: {
        backgroundColor: 'rgba(132, 137, 166, 0.15)',
        border: "1px solid transparent",
        borderRadius: theme.pxToRem(4),
        color: theme.palette.text.primary,
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.pxToRem(14),
        lineHeight: 1.25,
        paddingLeft: theme.spacing(1.25),
        // Requires more paddingRight so we give the search icon enough
        // room when the text inside the search field is long.
        paddingRight: theme.spacing(3.75),
        transition: 'border 0.25s ease',
        maxWidth: theme.pxToRem(173),
        '&:focus': {
            outline: 'none',
            backgroundColor: 'rgba(255, 255, 255, 0.5)',
            border: "1px solid rgba(132, 137, 166, 0.45)",
        },
        '&:disabled': {
            cursor: 'not-allowed',
            opacity: 0.625,
            '& + $button': {
                cursor: 'not-allowed',
                opacity: 0.625,
            },
        },
        '&::-webkit-input-placeholder': {
            color: theme.palette.black[400],
        },
        '&::-moz-placeholder': {
            color: theme.palette.black[400],
        },
        '&:-ms-input-placeholder': {
            color: theme.palette.black[400],
        },
        '&:-moz-placeholder': {
            color: theme.palette.black[400],
        },
        // Hide the webkit clear (x) button
        '&::-webkit-search-decoration,&::-webkit-search-cancel-button,&::-webkit-search-results-button,&::-webkit-search-results-decoration': {
            display: 'none',
        },
    },
    inputInverse: {
        backgroundColor: 'rgba(230, 231, 237, 0.1)',
        color: theme.palette.common.white,
        '&:focus': {
            backgroundColor: 'rgba(230, 231, 237, 0.1)',
            border: "1px solid rgba(230, 231, 237, 0.55)",
        },
        '&::-webkit-input-placeholder': {
            color: 'rgba(255, 255, 255, 0.8)',
        },
        '&::-moz-placeholder': {
            color: 'rgba(255, 255, 255, 0.8)',
        },
        '&:-ms-input-placeholder': {
            color: 'rgba(255, 255, 255, 0.8)',
        },
        '&:-moz-placeholder': {
            color: 'rgba(255, 255, 255, 0.8)',
        },
    },
    inputHeight0: {
        paddingBottom: theme.spacing(0.5),
        paddingTop: theme.spacing(0.5),
    },
    inputHeight1: {
        paddingBottom: theme.spacing(1),
        paddingTop: theme.spacing(1),
    },
    fullWidth: {
        '& $input': {
            maxWidth: 'none',
            width: '100%',
        },
        '& $button': {
            left: 'auto',
            right: theme.pxToRem(5),
        },
    },
    button: {
        position: 'absolute',
        left: theme.pxToRem(144),
        alignItems: 'center',
        backgroundColor: 'transparent',
        border: 0,
        color: theme.palette.black[500],
        cursor: 'pointer',
        display: 'inline-flex',
        flex: '0 0 auto',
        justifyContent: 'center',
        margin: 0,
        outline: 'none',
        padding: 0,
        transition: 'color 0.25s ease, opacity 0.25s ease',
        userSelect: 'none',
    },
    buttonHeight0: {
        top: theme.pxToRem(0.25),
    },
    buttonHeight1: {
        top: theme.pxToRem(4),
    },
    buttonSvg: {
        width: theme.pxToRem(24),
        height: theme.pxToRem(24),
        // Glass
        '& > circle': {
            fill: 'transparent',
            stroke: theme.palette.black[500],
            strokeWidth: 6,
            strokeLinecap: 'round',
        },
        // Magnifying glass pole part
        '& > path': {
            fill: 'none',
            stroke: theme.palette.black[500],
            strokeDasharray: '10 50',
            strokeDashoffset: 20,
            strokeLinecap: 'round',
            strokeWidth: 7,
            transition: 'stroke-dasharray 200ms, stroke-dashoffset 200ms, stroke 200ms',
            '@media (prefers-reduced-motion: reduce)': {
                transition: 'none',
            },
        },
        // Background circle for glass and X clear
        '& > rect': {
            clipPath: clipPaths_1.defaultClipPath,
            WebkitClipPath: clipPaths_1.defaultClipPath,
            fill: 'transparent',
            transition: 'clip-path 100ms 100ms',
            '@media (prefers-reduced-motion: reduce)': {
                transition: 'none',
            },
        },
    },
    buttonSvgInverse: {
        '& > circle': {
            stroke: theme.palette.common.white,
        },
        '& > path': {
            stroke: theme.palette.common.white,
        },
    },
    buttonSvgClear: {
        marginTop: theme.spacing(0.125),
        '& > circle': {
            fill: theme.palette.black[500],
        },
        '& > path': {
            strokeDasharray: '24 50',
            strokeDashoffset: 74,
            stroke: theme.palette.common.white,
        },
        '& > rect': {
            clipPath: clipPaths_1.clearClipPath,
            WebkitClipPath: clipPaths_1.clearClipPath,
            fill: theme.palette.common.white,
            transition: 'clip-path 100ms',
            '@media (prefers-reduced-motion: reduce)': {
                transition: 'none',
            },
        },
    },
    buttonSvgClearInverse: {
        '& > circle': {
            fill: theme.palette.common.white,
            stroke: theme.palette.common.white,
        },
        '& > path': {
            stroke: theme.palette.blue[700],
        },
        '& > rect': {
            fill: theme.palette.blue[700],
        },
    },
    helpMessage: {
        marginTop: theme.spacing(1),
        marginLeft: 0,
    },
}); }, { name: exports.SearchFieldStylesKey });
exports.SearchField = React.forwardRef(function (_a, ref) {
    var _b, _c, _d;
    var _e;
    var ariaLabel = _a["aria-label"], className = _a.className, _f = _a.color, color = _f === void 0 ? 'default' : _f, _g = _a.disableClearOnSearch, disableClearOnSearch = _g === void 0 ? false : _g, fullWidth = _a.fullWidth, _h = _a.height, height = _h === void 0 ? 1 : _h, id = _a.id, name = _a.name, helpMessage = _a.helpMessage, onChange = _a.onChange, onSearch = _a.onSearch, onClear = _a.onClear, valueProp = _a.value, defaultValue = _a.defaultValue, rootProps = __rest(_a, ['aria-label', "className", "color", "disableClearOnSearch", "fullWidth", "height", "id", "name", "helpMessage", "onChange", "onSearch", "onClear", "value", "defaultValue"]);
    var classes = (0, exports.useStyles)({});
    var uniqueId = React.useState(function () { return id || name || (0, UniqueId_1.generateUniqueId)('searchField-'); })[0];
    var _j = React.useState(false), showClear = _j[0], setShowClear = _j[1];
    var _k = React.useState((_e = defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.toString()) !== null && _e !== void 0 ? _e : ''), searchText = _k[0], setSearchText = _k[1];
    var isControlled = valueProp !== undefined;
    var value = isControlled ? valueProp.toString() : searchText;
    if (!ariaLabel && process.env.NODE_ENV === 'development') {
        console.warn('Please provide an aria-label to SearchField. This will be a required property in a future major release.');
    }
    var handleFocus = function (e) {
        if (e.target.value.length > 0) {
            setShowClear(true);
        }
    };
    var handleBlur = function () {
        if (value.length === 0) {
            setShowClear(false);
        }
    };
    var handleChange = function (e) {
        if (!isControlled) {
            setSearchText(e.target.value);
        }
        if (showClear && e.target.value.length === 0) {
            setShowClear(false);
        }
        if (!showClear && e.target.value.length > 0) {
            setShowClear(true);
        }
        onChange === null || onChange === void 0 ? void 0 : onChange(e);
    };
    var handleKeyPress = function (e) {
        if (e.key === 'Enter' && !disableClearOnSearch) {
            setShowClear(false);
            onSearch && onSearch(value);
            setSearchText('');
        }
        if (e.key === 'Enter' && disableClearOnSearch) {
            onSearch && onSearch(value);
        }
    };
    var handleClearButtonClick = function () {
        setSearchText('');
        setShowClear(false);
        onClear === null || onClear === void 0 ? void 0 : onClear();
        var input = document.getElementById(uniqueId);
        var event = new Event('change');
        input.value = '';
        input.dispatchEvent(event);
        onChange === null || onChange === void 0 ? void 0 : onChange(event);
    };
    return (React.createElement("div", { className: (0, clsx_1.default)(classes.root, fullWidth && classes.fullWidth, className) },
        React.createElement("input", __assign({ "aria-describedby": (0, forms_1.buildDescribedBy)({
                hasHelpMessage: !!helpMessage,
                uniqueId: uniqueId,
            }), "aria-label": ariaLabel || 'Search field', className: (0, clsx_1.default)(classes.input, (_b = {},
                _b[classes.inputInverse] = color === 'inverse',
                _b), (_c = {},
                _c[classes.inputHeight0] = height === 0,
                _c[classes.inputHeight1] = height === 1,
                _c)), id: uniqueId, name: name, ref: ref, type: "search", onChange: handleChange, onKeyPress: handleKeyPress, onFocus: handleFocus, onBlur: handleBlur, value: value }, rootProps)),
        React.createElement("button", { "aria-label": showClear ? 'Clear input' : 'Search', className: (0, clsx_1.default)(classes.button, (_d = {},
                _d[classes.buttonHeight0] = height === 0,
                _d[classes.buttonHeight1] = height === 1,
                _d)), tabIndex: -1, onClick: handleClearButtonClick },
            React.createElement("svg", { className: (0, clsx_1.default)(classes.buttonSvg, color === 'inverse' && classes.buttonSvgInverse, showClear && classes.buttonSvgClear, color === 'inverse' && showClear && classes.buttonSvgClearInverse), viewBox: "0 0 100 100", role: "img", "aria-hidden": true },
                React.createElement("circle", { r: "24.5", cy: "54.200001", cx: "45.700001" }),
                React.createElement("path", { d: "M 37.240349,46.733243 72.551185,82.414382" }),
                React.createElement("rect", { x: "0", y: "0", width: "100", height: "100" }))),
        helpMessage && (React.createElement(forms_1.FormHelpMessage, { className: classes.helpMessage, color: color, rootElementId: uniqueId, describedById: (0, forms_1.helpFor)(uniqueId) }, helpMessage))));
});
//# sourceMappingURL=data:application/json;base64,