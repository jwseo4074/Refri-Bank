"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var createTypography_1 = require("../../styles/createTypography");
var styles_1 = require("../../styles");
var framer_motion_1 = require("framer-motion");
var Portal_1 = require("reakit/Portal");
var Tooltip_1 = require("reakit/Tooltip");
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
exports.TooltipStylesKey = 'ChromaTooltip';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        backgroundColor: theme.palette.common.black,
        borderRadius: theme.pxToRem(4),
        boxShadow: theme.boxShadows.tooltip,
        color: theme.palette.common.white,
        fontFamily: theme.typography.fontFamily,
        fontSize: createTypography_1.fontSizes.tooltip,
        letterSpacing: '0.021875em',
        maxWidth: theme.pxToRem(500),
        paddingLeft: theme.spacing(1),
        paddingRight: theme.spacing(1),
        paddingTop: theme.spacing(0.5),
        paddingBottom: theme.spacing(0.75),
        zIndex: 1300,
    },
}); }, { name: exports.TooltipStylesKey });
exports.Tooltip = function (_a) {
    var children = _a.children, className = _a.className, _b = _a.defaultVisible, defaultVisible = _b === void 0 ? false : _b, _c = _a.placement, placement = _c === void 0 ? 'bottom' : _c, _d = _a.title, title = _d === void 0 ? '' : _d, gutter = _a.gutter, rootProps = __rest(_a, ["children", "className", "defaultVisible", "placement", "title", "gutter"]);
    var classes = exports.useStyles({});
    var shouldReduceMotion = framer_motion_1.useReducedMotion();
    var tooltip = Tooltip_1.useTooltipState({
        placement: placement,
        visible: defaultVisible,
        gutter: gutter,
    });
    React.useEffect(function () {
        tooltip.place(placement);
    }, [placement, tooltip]);
    return (React.createElement(React.Fragment, null,
        React.createElement(Tooltip_1.TooltipReference, __assign({}, tooltip), function (referenceProps) {
            return React.cloneElement(React.Children.only(children), referenceProps);
        }),
        React.createElement(Portal_1.Portal, null,
            React.createElement(Tooltip_1.Tooltip, __assign({}, tooltip, { as: framer_motion_1.motion.div, className: clsx_1.default(classes.root, className), animate: tooltip.visible
                    ? shouldReduceMotion
                        ? { opacity: 1 }
                        : {
                            opacity: 1,
                            transition: { delay: 0.75 },
                        }
                    : {
                        opacity: 0,
                    } }, rootProps), title))));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9vbHRpcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1Rvb2x0aXAvVG9vbHRpcC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGtFQUEwRDtBQUUxRCx1Q0FBMEM7QUFDMUMsK0NBQXlEO0FBQ3pELHdDQUF1QztBQUN2QywwQ0FNd0I7QUFDeEIsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUVsQixRQUFBLGdCQUFnQixHQUFHLGVBQWUsQ0FBQztBQUVuQyxRQUFBLFNBQVMsR0FBRyxtQkFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSztRQUMzQyxZQUFZLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDOUIsU0FBUyxFQUFFLEtBQUssQ0FBQyxVQUFVLENBQUMsT0FBTztRQUNuQyxLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSztRQUNqQyxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFVO1FBQ3ZDLFFBQVEsRUFBRSw0QkFBUyxDQUFDLE9BQU87UUFDM0IsYUFBYSxFQUFFLFlBQVk7UUFDM0IsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQzVCLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3QixZQUFZLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDOUIsVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQzlCLGFBQWEsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQyxNQUFNLEVBQUUsSUFBSTtLQUNiO0NBQ0YsQ0FBQyxFQWhCUyxDQWdCVCxFQUNGLEVBQUUsSUFBSSxFQUFFLHdCQUFnQixFQUFFLENBQzNCLENBQUM7QUFXVyxRQUFBLE9BQU8sR0FBMkIsVUFBQyxFQVEvQztJQVBDLElBQUEsc0JBQVEsRUFDUix3QkFBUyxFQUNULHNCQUFzQixFQUF0QiwyQ0FBc0IsRUFDdEIsaUJBQW9CLEVBQXBCLHlDQUFvQixFQUNwQixhQUFVLEVBQVYsK0JBQVUsRUFDVixrQkFBTSxFQUNOLG1HQUFZO0lBRVosSUFBTSxPQUFPLEdBQUcsaUJBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUU5QixJQUFNLGtCQUFrQixHQUFHLGdDQUFnQixFQUFFLENBQUM7SUFFOUMsSUFBTSxPQUFPLEdBQUcseUJBQWUsQ0FBQztRQUM5QixTQUFTLFdBQUE7UUFDVCxPQUFPLEVBQUUsY0FBYztRQUN2QixNQUFNLFFBQUE7S0FDUCxDQUFDLENBQUM7SUFFSCxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ2QsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMzQixDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUV6QixPQUFPLENBQ0w7UUFDRSxvQkFBQywwQkFBZ0IsZUFBSyxPQUFPLEdBQzFCLFVBQUMsY0FBYztZQUNkLE9BQUEsS0FBSyxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxjQUFjLENBQUM7UUFBakUsQ0FBaUUsQ0FFbEQ7UUFDbkIsb0JBQUMsZUFBTTtZQUNMLG9CQUFDLGlCQUFhLGVBQ1IsT0FBTyxJQUNYLEVBQUUsRUFBRSxzQkFBTSxDQUFDLEdBQUcsRUFDZCxTQUFTLEVBQUUsY0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLEVBQ3hDLE9BQU8sRUFDTCxPQUFPLENBQUMsT0FBTztvQkFDYixDQUFDLENBQUMsa0JBQWtCO3dCQUNsQixDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFO3dCQUNoQixDQUFDLENBQUM7NEJBQ0UsT0FBTyxFQUFFLENBQUM7NEJBQ1YsVUFBVSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTt5QkFDNUI7b0JBQ0wsQ0FBQyxDQUFDO3dCQUNFLE9BQU8sRUFBRSxDQUFDO3FCQUNYLElBRUgsU0FBUyxHQUVaLEtBQUssQ0FDUSxDQUNULENBQ1IsQ0FDSixDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9udFNpemVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzL2NyZWF0ZVR5cG9ncmFwaHknO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IG1vdGlvbiwgdXNlUmVkdWNlZE1vdGlvbiB9IGZyb20gJ2ZyYW1lci1tb3Rpb24nO1xuaW1wb3J0IHsgUG9ydGFsIH0gZnJvbSAncmVha2l0L1BvcnRhbCc7XG5pbXBvcnQge1xuICBUb29sdGlwIGFzIFJlYWtpdFRvb2x0aXAsXG4gIFRvb2x0aXBQcm9wcyBhcyBSZWFraXRUb29sdGlwUHJvcHMsXG4gIFRvb2x0aXBSZWZlcmVuY2UsXG4gIHVzZVRvb2x0aXBTdGF0ZSxcbiAgVG9vbHRpcEluaXRpYWxTdGF0ZSxcbn0gZnJvbSAncmVha2l0L1Rvb2x0aXAnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBjb25zdCBUb29sdGlwU3R5bGVzS2V5ID0gJ0Nocm9tYVRvb2x0aXAnO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24uYmxhY2ssXG4gICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnB4VG9SZW0oNCksXG4gICAgICBib3hTaGFkb3c6IHRoZW1lLmJveFNoYWRvd3MudG9vbHRpcCxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgIGZvbnRGYW1pbHk6IHRoZW1lLnR5cG9ncmFwaHkuZm9udEZhbWlseSxcbiAgICAgIGZvbnRTaXplOiBmb250U2l6ZXMudG9vbHRpcCxcbiAgICAgIGxldHRlclNwYWNpbmc6ICcwLjAyMTg3NWVtJyxcbiAgICAgIG1heFdpZHRoOiB0aGVtZS5weFRvUmVtKDUwMCksXG4gICAgICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZygxKSxcbiAgICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZygxKSxcbiAgICAgIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcoMC41KSxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnNwYWNpbmcoMC43NSksXG4gICAgICB6SW5kZXg6IDEzMDAsXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogVG9vbHRpcFN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBUb29sdGlwQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9vbHRpcFByb3BzXG4gIGV4dGVuZHMgUGljazxSZWFraXRUb29sdGlwUHJvcHMsICdjbGFzc05hbWUnIHwgJ2hpZGRlbicgfCAndGl0bGUnPixcbiAgICBQaWNrPFRvb2x0aXBJbml0aWFsU3RhdGUsICdwbGFjZW1lbnQnIHwgJ2d1dHRlcic+IHtcbiAgY2hpbGRyZW4/OiBhbnk7XG4gIGRlZmF1bHRWaXNpYmxlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0IFRvb2x0aXA6IFJlYWN0LkZDPFRvb2x0aXBQcm9wcz4gPSAoe1xuICBjaGlsZHJlbixcbiAgY2xhc3NOYW1lLFxuICBkZWZhdWx0VmlzaWJsZSA9IGZhbHNlLFxuICBwbGFjZW1lbnQgPSAnYm90dG9tJyxcbiAgdGl0bGUgPSAnJyxcbiAgZ3V0dGVyLFxuICAuLi5yb290UHJvcHNcbn0pID0+IHtcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7fSk7XG5cbiAgY29uc3Qgc2hvdWxkUmVkdWNlTW90aW9uID0gdXNlUmVkdWNlZE1vdGlvbigpO1xuXG4gIGNvbnN0IHRvb2x0aXAgPSB1c2VUb29sdGlwU3RhdGUoe1xuICAgIHBsYWNlbWVudCxcbiAgICB2aXNpYmxlOiBkZWZhdWx0VmlzaWJsZSxcbiAgICBndXR0ZXIsXG4gIH0pO1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgdG9vbHRpcC5wbGFjZShwbGFjZW1lbnQpO1xuICB9LCBbcGxhY2VtZW50LCB0b29sdGlwXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFRvb2x0aXBSZWZlcmVuY2Ugey4uLnRvb2x0aXB9PlxuICAgICAgICB7KHJlZmVyZW5jZVByb3BzKSA9PlxuICAgICAgICAgIFJlYWN0LmNsb25lRWxlbWVudChSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSwgcmVmZXJlbmNlUHJvcHMpXG4gICAgICAgIH1cbiAgICAgIDwvVG9vbHRpcFJlZmVyZW5jZT5cbiAgICAgIDxQb3J0YWw+XG4gICAgICAgIDxSZWFraXRUb29sdGlwXG4gICAgICAgICAgey4uLnRvb2x0aXB9XG4gICAgICAgICAgYXM9e21vdGlvbi5kaXZ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKX1cbiAgICAgICAgICBhbmltYXRlPXtcbiAgICAgICAgICAgIHRvb2x0aXAudmlzaWJsZVxuICAgICAgICAgICAgICA/IHNob3VsZFJlZHVjZU1vdGlvblxuICAgICAgICAgICAgICAgID8geyBvcGFjaXR5OiAxIH1cbiAgICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogeyBkZWxheTogMC43NSB9LFxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICB7Li4ucm9vdFByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L1JlYWtpdFRvb2x0aXA+XG4gICAgICA8L1BvcnRhbD5cbiAgICA8Lz5cbiAgKTtcbn07XG4iXX0=