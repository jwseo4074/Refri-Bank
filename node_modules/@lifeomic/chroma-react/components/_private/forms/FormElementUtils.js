"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A utility function to build the `aria-describedby` attribute.
 *
 * @param hasError - Boolean to define if component has an error
 * @param hasHelpMessage - Boolean to define if component has a help message
 * @param uniqueId - Unique identifier for the element.
 */
exports.buildDescribedBy = function (_a) {
    var hasError = _a.hasError, hasHelpMessage = _a.hasHelpMessage, uniqueId = _a.uniqueId;
    if (!exports.buildDescribedBy || (!hasHelpMessage && !hasError)) {
        // Type requires either string | undefined
        return undefined;
    }
    if (hasError && hasHelpMessage) {
        return exports.errorFor(uniqueId) + " " + exports.helpFor(uniqueId);
    }
    if (hasError) {
        return exports.errorFor(uniqueId);
    }
    if (hasHelpMessage) {
        return exports.helpFor(uniqueId);
    }
};
exports.errorFor = function (uniqueId) { return "error-for-" + uniqueId; };
exports.helpFor = function (uniqueId) { return "help-for-" + uniqueId; };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybUVsZW1lbnRVdGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL19wcml2YXRlL2Zvcm1zL0Zvcm1FbGVtZW50VXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFrREE7Ozs7OztHQU1HO0FBQ1UsUUFBQSxnQkFBZ0IsR0FBRyxVQUFDLEVBSVQ7UUFIdEIsc0JBQVEsRUFDUixrQ0FBYyxFQUNkLHNCQUFRO0lBRVIsSUFBSSxDQUFDLHdCQUFnQixJQUFJLENBQUMsQ0FBQyxjQUFjLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUN2RCwwQ0FBMEM7UUFDMUMsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFFRCxJQUFJLFFBQVEsSUFBSSxjQUFjLEVBQUU7UUFDOUIsT0FBVSxnQkFBUSxDQUFDLFFBQVEsQ0FBQyxTQUFJLGVBQU8sQ0FBQyxRQUFRLENBQUcsQ0FBQztLQUNyRDtJQUVELElBQUksUUFBUSxFQUFFO1FBQ1osT0FBTyxnQkFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQzNCO0lBRUQsSUFBSSxjQUFjLEVBQUU7UUFDbEIsT0FBTyxlQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDMUI7QUFDSCxDQUFDLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBRyxVQUFDLFFBQWdCLElBQUssT0FBQSxlQUFhLFFBQVUsRUFBdkIsQ0FBdUIsQ0FBQztBQUN6RCxRQUFBLE9BQU8sR0FBRyxVQUFDLFFBQWdCLElBQUssT0FBQSxjQUFZLFFBQVUsRUFBdEIsQ0FBc0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGRlc2NyaXB0aW9uIEJhc2UgaW50ZXJmYWNlIGZvciBhbGwgZm9ybSBjb21wb25lbnRzLiAgRXh0ZW5kcyB0aGUgPGlucHV0IC8+XG4gKiBlbGVtZW50IHByb3BzLiAgQWxsb3dzIGZvciBSZWFjdE5vZGUgb24gbGFiZWwgcHJvcC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBCYXNlRm9ybUVsZW1lbnRXaXRoTm9kZUxhYmVsXG4gIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCdpbnB1dCc+IHtcbiAgY29sb3I/OiAnZGVmYXVsdCcgfCAnaW52ZXJzZSc7XG4gIGhhc0Vycm9yPzogYm9vbGVhbjtcbiAgZXJyb3JNZXNzYWdlPzogc3RyaW5nO1xuICBoZWxwTWVzc2FnZT86IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZyB8IFJlYWN0LlJlYWN0Tm9kZTtcbn1cblxuLyoqXG4gKiBAZGVzY3JpcHRpb24gQmFzZSBpbnRlcmZhY2UgZm9yIGFsbCBmb3JtIGNvbXBvbmVudHMuICBFeHRlbmRzIHRoZSA8aW5wdXQgLz5cbiAqIGVsZW1lbnQgcHJvcHMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQmFzZUZvcm1FbGVtZW50IGV4dGVuZHMgQmFzZUZvcm1FbGVtZW50V2l0aE5vZGVMYWJlbCB7XG4gIGxhYmVsOiBzdHJpbmc7XG59XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uIEJhc2UgaW50ZXJmYWNlIGZvciBmb3JtIG1lc3NhZ2VzLiAgVGhlc2UgYXJlIHR5cGljYWxseSBoZWxwXG4gKiBvciBlcnJvciBtZXNzYWdlcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBCYXNlRm9ybU1lc3NhZ2Uge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGNvbG9yPzogJ2RlZmF1bHQnIHwgJ2ludmVyc2UnO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRoZSByb290IGZvcm0gZWxlbWVudCBcImlkXCIuICBUaGlzIGlzIG5vcm1hbGx5IHRoZSBpZFxuICAgKiBhcHBsaWVkIHRvIGFuIDxpbnB1dCAvPiBlbGVtZW50LiAgV2UgdXNlIHRoaXMgcHJvcCB0byBzZXQgdGhlXG4gICAqIFwiZXJyb3ItZm9yXCIgYW5kIFwiaGVscC1mb3JcIiBhdHRyaWJ1dGVzLlxuICAgKi9cbiAgcm9vdEVsZW1lbnRJZD86IHN0cmluZztcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBBIHVuaXF1ZSBpbmRlbnRpZmllciB1c2VkIHRvIHNldCB0aGUgXCJpZFwiIG9mIHRoaXMgZWxlbWVudCxcbiAgICogd2hpY2ggY29ubmVjdHMgaXQgd2l0aCB0aGUgcm9vdCBlbGVtZW50LiAgVGhpcyBlbnN1cmVzIHNjcmVlbiByZWFkZXJzXG4gICAqIGNhbiByZWFkIHRoZSBlcnJvciBhbmQgaGVscCBtZXNzYWdlcyB3aGVuIG9uZSBhcHBlYXJzLlxuICAgKiBUaGlzIElEIHNob3VsZCBiZSBzb21ldGhpbmcgbGlrZSBcImVycm9yLWZvci08aWQtb2YtaW5wdXQtZWxlbWVudD5cIiBvclxuICAgKiBcImhlbHAtZm9yLTxpZC1vZi1pbnB1dC1lbGVtZW50PlwiLlxuICAgKi9cbiAgZGVzY3JpYmVkQnlJZD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBidWlsZERlc2NyaWJlZEJ5UHJvcHMge1xuICBoYXNFcnJvcj86IGJvb2xlYW47XG4gIGhhc0hlbHBNZXNzYWdlPzogYm9vbGVhbjtcbiAgdW5pcXVlSWQ6IHN0cmluZztcbn1cblxuLyoqXG4gKiBBIHV0aWxpdHkgZnVuY3Rpb24gdG8gYnVpbGQgdGhlIGBhcmlhLWRlc2NyaWJlZGJ5YCBhdHRyaWJ1dGUuXG4gKlxuICogQHBhcmFtIGhhc0Vycm9yIC0gQm9vbGVhbiB0byBkZWZpbmUgaWYgY29tcG9uZW50IGhhcyBhbiBlcnJvclxuICogQHBhcmFtIGhhc0hlbHBNZXNzYWdlIC0gQm9vbGVhbiB0byBkZWZpbmUgaWYgY29tcG9uZW50IGhhcyBhIGhlbHAgbWVzc2FnZVxuICogQHBhcmFtIHVuaXF1ZUlkIC0gVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBlbGVtZW50LlxuICovXG5leHBvcnQgY29uc3QgYnVpbGREZXNjcmliZWRCeSA9ICh7XG4gIGhhc0Vycm9yLFxuICBoYXNIZWxwTWVzc2FnZSxcbiAgdW5pcXVlSWQsXG59OiBidWlsZERlc2NyaWJlZEJ5UHJvcHMpID0+IHtcbiAgaWYgKCFidWlsZERlc2NyaWJlZEJ5IHx8ICghaGFzSGVscE1lc3NhZ2UgJiYgIWhhc0Vycm9yKSkge1xuICAgIC8vIFR5cGUgcmVxdWlyZXMgZWl0aGVyIHN0cmluZyB8IHVuZGVmaW5lZFxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAoaGFzRXJyb3IgJiYgaGFzSGVscE1lc3NhZ2UpIHtcbiAgICByZXR1cm4gYCR7ZXJyb3JGb3IodW5pcXVlSWQpfSAke2hlbHBGb3IodW5pcXVlSWQpfWA7XG4gIH1cblxuICBpZiAoaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZXJyb3JGb3IodW5pcXVlSWQpO1xuICB9XG5cbiAgaWYgKGhhc0hlbHBNZXNzYWdlKSB7XG4gICAgcmV0dXJuIGhlbHBGb3IodW5pcXVlSWQpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZXJyb3JGb3IgPSAodW5pcXVlSWQ6IHN0cmluZykgPT4gYGVycm9yLWZvci0ke3VuaXF1ZUlkfWA7XG5leHBvcnQgY29uc3QgaGVscEZvciA9ICh1bmlxdWVJZDogc3RyaW5nKSA9PiBgaGVscC1mb3ItJHt1bmlxdWVJZH1gO1xuIl19