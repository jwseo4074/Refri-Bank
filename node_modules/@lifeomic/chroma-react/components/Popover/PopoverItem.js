"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopoverItem = exports.useStyles = exports.PopoverItemStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
var Text_1 = require("../Text");
exports.PopoverItemStylesKey = 'ChromaPopoverItem';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        display: 'flex',
        alignItems: 'center',
        padding: theme.spacing(1.25, 2.5),
        transition: 'background 0.25s ease, opacity 0.25s ease',
        '&:focus': {
            outline: 'none',
        },
    },
    hoverPointer: {
        '&:hover, &:focus': {
            backgroundColor: 'rgba(222,244,252, 0.6)',
            cursor: 'pointer',
        },
    },
    icon: {
        marginRight: theme.spacing(2),
    },
    text: {
        letterSpacing: 0.25,
    },
    clipText: {
        overflow: 'hidden',
        textOverflow: 'ellipsis',
    },
    textNoWrap: {
        whiteSpace: 'nowrap',
    },
    justifyStart: {
        justifyContent: 'flex-start',
    },
    justifyBetween: {
        justifyContent: 'space-between',
    },
    justifyCenter: {
        justifyContent: 'center',
    },
    justifyEnd: {
        justifyContent: 'flex-end',
    },
    directionRow: {
        flexDirection: 'row',
    },
    directionRowReverse: {
        flexDirection: 'row-reverse',
    },
}); }, { name: exports.PopoverItemStylesKey });
exports.PopoverItem = React.forwardRef(function (_a, ref) {
    var _b, _c;
    var className = _a.className, clipText = _a.clipText, children = _a.children, _d = _a.direction, direction = _d === void 0 ? 'row' : _d, Icon = _a.icon, _e = _a.justify, justify = _e === void 0 ? 'flex-start' : _e, _f = _a.noTextWrap, noTextWrap = _f === void 0 ? false : _f, onClick = _a.onClick, text = _a.text, additionalClasses = _a.classes, rootProps = __rest(_a, ["className", "clipText", "children", "direction", "icon", "justify", "noTextWrap", "onClick", "text", "classes"]);
    var classes = (0, exports.useStyles)({ classes: additionalClasses });
    return (React.createElement("li", __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, onClick && classes.hoverPointer, (_b = {},
            _b[classes.justifyCenter] = justify === 'center',
            _b[classes.justifyBetween] = justify === 'space-between',
            _b[classes.justifyStart] = justify === 'flex-start',
            _b[classes.justifyEnd] = justify === 'flex-end',
            _b), (_c = {},
            _c[classes.directionRow] = direction === 'row',
            _c[classes.directionRowReverse] = direction === 'row-reverse',
            _c), className), role: "button", onClick: onClick, tabIndex: 0 }, rootProps),
        !!Icon && (React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon, width: 18, height: 18 })),
        !!text && (React.createElement(Text_1.Text, { className: (0, clsx_1.default)(classes.text, noTextWrap && classes.textNoWrap, clipText && classes.clipText) }, text)),
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9wb3Zlckl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Qb3BvdmVyL1BvcG92ZXJJdGVtLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBd0I7QUFDeEIsMkNBQStCO0FBQy9CLHVDQUEwQztBQUUxQyxnQ0FBK0I7QUFFbEIsUUFBQSxvQkFBb0IsR0FBRyxtQkFBbUIsQ0FBQztBQUUzQyxRQUFBLFNBQVMsR0FBRyxJQUFBLG1CQUFVLEVBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsVUFBVSxFQUFFLFFBQVE7UUFDcEIsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQztRQUNqQyxVQUFVLEVBQUUsMkNBQTJDO1FBQ3ZELFNBQVMsRUFBRTtZQUNULE9BQU8sRUFBRSxNQUFNO1NBQ2hCO0tBQ0Y7SUFDRCxZQUFZLEVBQUU7UUFDWixrQkFBa0IsRUFBRTtZQUNsQixlQUFlLEVBQUUsd0JBQXdCO1lBQ3pDLE1BQU0sRUFBRSxTQUFTO1NBQ2xCO0tBQ0Y7SUFDRCxJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDOUI7SUFDRCxJQUFJLEVBQUU7UUFDSixhQUFhLEVBQUUsSUFBSTtLQUNwQjtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxRQUFRO1FBQ2xCLFlBQVksRUFBRSxVQUFVO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFO1FBQ1YsVUFBVSxFQUFFLFFBQVE7S0FDckI7SUFDRCxZQUFZLEVBQUU7UUFDWixjQUFjLEVBQUUsWUFBWTtLQUM3QjtJQUNELGNBQWMsRUFBRTtRQUNkLGNBQWMsRUFBRSxlQUFlO0tBQ2hDO0lBQ0QsYUFBYSxFQUFFO1FBQ2IsY0FBYyxFQUFFLFFBQVE7S0FDekI7SUFDRCxVQUFVLEVBQUU7UUFDVixjQUFjLEVBQUUsVUFBVTtLQUMzQjtJQUNELFlBQVksRUFBRTtRQUNaLGFBQWEsRUFBRSxLQUFLO0tBQ3JCO0lBQ0QsbUJBQW1CLEVBQUU7UUFDbkIsYUFBYSxFQUFFLGFBQWE7S0FDN0I7Q0FDRixDQUFDLEVBL0NTLENBK0NULEVBQ0YsRUFBRSxJQUFJLEVBQUUsNEJBQW9CLEVBQUUsQ0FDL0IsQ0FBQztBQWlCVyxRQUFBLFdBQVcsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUN6QyxVQUNFLEVBWUMsRUFDRCxHQUFHOztJQVpELElBQUEsU0FBUyxlQUFBLEVBQ1QsUUFBUSxjQUFBLEVBQ1IsUUFBUSxjQUFBLEVBQ1IsaUJBQWlCLEVBQWpCLFNBQVMsbUJBQUcsS0FBSyxLQUFBLEVBQ1gsSUFBSSxVQUFBLEVBQ1YsZUFBc0IsRUFBdEIsT0FBTyxtQkFBRyxZQUFZLEtBQUEsRUFDdEIsa0JBQWtCLEVBQWxCLFVBQVUsbUJBQUcsS0FBSyxLQUFBLEVBQ2xCLE9BQU8sYUFBQSxFQUNQLElBQUksVUFBQSxFQUNLLGlCQUFpQixhQUFBLEVBQ3ZCLFNBQVMsY0FYZCxpSEFZQyxDQURhO0lBSWQsSUFBTSxPQUFPLEdBQUcsSUFBQSxpQkFBUyxFQUFDLEVBQUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLENBQUMsQ0FBQztJQUUxRCxPQUFPLENBQ0wscUNBQ0UsR0FBRyxFQUFFLEdBQUcsRUFDUixTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQ2IsT0FBTyxDQUFDLElBQUksRUFDWixPQUFPLElBQUksT0FBTyxDQUFDLFlBQVk7WUFFN0IsR0FBQyxPQUFPLENBQUMsYUFBYSxJQUFHLE9BQU8sS0FBSyxRQUFRO1lBQzdDLEdBQUMsT0FBTyxDQUFDLGNBQWMsSUFBRyxPQUFPLEtBQUssZUFBZTtZQUNyRCxHQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUcsT0FBTyxLQUFLLFlBQVk7WUFDaEQsR0FBQyxPQUFPLENBQUMsVUFBVSxJQUFHLE9BQU8sS0FBSyxVQUFVOztZQUc1QyxHQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUcsU0FBUyxLQUFLLEtBQUs7WUFDM0MsR0FBQyxPQUFPLENBQUMsbUJBQW1CLElBQUcsU0FBUyxLQUFLLGFBQWE7aUJBRTVELFNBQVMsQ0FDVixFQUNELElBQUksRUFBQyxRQUFRLEVBQ2IsT0FBTyxFQUFFLE9BQU8sRUFDaEIsUUFBUSxFQUFFLENBQUMsSUFDUCxTQUFTO1FBRVosQ0FBQyxDQUFDLElBQUksSUFBSSxDQUNULG9CQUFDLElBQUksSUFDSCxJQUFJLEVBQUMsS0FBSyx1QkFFVixTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksRUFDdkIsS0FBSyxFQUFFLEVBQUUsRUFDVCxNQUFNLEVBQUUsRUFBRSxHQUNWLENBQ0g7UUFDQSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQ1Qsb0JBQUMsV0FBSSxJQUNILFNBQVMsRUFBRSxJQUFBLGNBQUksRUFDYixPQUFPLENBQUMsSUFBSSxFQUNaLFVBQVUsSUFBSSxPQUFPLENBQUMsVUFBVSxFQUNoQyxRQUFRLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FDN0IsSUFFQSxJQUFJLENBQ0EsQ0FDUjtRQUNBLFFBQVEsQ0FDTixDQUNOLENBQUM7QUFDSixDQUFDLENBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcyc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzLCBTdGFuZGFyZFByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi9UZXh0JztcblxuZXhwb3J0IGNvbnN0IFBvcG92ZXJJdGVtU3R5bGVzS2V5ID0gJ0Nocm9tYVBvcG92ZXJJdGVtJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMS4yNSwgMi41KSxcbiAgICAgIHRyYW5zaXRpb246ICdiYWNrZ3JvdW5kIDAuMjVzIGVhc2UsIG9wYWNpdHkgMC4yNXMgZWFzZScsXG4gICAgICAnJjpmb2N1cyc6IHtcbiAgICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGhvdmVyUG9pbnRlcjoge1xuICAgICAgJyY6aG92ZXIsICY6Zm9jdXMnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjIyLDI0NCwyNTIsIDAuNiknLFxuICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBpY29uOiB7XG4gICAgICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZygyKSxcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIGxldHRlclNwYWNpbmc6IDAuMjUsXG4gICAgfSxcbiAgICBjbGlwVGV4dDoge1xuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgdGV4dE92ZXJmbG93OiAnZWxsaXBzaXMnLFxuICAgIH0sXG4gICAgdGV4dE5vV3JhcDoge1xuICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgfSxcbiAgICBqdXN0aWZ5U3RhcnQ6IHtcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gICAgfSxcbiAgICBqdXN0aWZ5QmV0d2Vlbjoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICB9LFxuICAgIGp1c3RpZnlDZW50ZXI6IHtcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICB9LFxuICAgIGp1c3RpZnlFbmQ6IHtcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLFxuICAgIH0sXG4gICAgZGlyZWN0aW9uUm93OiB7XG4gICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICB9LFxuICAgIGRpcmVjdGlvblJvd1JldmVyc2U6IHtcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3ctcmV2ZXJzZScsXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogUG9wb3Zlckl0ZW1TdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgUG9wb3Zlckl0ZW1DbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBQb3BvdmVySXRlbU93blByb3BzXG4gIGV4dGVuZHMgU3RhbmRhcmRQcm9wczxIVE1MTElFbGVtZW50LCBQb3BvdmVySXRlbUNsYXNzZXM+IHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGNsaXBUZXh0PzogYm9vbGVhbjtcbiAgaWNvbj86IFJlYWN0LkNvbXBvbmVudFR5cGU8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+O1xuICB0ZXh0Pzogc3RyaW5nO1xuICBqdXN0aWZ5PzogJ2ZsZXgtc3RhcnQnIHwgJ2NlbnRlcicgfCAnc3BhY2UtYmV0d2VlbicgfCAnZmxleC1lbmQnO1xuICBkaXJlY3Rpb24/OiAncm93JyB8ICdyb3ctcmV2ZXJzZSc7XG4gIG5vVGV4dFdyYXA/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBvcG92ZXJJdGVtUHJvcHMgZXh0ZW5kcyBQb3BvdmVySXRlbU93blByb3BzIHt9XG5cbmV4cG9ydCBjb25zdCBQb3BvdmVySXRlbSA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTExJRWxlbWVudCwgUG9wb3Zlckl0ZW1Qcm9wcz4oXG4gIChcbiAgICB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBjbGlwVGV4dCxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgZGlyZWN0aW9uID0gJ3JvdycsXG4gICAgICBpY29uOiBJY29uLFxuICAgICAganVzdGlmeSA9ICdmbGV4LXN0YXJ0JyxcbiAgICAgIG5vVGV4dFdyYXAgPSBmYWxzZSxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICB0ZXh0LFxuICAgICAgY2xhc3NlczogYWRkaXRpb25hbENsYXNzZXMsXG4gICAgICAuLi5yb290UHJvcHNcbiAgICB9LFxuICAgIHJlZlxuICApID0+IHtcbiAgICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHsgY2xhc3NlczogYWRkaXRpb25hbENsYXNzZXMgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGxpXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICAgY2xhc3Nlcy5yb290LFxuICAgICAgICAgIG9uQ2xpY2sgJiYgY2xhc3Nlcy5ob3ZlclBvaW50ZXIsXG4gICAgICAgICAge1xuICAgICAgICAgICAgW2NsYXNzZXMuanVzdGlmeUNlbnRlcl06IGp1c3RpZnkgPT09ICdjZW50ZXInLFxuICAgICAgICAgICAgW2NsYXNzZXMuanVzdGlmeUJldHdlZW5dOiBqdXN0aWZ5ID09PSAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgICAgICBbY2xhc3Nlcy5qdXN0aWZ5U3RhcnRdOiBqdXN0aWZ5ID09PSAnZmxleC1zdGFydCcsXG4gICAgICAgICAgICBbY2xhc3Nlcy5qdXN0aWZ5RW5kXToganVzdGlmeSA9PT0gJ2ZsZXgtZW5kJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFtjbGFzc2VzLmRpcmVjdGlvblJvd106IGRpcmVjdGlvbiA9PT0gJ3JvdycsXG4gICAgICAgICAgICBbY2xhc3Nlcy5kaXJlY3Rpb25Sb3dSZXZlcnNlXTogZGlyZWN0aW9uID09PSAncm93LXJldmVyc2UnLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICl9XG4gICAgICAgIHJvbGU9XCJidXR0b25cIlxuICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICB0YWJJbmRleD17MH1cbiAgICAgICAgey4uLnJvb3RQcm9wc31cbiAgICAgID5cbiAgICAgICAgeyEhSWNvbiAmJiAoXG4gICAgICAgICAgPEljb25cbiAgICAgICAgICAgIHJvbGU9XCJpbWdcIlxuICAgICAgICAgICAgYXJpYS1oaWRkZW5cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5pY29ufVxuICAgICAgICAgICAgd2lkdGg9ezE4fVxuICAgICAgICAgICAgaGVpZ2h0PXsxOH1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgICB7ISF0ZXh0ICYmIChcbiAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgICAgICBjbGFzc2VzLnRleHQsXG4gICAgICAgICAgICAgIG5vVGV4dFdyYXAgJiYgY2xhc3Nlcy50ZXh0Tm9XcmFwLFxuICAgICAgICAgICAgICBjbGlwVGV4dCAmJiBjbGFzc2VzLmNsaXBUZXh0XG4gICAgICAgICAgICApfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt0ZXh0fVxuICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgKX1cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG4pO1xuIl19