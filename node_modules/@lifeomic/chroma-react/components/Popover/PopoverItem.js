"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
var Text_1 = require("../Text");
exports.PopoverItemStylesKey = 'ChromaPopoverItem';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        display: 'flex',
        alignItems: 'center',
        padding: theme.spacing(1.25, 2.5),
        transition: 'background 0.25s ease, opacity 0.25s ease',
        '&:focus': {
            outline: 'none',
        },
    },
    hoverPointer: {
        '&:hover, &:focus': {
            backgroundColor: 'rgba(222,244,252, 0.6)',
            cursor: 'pointer',
        },
    },
    icon: {
        marginRight: theme.spacing(2),
    },
    text: {
        letterSpacing: 0.25,
    },
    clipText: {
        overflow: 'hidden',
        textOverflow: 'ellipsis',
    },
    textNoWrap: {
        whiteSpace: 'nowrap',
    },
    justifyStart: {
        justifyContent: 'flex-start',
    },
    justifyBetween: {
        justifyContent: 'space-between',
    },
    justifyCenter: {
        justifyContent: 'center',
    },
    justifyEnd: {
        justifyContent: 'flex-end',
    },
    directionRow: {
        flexDirection: 'row',
    },
    directionRowReverse: {
        flexDirection: 'row-reverse',
    },
}); }, { name: exports.PopoverItemStylesKey });
exports.PopoverItem = React.forwardRef(function (_a, ref) {
    var _b, _c;
    var className = _a.className, clipText = _a.clipText, children = _a.children, _d = _a.direction, direction = _d === void 0 ? 'row' : _d, Icon = _a.icon, _e = _a.justify, justify = _e === void 0 ? 'flex-start' : _e, _f = _a.noTextWrap, noTextWrap = _f === void 0 ? false : _f, onClick = _a.onClick, text = _a.text, additionalClasses = _a.classes, rootProps = __rest(_a, ["className", "clipText", "children", "direction", "icon", "justify", "noTextWrap", "onClick", "text", "classes"]);
    var classes = exports.useStyles({ classes: additionalClasses });
    return (React.createElement("li", __assign({ ref: ref, className: clsx_1.default(classes.root, onClick && classes.hoverPointer, (_b = {},
            _b[classes.justifyCenter] = justify === 'center',
            _b[classes.justifyBetween] = justify === 'space-between',
            _b[classes.justifyStart] = justify === 'flex-start',
            _b[classes.justifyEnd] = justify === 'flex-end',
            _b), (_c = {},
            _c[classes.directionRow] = direction === 'row',
            _c[classes.directionRowReverse] = direction === 'row-reverse',
            _c), className), role: "button", onClick: onClick, tabIndex: 0 }, rootProps),
        !!Icon && (React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon, width: 18, height: 18 })),
        !!text && (React.createElement(Text_1.Text, { className: clsx_1.default(classes.text, noTextWrap && classes.textNoWrap, clipText && classes.clipText) }, text)),
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9wb3Zlckl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Qb3BvdmVyL1BvcG92ZXJJdGVtLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUMvQix1Q0FBMEM7QUFFMUMsZ0NBQStCO0FBRWxCLFFBQUEsb0JBQW9CLEdBQUcsbUJBQW1CLENBQUM7QUFFM0MsUUFBQSxTQUFTLEdBQUcsbUJBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixVQUFVLEVBQUUsUUFBUTtRQUNwQixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDO1FBQ2pDLFVBQVUsRUFBRSwyQ0FBMkM7UUFDdkQsU0FBUyxFQUFFO1lBQ1QsT0FBTyxFQUFFLE1BQU07U0FDaEI7S0FDRjtJQUNELFlBQVksRUFBRTtRQUNaLGtCQUFrQixFQUFFO1lBQ2xCLGVBQWUsRUFBRSx3QkFBd0I7WUFDekMsTUFBTSxFQUFFLFNBQVM7U0FDbEI7S0FDRjtJQUNELElBQUksRUFBRTtRQUNKLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztLQUM5QjtJQUNELElBQUksRUFBRTtRQUNKLGFBQWEsRUFBRSxJQUFJO0tBQ3BCO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFFBQVE7UUFDbEIsWUFBWSxFQUFFLFVBQVU7S0FDekI7SUFDRCxVQUFVLEVBQUU7UUFDVixVQUFVLEVBQUUsUUFBUTtLQUNyQjtJQUNELFlBQVksRUFBRTtRQUNaLGNBQWMsRUFBRSxZQUFZO0tBQzdCO0lBQ0QsY0FBYyxFQUFFO1FBQ2QsY0FBYyxFQUFFLGVBQWU7S0FDaEM7SUFDRCxhQUFhLEVBQUU7UUFDYixjQUFjLEVBQUUsUUFBUTtLQUN6QjtJQUNELFVBQVUsRUFBRTtRQUNWLGNBQWMsRUFBRSxVQUFVO0tBQzNCO0lBQ0QsWUFBWSxFQUFFO1FBQ1osYUFBYSxFQUFFLEtBQUs7S0FDckI7SUFDRCxtQkFBbUIsRUFBRTtRQUNuQixhQUFhLEVBQUUsYUFBYTtLQUM3QjtDQUNGLENBQUMsRUEvQ1MsQ0ErQ1QsRUFDRixFQUFFLElBQUksRUFBRSw0QkFBb0IsRUFBRSxDQUMvQixDQUFDO0FBZ0JXLFFBQUEsV0FBVyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQ3pDLFVBQ0UsRUFZQyxFQUNELEdBQUc7O0lBWkQsSUFBQSx3QkFBUyxFQUNULHNCQUFRLEVBQ1Isc0JBQVEsRUFDUixpQkFBaUIsRUFBakIsc0NBQWlCLEVBQ2pCLGNBQVUsRUFDVixlQUFzQixFQUF0QiwyQ0FBc0IsRUFDdEIsa0JBQWtCLEVBQWxCLHVDQUFrQixFQUNsQixvQkFBTyxFQUNQLGNBQUksRUFDSiw4QkFBMEIsRUFDMUIseUlBQVk7SUFJZCxJQUFNLE9BQU8sR0FBRyxpQkFBUyxDQUFDLEVBQUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLENBQUMsQ0FBQztJQUUxRCxPQUFPLENBQ0wscUNBQ0UsR0FBRyxFQUFFLEdBQUcsRUFDUixTQUFTLEVBQUUsY0FBSSxDQUNiLE9BQU8sQ0FBQyxJQUFJLEVBQ1osT0FBTyxJQUFJLE9BQU8sQ0FBQyxZQUFZO1lBRTdCLEdBQUMsT0FBTyxDQUFDLGFBQWEsSUFBRyxPQUFPLEtBQUssUUFBUTtZQUM3QyxHQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUcsT0FBTyxLQUFLLGVBQWU7WUFDckQsR0FBQyxPQUFPLENBQUMsWUFBWSxJQUFHLE9BQU8sS0FBSyxZQUFZO1lBQ2hELEdBQUMsT0FBTyxDQUFDLFVBQVUsSUFBRyxPQUFPLEtBQUssVUFBVTs7WUFHNUMsR0FBQyxPQUFPLENBQUMsWUFBWSxJQUFHLFNBQVMsS0FBSyxLQUFLO1lBQzNDLEdBQUMsT0FBTyxDQUFDLG1CQUFtQixJQUFHLFNBQVMsS0FBSyxhQUFhO2lCQUU1RCxTQUFTLENBQ1YsRUFDRCxJQUFJLEVBQUMsUUFBUSxFQUNiLE9BQU8sRUFBRSxPQUFPLEVBQ2hCLFFBQVEsRUFBRSxDQUFDLElBQ1AsU0FBUztRQUVaLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FDVCxvQkFBQyxJQUFJLElBQ0gsSUFBSSxFQUFDLEtBQUssdUJBRVYsU0FBUyxFQUFFLE9BQU8sQ0FBQyxJQUFJLEVBQ3ZCLEtBQUssRUFBRSxFQUFFLEVBQ1QsTUFBTSxFQUFFLEVBQUUsR0FDVixDQUNIO1FBQ0EsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUNULG9CQUFDLFdBQUksSUFDSCxTQUFTLEVBQUUsY0FBSSxDQUNiLE9BQU8sQ0FBQyxJQUFJLEVBQ1osVUFBVSxJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQ2hDLFFBQVEsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUM3QixJQUVBLElBQUksQ0FDQSxDQUNSO1FBQ0EsUUFBUSxDQUNOLENBQ04sQ0FBQztBQUNKLENBQUMsQ0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IEdldENsYXNzZXMsIFN0YW5kYXJkUHJvcHMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uL1RleHQnO1xuXG5leHBvcnQgY29uc3QgUG9wb3Zlckl0ZW1TdHlsZXNLZXkgPSAnQ2hyb21hUG9wb3Zlckl0ZW0nO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgcGFkZGluZzogdGhlbWUuc3BhY2luZygxLjI1LCAyLjUpLFxuICAgICAgdHJhbnNpdGlvbjogJ2JhY2tncm91bmQgMC4yNXMgZWFzZSwgb3BhY2l0eSAwLjI1cyBlYXNlJyxcbiAgICAgICcmOmZvY3VzJzoge1xuICAgICAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgICB9LFxuICAgIH0sXG4gICAgaG92ZXJQb2ludGVyOiB7XG4gICAgICAnJjpob3ZlciwgJjpmb2N1cyc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgyMjIsMjQ0LDI1MiwgMC42KScsXG4gICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGljb246IHtcbiAgICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgbGV0dGVyU3BhY2luZzogMC4yNSxcbiAgICB9LFxuICAgIGNsaXBUZXh0OiB7XG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgfSxcbiAgICB0ZXh0Tm9XcmFwOiB7XG4gICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICB9LFxuICAgIGp1c3RpZnlTdGFydDoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0JyxcbiAgICB9LFxuICAgIGp1c3RpZnlCZXR3ZWVuOiB7XG4gICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgIH0sXG4gICAganVzdGlmeUNlbnRlcjoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIH0sXG4gICAganVzdGlmeUVuZDoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LWVuZCcsXG4gICAgfSxcbiAgICBkaXJlY3Rpb25Sb3c6IHtcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIH0sXG4gICAgZGlyZWN0aW9uUm93UmV2ZXJzZToge1xuICAgICAgZmxleERpcmVjdGlvbjogJ3Jvdy1yZXZlcnNlJyxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBQb3BvdmVySXRlbVN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBQb3BvdmVySXRlbUNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFBvcG92ZXJJdGVtT3duUHJvcHNcbiAgZXh0ZW5kcyBTdGFuZGFyZFByb3BzPEhUTUxMSUVsZW1lbnQsIFBvcG92ZXJJdGVtQ2xhc3Nlcz4ge1xuICBjbGlwVGV4dD86IGJvb2xlYW47XG4gIGljb24/OiBSZWFjdC5Db21wb25lbnRUeXBlPFJlYWN0LlNWR1Byb3BzPFNWR1NWR0VsZW1lbnQ+PjtcbiAgdGV4dD86IHN0cmluZztcbiAganVzdGlmeT86ICdmbGV4LXN0YXJ0JyB8ICdjZW50ZXInIHwgJ3NwYWNlLWJldHdlZW4nIHwgJ2ZsZXgtZW5kJztcbiAgZGlyZWN0aW9uPzogJ3JvdycgfCAncm93LXJldmVyc2UnO1xuICBub1RleHRXcmFwPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQb3BvdmVySXRlbVByb3BzIGV4dGVuZHMgUG9wb3Zlckl0ZW1Pd25Qcm9wcyB7fVxuXG5leHBvcnQgY29uc3QgUG9wb3Zlckl0ZW0gPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxMSUVsZW1lbnQsIFBvcG92ZXJJdGVtUHJvcHM+KFxuICAoXG4gICAge1xuICAgICAgY2xhc3NOYW1lLFxuICAgICAgY2xpcFRleHQsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGRpcmVjdGlvbiA9ICdyb3cnLFxuICAgICAgaWNvbjogSWNvbixcbiAgICAgIGp1c3RpZnkgPSAnZmxleC1zdGFydCcsXG4gICAgICBub1RleHRXcmFwID0gZmFsc2UsXG4gICAgICBvbkNsaWNrLFxuICAgICAgdGV4dCxcbiAgICAgIGNsYXNzZXM6IGFkZGl0aW9uYWxDbGFzc2VzLFxuICAgICAgLi4ucm9vdFByb3BzXG4gICAgfSxcbiAgICByZWZcbiAgKSA9PiB7XG4gICAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7IGNsYXNzZXM6IGFkZGl0aW9uYWxDbGFzc2VzIH0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxsaVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgIGNsYXNzZXMucm9vdCxcbiAgICAgICAgICBvbkNsaWNrICYmIGNsYXNzZXMuaG92ZXJQb2ludGVyLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFtjbGFzc2VzLmp1c3RpZnlDZW50ZXJdOiBqdXN0aWZ5ID09PSAnY2VudGVyJyxcbiAgICAgICAgICAgIFtjbGFzc2VzLmp1c3RpZnlCZXR3ZWVuXToganVzdGlmeSA9PT0gJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgICAgICAgW2NsYXNzZXMuanVzdGlmeVN0YXJ0XToganVzdGlmeSA9PT0gJ2ZsZXgtc3RhcnQnLFxuICAgICAgICAgICAgW2NsYXNzZXMuanVzdGlmeUVuZF06IGp1c3RpZnkgPT09ICdmbGV4LWVuZCcsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5kaXJlY3Rpb25Sb3ddOiBkaXJlY3Rpb24gPT09ICdyb3cnLFxuICAgICAgICAgICAgW2NsYXNzZXMuZGlyZWN0aW9uUm93UmV2ZXJzZV06IGRpcmVjdGlvbiA9PT0gJ3Jvdy1yZXZlcnNlJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICApfVxuICAgICAgICByb2xlPVwiYnV0dG9uXCJcbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgdGFiSW5kZXg9ezB9XG4gICAgICAgIHsuLi5yb290UHJvcHN9XG4gICAgICA+XG4gICAgICAgIHshIUljb24gJiYgKFxuICAgICAgICAgIDxJY29uXG4gICAgICAgICAgICByb2xlPVwiaW1nXCJcbiAgICAgICAgICAgIGFyaWEtaGlkZGVuXG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXMuaWNvbn1cbiAgICAgICAgICAgIHdpZHRoPXsxOH1cbiAgICAgICAgICAgIGhlaWdodD17MTh9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAgeyEhdGV4dCAmJiAoXG4gICAgICAgICAgPFRleHRcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICAgICAgY2xhc3Nlcy50ZXh0LFxuICAgICAgICAgICAgICBub1RleHRXcmFwICYmIGNsYXNzZXMudGV4dE5vV3JhcCxcbiAgICAgICAgICAgICAgY2xpcFRleHQgJiYgY2xhc3Nlcy5jbGlwVGV4dFxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGV4dH1cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICl9XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfVxuKTtcbiJdfQ==