"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
exports.PopoverActionsStylesKey = 'ChromaPopoverActions';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        borderTop: "1px solid " + theme.palette.divider,
        display: 'flex',
        padding: theme.spacing(1.75, 2),
        '& > *:not(:last-child)': {
            marginRight: theme.spacing(2),
        },
    },
    justifyStart: {
        justifyContent: 'flex-start',
    },
    justifyEnd: {
        justifyContent: 'flex-end',
    },
    justifyCenter: {
        justifyContent: 'center',
    },
}); }, { name: exports.PopoverActionsStylesKey });
exports.PopoverActions = React.forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, _c = _a.justify, justify = _c === void 0 ? 'flex-end' : _c, rootProps = __rest(_a, ["children", "className", "justify"]);
    var classes = exports.useStyles({});
    return (React.createElement("div", __assign({ ref: ref, className: clsx_1.default(classes.root, (_b = {},
            _b[classes.justifyCenter] = justify === 'center',
            _b[classes.justifyEnd] = justify === 'flex-end',
            _b[classes.justifyStart] = justify === 'flex-start',
            _b), className) }, rootProps), children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9wb3ZlckFjdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Qb3BvdmVyL1BvcG92ZXJBY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUMvQix1Q0FBMEM7QUFHN0IsUUFBQSx1QkFBdUIsR0FBRyxzQkFBc0IsQ0FBQztBQUVqRCxRQUFBLFNBQVMsR0FBRyxtQkFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixTQUFTLEVBQUUsZUFBYSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQVM7UUFDL0MsT0FBTyxFQUFFLE1BQU07UUFDZixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLHdCQUF3QixFQUFFO1lBQ3hCLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUM5QjtLQUNGO0lBQ0QsWUFBWSxFQUFFO1FBQ1osY0FBYyxFQUFFLFlBQVk7S0FDN0I7SUFDRCxVQUFVLEVBQUU7UUFDVixjQUFjLEVBQUUsVUFBVTtLQUMzQjtJQUNELGFBQWEsRUFBRTtRQUNiLGNBQWMsRUFBRSxRQUFRO0tBQ3pCO0NBQ0YsQ0FBQyxFQWxCUyxDQWtCVCxFQUNGLEVBQUUsSUFBSSxFQUFFLCtCQUF1QixFQUFFLENBQ2xDLENBQUM7QUFlVyxRQUFBLGNBQWMsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUc1QyxVQUFDLEVBQTJELEVBQUUsR0FBRzs7SUFBOUQsSUFBQSxzQkFBUSxFQUFFLHdCQUFTLEVBQUUsZUFBb0IsRUFBcEIseUNBQW9CLEVBQUUsNERBQVk7SUFDMUQsSUFBTSxPQUFPLEdBQUcsaUJBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUU5QixPQUFPLENBQ0wsc0NBQ0UsR0FBRyxFQUFFLEdBQUcsRUFDUixTQUFTLEVBQUUsY0FBSSxDQUNiLE9BQU8sQ0FBQyxJQUFJO1lBRVYsR0FBQyxPQUFPLENBQUMsYUFBYSxJQUFHLE9BQU8sS0FBSyxRQUFRO1lBQzdDLEdBQUMsT0FBTyxDQUFDLFVBQVUsSUFBRyxPQUFPLEtBQUssVUFBVTtZQUM1QyxHQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUcsT0FBTyxLQUFLLFlBQVk7aUJBRWxELFNBQVMsQ0FDVixJQUNHLFNBQVMsR0FFWixRQUFRLENBQ0wsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5cbmV4cG9ydCBjb25zdCBQb3BvdmVyQWN0aW9uc1N0eWxlc0tleSA9ICdDaHJvbWFQb3BvdmVyQWN0aW9ucyc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgYm9yZGVyVG9wOiBgMXB4IHNvbGlkICR7dGhlbWUucGFsZXR0ZS5kaXZpZGVyfWAsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDEuNzUsIDIpLFxuICAgICAgJyYgPiAqOm5vdCg6bGFzdC1jaGlsZCknOiB7XG4gICAgICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGp1c3RpZnlTdGFydDoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0JyxcbiAgICB9LFxuICAgIGp1c3RpZnlFbmQ6IHtcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLFxuICAgIH0sXG4gICAganVzdGlmeUNlbnRlcjoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IFBvcG92ZXJBY3Rpb25zU3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9wb3ZlckFjdGlvbnNPd25Qcm9wc1xuICBleHRlbmRzIFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFxuICAgIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PixcbiAgICBIVE1MRGl2RWxlbWVudFxuICA+IHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBqdXN0aWZ5PzogJ2ZsZXgtc3RhcnQnIHwgJ2NlbnRlcicgfCAnZmxleC1lbmQnO1xufVxuXG5leHBvcnQgdHlwZSBQb3BvdmVyQWN0aW9uc0NsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFBvcG92ZXJBY3Rpb25zUHJvcHMgZXh0ZW5kcyBQb3BvdmVyQWN0aW9uc093blByb3BzIHt9XG5cbmV4cG9ydCBjb25zdCBQb3BvdmVyQWN0aW9ucyA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxEaXZFbGVtZW50LFxuICBQb3BvdmVyQWN0aW9uc1Byb3BzXG4+KCh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGp1c3RpZnkgPSAnZmxleC1lbmQnLCAuLi5yb290UHJvcHMgfSwgcmVmKSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgIGNsYXNzZXMucm9vdCxcbiAgICAgICAge1xuICAgICAgICAgIFtjbGFzc2VzLmp1c3RpZnlDZW50ZXJdOiBqdXN0aWZ5ID09PSAnY2VudGVyJyxcbiAgICAgICAgICBbY2xhc3Nlcy5qdXN0aWZ5RW5kXToganVzdGlmeSA9PT0gJ2ZsZXgtZW5kJyxcbiAgICAgICAgICBbY2xhc3Nlcy5qdXN0aWZ5U3RhcnRdOiBqdXN0aWZ5ID09PSAnZmxleC1zdGFydCcsXG4gICAgICAgIH0sXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHsuLi5yb290UHJvcHN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufSk7XG4iXX0=