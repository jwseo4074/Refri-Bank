"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
exports.headerHeight = '3.125rem';
exports.HeaderStylesKey = 'ChromaHeader';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundColor: theme.palette.common.white,
        boxShadow: '0px 4px 54px rgba(0, 0, 0, 0.12);',
        display: 'flex',
        flex: 1,
        height: exports.headerHeight,
        left: 'auto',
        minHeight: exports.headerHeight,
        paddingLeft: '1rem',
        paddingRight: '1rem',
        position: 'relative',
        right: 0,
        top: 0,
        width: '100%',
        zIndex: 1100,
    },
    container: {
        display: 'flex',
        alignItems: 'center',
    },
    logo: {
        flexGrow: 0,
        flexShrink: 0,
        marginRight: theme.spacing(1.5),
    },
    centerLogo: {
        position: 'absolute',
        left: '50%',
        transform: 'translateX(-50%)',
        margin: 0,
    },
    left: {
        flex: 1,
        marginRight: theme.spacing(1.5),
    },
    right: {
        flexGrow: 0,
        flexShrink: 1,
    },
}); }, { name: exports.HeaderStylesKey });
exports.Header = React.forwardRef(function (_a, ref) {
    var logo = _a.logo, left = _a.left, right = _a.right, className = _a.className, centerLogo = _a.centerLogo, rootProps = __rest(_a, ["logo", "left", "right", "className", "centerLogo"]);
    var classes = exports.useStyles({});
    return (React.createElement("header", __assign({ ref: ref, className: clsx_1.default(classes.root, className), role: "banner" }, rootProps),
        !!logo && (React.createElement("div", { role: "presentation", className: clsx_1.default(classes.container, classes.logo, centerLogo && classes.centerLogo) }, logo)),
        React.createElement("div", { className: clsx_1.default(classes.container, classes.left) }, left),
        React.createElement("div", { className: clsx_1.default(classes.container, classes.right) }, right)));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVhZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvSGVhZGVyL0hlYWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhDQUF3QjtBQUN4QiwyQ0FBK0I7QUFDL0IsdUNBQTBDO0FBRzdCLFFBQUEsWUFBWSxHQUFHLFVBQVUsQ0FBQztBQUUxQixRQUFBLGVBQWUsR0FBRyxjQUFjLENBQUM7QUFFakMsUUFBQSxTQUFTLEdBQUcsbUJBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osVUFBVSxFQUFFLFFBQVE7UUFDcEIsZUFBZSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFDM0MsU0FBUyxFQUFFLG1DQUFtQztRQUM5QyxPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxDQUFDO1FBQ1AsTUFBTSxFQUFFLG9CQUFZO1FBQ3BCLElBQUksRUFBRSxNQUFNO1FBQ1osU0FBUyxFQUFFLG9CQUFZO1FBQ3ZCLFdBQVcsRUFBRSxNQUFNO1FBQ25CLFlBQVksRUFBRSxNQUFNO1FBQ3BCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLEtBQUssRUFBRSxDQUFDO1FBQ1IsR0FBRyxFQUFFLENBQUM7UUFDTixLQUFLLEVBQUUsTUFBTTtRQUNiLE1BQU0sRUFBRSxJQUFJO0tBQ2I7SUFDRCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsTUFBTTtRQUNmLFVBQVUsRUFBRSxRQUFRO0tBQ3JCO0lBQ0QsSUFBSSxFQUFFO1FBQ0osUUFBUSxFQUFFLENBQUM7UUFDWCxVQUFVLEVBQUUsQ0FBQztRQUNiLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztLQUNoQztJQUNELFVBQVUsRUFBRTtRQUNWLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLElBQUksRUFBRSxLQUFLO1FBQ1gsU0FBUyxFQUFFLGtCQUFrQjtRQUM3QixNQUFNLEVBQUUsQ0FBQztLQUNWO0lBQ0QsSUFBSSxFQUFFO1FBQ0osSUFBSSxFQUFFLENBQUM7UUFDUCxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7S0FDaEM7SUFDRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUUsQ0FBQztRQUNYLFVBQVUsRUFBRSxDQUFDO0tBQ2Q7Q0FDRixDQUFDLEVBekNTLENBeUNULEVBQ0YsRUFBRSxJQUFJLEVBQUUsdUJBQWUsRUFBRSxDQUMxQixDQUFDO0FBV1csUUFBQSxNQUFNLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FDcEMsVUFBQyxFQUEwRCxFQUFFLEdBQUc7SUFBN0QsSUFBQSxjQUFJLEVBQUUsY0FBSSxFQUFFLGdCQUFLLEVBQUUsd0JBQVMsRUFBRSwwQkFBVSxFQUFFLDRFQUFZO0lBQ3ZELElBQU0sT0FBTyxHQUFHLGlCQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFOUIsT0FBTyxDQUNMLHlDQUNFLEdBQUcsRUFBRSxHQUFHLEVBQ1IsU0FBUyxFQUFFLGNBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxFQUN4QyxJQUFJLEVBQUMsUUFBUSxJQUNULFNBQVM7UUFFWixDQUFDLENBQUMsSUFBSSxJQUFJLENBQ1QsNkJBQ0UsSUFBSSxFQUFDLGNBQWMsRUFDbkIsU0FBUyxFQUFFLGNBQUksQ0FDYixPQUFPLENBQUMsU0FBUyxFQUNqQixPQUFPLENBQUMsSUFBSSxFQUNaLFVBQVUsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUNqQyxJQUVBLElBQUksQ0FDRCxDQUNQO1FBQ0QsNkJBQUssU0FBUyxFQUFFLGNBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBRyxJQUFJLENBQU87UUFDbkUsNkJBQUssU0FBUyxFQUFFLGNBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBRyxLQUFLLENBQU8sQ0FDOUQsQ0FDVixDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5cbmV4cG9ydCBjb25zdCBoZWFkZXJIZWlnaHQgPSAnMy4xMjVyZW0nO1xuXG5leHBvcnQgY29uc3QgSGVhZGVyU3R5bGVzS2V5ID0gJ0Nocm9tYUhlYWRlcic7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICAgICAgYm94U2hhZG93OiAnMHB4IDRweCA1NHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7JyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXg6IDEsXG4gICAgICBoZWlnaHQ6IGhlYWRlckhlaWdodCxcbiAgICAgIGxlZnQ6ICdhdXRvJyxcbiAgICAgIG1pbkhlaWdodDogaGVhZGVySGVpZ2h0LFxuICAgICAgcGFkZGluZ0xlZnQ6ICcxcmVtJyxcbiAgICAgIHBhZGRpbmdSaWdodDogJzFyZW0nLFxuICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICByaWdodDogMCxcbiAgICAgIHRvcDogMCxcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB6SW5kZXg6IDExMDAsXG4gICAgfSxcbiAgICBjb250YWluZXI6IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIH0sXG4gICAgbG9nbzoge1xuICAgICAgZmxleEdyb3c6IDAsXG4gICAgICBmbGV4U2hyaW5rOiAwLFxuICAgICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcoMS41KSxcbiAgICB9LFxuICAgIGNlbnRlckxvZ286IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgbGVmdDogJzUwJScsXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyxcbiAgICAgIG1hcmdpbjogMCxcbiAgICB9LFxuICAgIGxlZnQ6IHtcbiAgICAgIGZsZXg6IDEsXG4gICAgICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZygxLjUpLFxuICAgIH0sXG4gICAgcmlnaHQ6IHtcbiAgICAgIGZsZXhHcm93OiAwLFxuICAgICAgZmxleFNocmluazogMSxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBIZWFkZXJTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgSGVhZGVyQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgSGVhZGVyUHJvcHMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8J2hlYWRlcic+IHtcbiAgbG9nbz86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgbGVmdD86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgcmlnaHQ/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGNlbnRlckxvZ28/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgSGVhZGVyID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MSGVhZGluZ0VsZW1lbnQsIEhlYWRlclByb3BzPihcbiAgKHsgbG9nbywgbGVmdCwgcmlnaHQsIGNsYXNzTmFtZSwgY2VudGVyTG9nbywgLi4ucm9vdFByb3BzIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxoZWFkZXJcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9XG4gICAgICAgIHJvbGU9XCJiYW5uZXJcIlxuICAgICAgICB7Li4ucm9vdFByb3BzfVxuICAgICAgPlxuICAgICAgICB7ISFsb2dvICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICAgICAgY2xhc3Nlcy5jb250YWluZXIsXG4gICAgICAgICAgICAgIGNsYXNzZXMubG9nbyxcbiAgICAgICAgICAgICAgY2VudGVyTG9nbyAmJiBjbGFzc2VzLmNlbnRlckxvZ29cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2xvZ299XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbHN4KGNsYXNzZXMuY29udGFpbmVyLCBjbGFzc2VzLmxlZnQpfT57bGVmdH08L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5jb250YWluZXIsIGNsYXNzZXMucmlnaHQpfT57cmlnaHR9PC9kaXY+XG4gICAgICA8L2hlYWRlcj5cbiAgICApO1xuICB9XG4pO1xuIl19