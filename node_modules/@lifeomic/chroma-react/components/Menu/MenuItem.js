"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuItem = exports.useStyles = exports.MenuItemStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
exports.MenuItemStylesKey = 'ChromaMenuItem';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundColor: theme.palette.common.white,
        border: 'none',
        cursor: 'pointer',
        display: 'flex',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.pxToRem(14),
        letterSpacing: '0.015625em',
        margin: 0,
        outline: 'none',
        overflow: 'hidden',
        padding: theme.spacing(1, 2),
        userSelect: 'none',
        width: '100%',
        '&:hover,&:focus': {
            backgroundColor: 'rgba(222,244,252, 0.6)',
        },
        '&:focus': {
            outline: 'none',
        },
    },
    icon: {
        marginRight: theme.spacing(1),
    },
}); }, { name: exports.MenuItemStylesKey });
exports.MenuItem = React.forwardRef(function (_a, ref) {
    var className = _a.className, children = _a.children, Icon = _a.icon, onClick = _a.onClick, text = _a.text, rootProps = __rest(_a, ["className", "children", "icon", "onClick", "text"]);
    var classes = (0, exports.useStyles)({});
    var handleStopPropagation = function (e) {
        e.stopPropagation();
        onClick && onClick(e);
    };
    return (React.createElement("button", __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, className), onClick: handleStopPropagation }, rootProps),
        !!Icon && (React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon, width: 18, height: 18 })),
        !!text && text,
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVudUl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9NZW51L01lbnVJdGVtLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBd0I7QUFDeEIsMkNBQStCO0FBQy9CLHVDQUEwQztBQUc3QixRQUFBLGlCQUFpQixHQUFHLGdCQUFnQixDQUFDO0FBRXJDLFFBQUEsU0FBUyxHQUFHLElBQUEsbUJBQVUsRUFDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osVUFBVSxFQUFFLFFBQVE7UUFDcEIsZUFBZSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFDM0MsTUFBTSxFQUFFLE1BQU07UUFDZCxNQUFNLEVBQUUsU0FBUztRQUNqQixPQUFPLEVBQUUsTUFBTTtRQUNmLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLFVBQVU7UUFDdkMsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQzNCLGFBQWEsRUFBRSxZQUFZO1FBQzNCLE1BQU0sRUFBRSxDQUFDO1FBQ1QsT0FBTyxFQUFFLE1BQU07UUFDZixRQUFRLEVBQUUsUUFBUTtRQUNsQixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzVCLFVBQVUsRUFBRSxNQUFNO1FBQ2xCLEtBQUssRUFBRSxNQUFNO1FBQ2IsaUJBQWlCLEVBQUU7WUFDakIsZUFBZSxFQUFFLHdCQUF3QjtTQUMxQztRQUNELFNBQVMsRUFBRTtZQUNULE9BQU8sRUFBRSxNQUFNO1NBQ2hCO0tBQ0Y7SUFDRCxJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDOUI7Q0FDRixDQUFDLEVBMUJTLENBMEJULEVBQ0YsRUFBRSxJQUFJLEVBQUUseUJBQWlCLEVBQUUsQ0FDNUIsQ0FBQztBQVdXLFFBQUEsUUFBUSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQ3RDLFVBQUMsRUFBZ0UsRUFBRSxHQUFHO0lBQW5FLElBQUEsU0FBUyxlQUFBLEVBQUUsUUFBUSxjQUFBLEVBQVEsSUFBSSxVQUFBLEVBQUUsT0FBTyxhQUFBLEVBQUUsSUFBSSxVQUFBLEVBQUssU0FBUyxjQUE5RCxvREFBZ0UsQ0FBRjtJQUM3RCxJQUFNLE9BQU8sR0FBRyxJQUFBLGlCQUFTLEVBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUIsSUFBTSxxQkFBcUIsR0FBRyxVQUM1QixDQUFrRDtRQUVsRCxDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDcEIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4QixDQUFDLENBQUM7SUFFRixPQUFPLENBQ0wseUNBQ0UsR0FBRyxFQUFFLEdBQUcsRUFDUixTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsRUFDeEMsT0FBTyxFQUFFLHFCQUFxQixJQUMxQixTQUFTO1FBRVosQ0FBQyxDQUFDLElBQUksSUFBSSxDQUNULG9CQUFDLElBQUksSUFDSCxJQUFJLEVBQUMsS0FBSyx1QkFFVixTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksRUFDdkIsS0FBSyxFQUFFLEVBQUUsRUFDVCxNQUFNLEVBQUUsRUFBRSxHQUNWLENBQ0g7UUFDQSxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUk7UUFDZCxRQUFRLENBQ0YsQ0FDVixDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5cbmV4cG9ydCBjb25zdCBNZW51SXRlbVN0eWxlc0tleSA9ICdDaHJvbWFNZW51SXRlbSc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICAgICAgYm9yZGVyOiAnbm9uZScsXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZvbnRGYW1pbHk6IHRoZW1lLnR5cG9ncmFwaHkuZm9udEZhbWlseSxcbiAgICAgIGZvbnRTaXplOiB0aGVtZS5weFRvUmVtKDE0KSxcbiAgICAgIGxldHRlclNwYWNpbmc6ICcwLjAxNTYyNWVtJyxcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMSwgMiksXG4gICAgICB1c2VyU2VsZWN0OiAnbm9uZScsXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgJyY6aG92ZXIsJjpmb2N1cyc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgyMjIsMjQ0LDI1MiwgMC42KScsXG4gICAgICB9LFxuICAgICAgJyY6Zm9jdXMnOiB7XG4gICAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBpY29uOiB7XG4gICAgICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZygxKSxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBNZW51SXRlbVN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBNZW51SXRlbUNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIE1lbnVJdGVtUHJvcHNcbiAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8J2J1dHRvbic+IHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGljb24/OiBSZWFjdC5Db21wb25lbnRUeXBlPFJlYWN0LlNWR1Byb3BzPFNWR1NWR0VsZW1lbnQ+PjtcbiAgdGV4dD86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IE1lbnVJdGVtID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MQnV0dG9uRWxlbWVudCwgTWVudUl0ZW1Qcm9wcz4oXG4gICh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIGljb246IEljb24sIG9uQ2xpY2ssIHRleHQsIC4uLnJvb3RQcm9wcyB9LCByZWYpID0+IHtcbiAgICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcbiAgICBjb25zdCBoYW5kbGVTdG9wUHJvcGFnYXRpb24gPSAoXG4gICAgICBlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxCdXR0b25FbGVtZW50LCBNb3VzZUV2ZW50PlxuICAgICkgPT4ge1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIG9uQ2xpY2sgJiYgb25DbGljayhlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxidXR0b25cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9XG4gICAgICAgIG9uQ2xpY2s9e2hhbmRsZVN0b3BQcm9wYWdhdGlvbn1cbiAgICAgICAgey4uLnJvb3RQcm9wc31cbiAgICAgID5cbiAgICAgICAgeyEhSWNvbiAmJiAoXG4gICAgICAgICAgPEljb25cbiAgICAgICAgICAgIHJvbGU9XCJpbWdcIlxuICAgICAgICAgICAgYXJpYS1oaWRkZW5cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5pY29ufVxuICAgICAgICAgICAgd2lkdGg9ezE4fVxuICAgICAgICAgICAgaGVpZ2h0PXsxOH1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgICB7ISF0ZXh0ICYmIHRleHR9XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvYnV0dG9uPlxuICAgICk7XG4gIH1cbik7XG4iXX0=