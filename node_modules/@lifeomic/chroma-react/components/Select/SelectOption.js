"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var VisuallyHidden_1 = require("reakit/VisuallyHidden");
var styles_1 = require("../../styles");
var Box_1 = require("../Box");
var Text_1 = require("../Text");
exports.SelectOptionStylesKey = 'ChromaSelectOption';
exports.checkSize = 20;
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        paddingTop: theme.spacing(0.5),
        paddingBottom: theme.spacing(0.5),
    },
    title: {
        lineHeight: 1.3,
    },
    subtitle: {
        color: theme.palette.text.hint,
        lineHeight: 1.25,
        marginBottom: theme.spacing(0.25),
        marginTop: theme.spacing(0.25),
    },
    checked: {
        position: 'relative',
        '&::before': {
            background: theme.palette.primary.main,
            content: "''",
            display: 'block',
            height: "calc(100% + " + theme.spacing(1) + "px)",
            position: 'absolute',
            left: theme.spacing(-2),
            top: theme.spacing(-0.5),
            width: 4,
        },
        '& *': {
            color: theme.palette.primary.main,
            '&$title': {
                fontWeight: 900,
            },
        },
    },
    disabled: {
        cursor: 'not-allowed',
        opacity: 0.625,
    },
}); }, { name: exports.SelectOptionStylesKey });
exports.SelectOption = function (_a) {
    var className = _a.className, children = _a.children, isChecked = _a.isChecked, title = _a.title, subtitle = _a.subtitle, disabled = _a.disabled, rootProps = __rest(_a, ["className", "children", "isChecked", "title", "subtitle", "disabled"]);
    var classes = exports.useStyles({});
    return (React.createElement(Box_1.Box, __assign({ className: clsx_1.default(classes.root, className), fullWidth: true }, rootProps),
        isChecked && (
        // This is required for a11y: we need to have some indicator for our screenreader friends
        React.createElement(VisuallyHidden_1.VisuallyHidden, null, "\u2713")),
        title && (React.createElement(Box_1.Box, { direction: "column", justify: "flex-start", className: clsx_1.default(isChecked && classes.checked, disabled && classes.disabled) },
            title && (React.createElement(Text_1.Text, { className: classes.title, size: "subbody" }, title)),
            subtitle && (React.createElement(Text_1.Text, { className: classes.subtitle, size: "caption" }, subtitle)))),
        children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0T3B0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvU2VsZWN0L1NlbGVjdE9wdGlvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhDQUF3QjtBQUN4QiwyQ0FBK0I7QUFDL0Isd0RBQXVEO0FBQ3ZELHVDQUEwQztBQUUxQyw4QkFBNkI7QUFDN0IsZ0NBQStCO0FBRWxCLFFBQUEscUJBQXFCLEdBQUcsb0JBQW9CLENBQUM7QUFFN0MsUUFBQSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBRWYsUUFBQSxTQUFTLEdBQUcsbUJBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQzlCLGFBQWEsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztLQUNsQztJQUNELEtBQUssRUFBRTtRQUNMLFVBQVUsRUFBRSxHQUFHO0tBQ2hCO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUk7UUFDOUIsVUFBVSxFQUFFLElBQUk7UUFDaEIsWUFBWSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2pDLFNBQVMsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztLQUMvQjtJQUNELE9BQU8sRUFBRTtRQUNQLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLFdBQVcsRUFBRTtZQUNYLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ3RDLE9BQU8sRUFBRSxJQUFJO1lBQ2IsT0FBTyxFQUFFLE9BQU87WUFDaEIsTUFBTSxFQUFFLGlCQUFlLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQUs7WUFDNUMsUUFBUSxFQUFFLFVBQVU7WUFDcEIsSUFBSSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsR0FBRyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUM7WUFDeEIsS0FBSyxFQUFFLENBQUM7U0FDVDtRQUNELEtBQUssRUFBRTtZQUNMLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ2pDLFNBQVMsRUFBRTtnQkFDVCxVQUFVLEVBQUUsR0FBRzthQUNoQjtTQUNGO0tBQ0Y7SUFDRCxRQUFRLEVBQUU7UUFDUixNQUFNLEVBQUUsYUFBYTtRQUNyQixPQUFPLEVBQUUsS0FBSztLQUNmO0NBQ0YsQ0FBQyxFQXJDUyxDQXFDVCxFQUNGLEVBQUUsSUFBSSxFQUFFLDZCQUFxQixFQUFFLENBQ2hDLENBQUM7QUFjVyxRQUFBLFlBQVksR0FBZ0MsVUFBQyxFQVF6RDtJQVBDLElBQUEsd0JBQVMsRUFDVCxzQkFBUSxFQUNSLHdCQUFTLEVBQ1QsZ0JBQUssRUFDTCxzQkFBUSxFQUNSLHNCQUFRLEVBQ1IsK0ZBQVk7SUFFWixJQUFNLE9BQU8sR0FBRyxpQkFBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlCLE9BQU8sQ0FDTCxvQkFBQyxTQUFHLGFBQUMsU0FBUyxFQUFFLGNBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxFQUFFLFNBQVMsVUFBSyxTQUFTO1FBQ25FLFNBQVMsSUFBSTtRQUNaLHlGQUF5RjtRQUN6RixvQkFBQywrQkFBYyxpQkFBMEIsQ0FDMUM7UUFDQSxLQUFLLElBQUksQ0FDUixvQkFBQyxTQUFHLElBQ0YsU0FBUyxFQUFDLFFBQVEsRUFDbEIsT0FBTyxFQUFDLFlBQVksRUFDcEIsU0FBUyxFQUFFLGNBQUksQ0FDYixTQUFTLElBQUksT0FBTyxDQUFDLE9BQU8sRUFDNUIsUUFBUSxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQzdCO1lBRUEsS0FBSyxJQUFJLENBQ1Isb0JBQUMsV0FBSSxJQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxTQUFTLElBQzNDLEtBQUssQ0FDRCxDQUNSO1lBQ0EsUUFBUSxJQUFJLENBQ1gsb0JBQUMsV0FBSSxJQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsUUFBUSxFQUFFLElBQUksRUFBQyxTQUFTLElBQzlDLFFBQVEsQ0FDSixDQUNSLENBQ0csQ0FDUDtRQUNBLFFBQVEsQ0FDTCxDQUNQLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZpc3VhbGx5SGlkZGVuIH0gZnJvbSAncmVha2l0L1Zpc3VhbGx5SGlkZGVuJztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgeyBCb3ggfSBmcm9tICcuLi9Cb3gnO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uL1RleHQnO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0T3B0aW9uU3R5bGVzS2V5ID0gJ0Nocm9tYVNlbGVjdE9wdGlvbic7XG5cbmV4cG9ydCBjb25zdCBjaGVja1NpemUgPSAyMDtcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBwYWRkaW5nVG9wOiB0aGVtZS5zcGFjaW5nKDAuNSksXG4gICAgICBwYWRkaW5nQm90dG9tOiB0aGVtZS5zcGFjaW5nKDAuNSksXG4gICAgfSxcbiAgICB0aXRsZToge1xuICAgICAgbGluZUhlaWdodDogMS4zLFxuICAgIH0sXG4gICAgc3VidGl0bGU6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQuaGludCxcbiAgICAgIGxpbmVIZWlnaHQ6IDEuMjUsXG4gICAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcoMC4yNSksXG4gICAgICBtYXJnaW5Ub3A6IHRoZW1lLnNwYWNpbmcoMC4yNSksXG4gICAgfSxcbiAgICBjaGVja2VkOiB7XG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICcmOjpiZWZvcmUnOiB7XG4gICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgICBjb250ZW50OiBgJydgLFxuICAgICAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgICAgICBoZWlnaHQ6IGBjYWxjKDEwMCUgKyAke3RoZW1lLnNwYWNpbmcoMSl9cHgpYCxcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIGxlZnQ6IHRoZW1lLnNwYWNpbmcoLTIpLFxuICAgICAgICB0b3A6IHRoZW1lLnNwYWNpbmcoLTAuNSksXG4gICAgICAgIHdpZHRoOiA0LFxuICAgICAgfSxcbiAgICAgICcmIConOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgICAgJyYkdGl0bGUnOiB7XG4gICAgICAgICAgZm9udFdlaWdodDogOTAwLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRpc2FibGVkOiB7XG4gICAgICBjdXJzb3I6ICdub3QtYWxsb3dlZCcsXG4gICAgICBvcGFjaXR5OiAwLjYyNSxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBTZWxlY3RPcHRpb25TdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgU2VsZWN0T3B0aW9uQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VsZWN0T3B0aW9uUHJvcHMge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgaXNDaGVja2VkPzogYm9vbGVhbjtcbiAgbWV0YT86IGFueTtcbiAgc3VidGl0bGU/OiBzdHJpbmc7XG4gIHRpdGxlPzogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgU2VsZWN0T3B0aW9uOiBSZWFjdC5GQzxTZWxlY3RPcHRpb25Qcm9wcz4gPSAoe1xuICBjbGFzc05hbWUsXG4gIGNoaWxkcmVuLFxuICBpc0NoZWNrZWQsXG4gIHRpdGxlLFxuICBzdWJ0aXRsZSxcbiAgZGlzYWJsZWQsXG4gIC4uLnJvb3RQcm9wc1xufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcbiAgcmV0dXJuIChcbiAgICA8Qm94IGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9IGZ1bGxXaWR0aCB7Li4ucm9vdFByb3BzfT5cbiAgICAgIHtpc0NoZWNrZWQgJiYgKFxuICAgICAgICAvLyBUaGlzIGlzIHJlcXVpcmVkIGZvciBhMTF5OiB3ZSBuZWVkIHRvIGhhdmUgc29tZSBpbmRpY2F0b3IgZm9yIG91ciBzY3JlZW5yZWFkZXIgZnJpZW5kc1xuICAgICAgICA8VmlzdWFsbHlIaWRkZW4+JiN4MjcxMzs8L1Zpc3VhbGx5SGlkZGVuPlxuICAgICAgKX1cbiAgICAgIHt0aXRsZSAmJiAoXG4gICAgICAgIDxCb3hcbiAgICAgICAgICBkaXJlY3Rpb249XCJjb2x1bW5cIlxuICAgICAgICAgIGp1c3RpZnk9XCJmbGV4LXN0YXJ0XCJcbiAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICAgICBpc0NoZWNrZWQgJiYgY2xhc3Nlcy5jaGVja2VkLFxuICAgICAgICAgICAgZGlzYWJsZWQgJiYgY2xhc3Nlcy5kaXNhYmxlZFxuICAgICAgICAgICl9XG4gICAgICAgID5cbiAgICAgICAgICB7dGl0bGUgJiYgKFxuICAgICAgICAgICAgPFRleHQgY2xhc3NOYW1lPXtjbGFzc2VzLnRpdGxlfSBzaXplPVwic3ViYm9keVwiPlxuICAgICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7c3VidGl0bGUgJiYgKFxuICAgICAgICAgICAgPFRleHQgY2xhc3NOYW1lPXtjbGFzc2VzLnN1YnRpdGxlfSBzaXplPVwiY2FwdGlvblwiPlxuICAgICAgICAgICAgICB7c3VidGl0bGV9XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9Cb3g+XG4gICAgICApfVxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQm94PlxuICApO1xufTtcbiJdfQ==