"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
exports.DividerStylesKey = 'ChromaDivider';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        backgroundColor: 'rgba(0, 0, 0, 0.15)',
        border: 'none',
        flexShrink: 0,
        margin: 0,
        height: 1,
        width: '100%',
    },
    default: {},
    row: {
        height: '100%',
        width: 1,
    },
    inverseColor: {
        backgroundColor: 'rgba(255, 255, 255, 0.25)',
    },
    vSpacing0: {
        margin: 0,
    },
    vSpacing05: {
        margin: theme.spacing(0.5, 0),
    },
    vSpacing10: {
        margin: theme.spacing(1, 0),
    },
    vSpacing15: {
        margin: theme.spacing(1.5, 0),
    },
    vSpacing20: {
        margin: theme.spacing(2, 0),
    },
    vSpacing25: {
        margin: theme.spacing(2.5, 0),
    },
    vSpacing30: {
        margin: theme.spacing(3, 0),
    },
    vSpacing35: {
        margin: theme.spacing(3.5, 0),
    },
    vSpacing40: {
        margin: theme.spacing(4, 0),
    },
    hSpacing0: {
        margin: 0,
    },
    hSpacing05: {
        margin: theme.spacing(0, 0.5),
    },
    hSpacing10: {
        margin: theme.spacing(0, 1),
    },
    hSpacing15: {
        margin: theme.spacing(0, 1.5),
    },
    hSpacing20: {
        margin: theme.spacing(0, 2),
    },
    hSpacing25: {
        margin: theme.spacing(0, 2.5),
    },
    hSpacing30: {
        margin: theme.spacing(0, 3),
    },
    hSpacing35: {
        margin: theme.spacing(0, 3.5),
    },
    hSpacing40: {
        margin: theme.spacing(0, 4),
    },
}); }, { name: exports.DividerStylesKey });
exports.Divider = React.forwardRef(function (_a, ref) {
    var _b, _c, _d, _e;
    var className = _a.className, _f = _a.color, color = _f === void 0 ? 'default' : _f, _g = _a.direction, direction = _g === void 0 ? 'column' : _g, _h = _a.spacing, spacing = _h === void 0 ? 1 : _h, rootProps = __rest(_a, ["className", "color", "direction", "spacing"]);
    var classes = exports.useStyles({});
    return (React.createElement("hr", __assign({ ref: ref, className: clsx_1.default(classes.root, (_b = {},
            _b[classes.row] = direction === 'row',
            _b), (_c = {},
            _c[classes.inverseColor] = color === 'inverse',
            _c), (_d = {},
            _d[classes.vSpacing0] = spacing === 0 && direction === 'column',
            _d[classes.vSpacing05] = spacing === 0.5 && direction === 'column',
            _d[classes.vSpacing10] = spacing === 1 && direction === 'column',
            _d[classes.vSpacing15] = spacing === 1.5 && direction === 'column',
            _d[classes.vSpacing20] = spacing === 2 && direction === 'column',
            _d[classes.vSpacing25] = spacing === 2.5 && direction === 'column',
            _d[classes.vSpacing30] = spacing === 3 && direction === 'column',
            _d[classes.vSpacing35] = spacing === 3.5 && direction === 'column',
            _d[classes.vSpacing40] = spacing === 4 && direction === 'column',
            _d), (_e = {},
            _e[classes.hSpacing0] = spacing === 0 && direction === 'row',
            _e[classes.hSpacing05] = spacing === 0.5 && direction === 'row',
            _e[classes.hSpacing10] = spacing === 1 && direction === 'row',
            _e[classes.hSpacing15] = spacing === 1.5 && direction === 'row',
            _e[classes.hSpacing20] = spacing === 2 && direction === 'row',
            _e[classes.hSpacing25] = spacing === 2.5 && direction === 'row',
            _e[classes.hSpacing30] = spacing === 3 && direction === 'row',
            _e[classes.hSpacing35] = spacing === 3.5 && direction === 'row',
            _e[classes.hSpacing40] = spacing === 4 && direction === 'row',
            _e), className) }, rootProps)));
});
//# sourceMappingURL=data:application/json;base64,