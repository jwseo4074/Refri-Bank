"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrimaryNavigationItem = exports.useStyles = exports.PrimaryNavigationItemStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var index_1 = require("../../styles/index");
var LayoutManager_1 = require("../LayoutManager");
var Pill_1 = require("../Pill");
var Text_1 = require("../Text");
var Tooltip_1 = require("../Tooltip");
var common_1 = require("./_private/common");
var NavOrExternalLink_1 = require("./_private/NavOrExternalLink");
var framer_motion_1 = require("framer-motion");
exports.PrimaryNavigationItemStylesKey = 'ChromaPrimaryNavigationItem';
exports.useStyles = (0, index_1.makeStyles)(function (theme) { return ({
    root: {
        listStyle: 'none',
        padding: 0,
        margin: 0,
        position: 'relative',
    },
    link: {
        display: 'flex',
        alignItems: 'center',
        height: theme.pxToRem(47),
        color: 'inherit',
        textDecoration: 'none',
        transition: 'color 0.5s ease, opacity 0.5s ease',
        '&:hover': {
            color: 'var(--link-hover)',
            textDecoration: 'none',
            fallbacks: {
                color: 'inherit',
            },
        },
    },
    linkActive: {
        backgroundColor: 'var(--link-active-bg)',
        color: 'var(--link-active)',
        '&:hover': {
            color: 'var(--link-active)',
            opacity: 0.75,
        },
        fallbacks: {
            backgroundColor: theme.palette.action.active,
            color: theme.palette.primary[300],
        },
    },
    icon: {
        width: LayoutManager_1.sideBarWidthCollapsed,
        flexShrink: 0,
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        outline: 'none',
    },
    label: {
        alignSelf: 'center',
        color: 'inherit',
        flex: 1,
        letterSpacing: 0.15,
        lineHeight: 'unset',
        overflowX: 'hidden',
        paddingRight: theme.spacing(2.25),
        textOverflow: 'ellipsis',
        whiteSpace: 'nowrap',
    },
    labelBeta: {
        maxWidth: 120,
        paddingRight: 0,
    },
    beta: {
        margin: theme.spacing(0.125, 1, 0),
        position: 'absolute',
        right: theme.spacing(4),
        transform: 'scale(0.75)',
    },
}); }, { name: exports.PrimaryNavigationItemStylesKey });
var text = {
    hide: { opacity: 0, x: 16, transition: { ease: 'easeIn' } },
    show: { opacity: 1, x: 0, transition: { ease: 'easeOut' } },
};
exports.PrimaryNavigationItem = React.forwardRef(function (_a, ref) {
    var exact = _a.exact, icon = _a.icon, label = _a.label, to = _a.to, className = _a.className, additionalClasses = _a.classes, beta = _a.beta, betaLabelText = _a.betaLabelText, rootProps = __rest(_a, ["exact", "icon", "label", "to", "className", "classes", "beta", "betaLabelText"]);
    var classes = (0, exports.useStyles)({ classes: additionalClasses });
    var isSidebarCollapsed = (0, LayoutManager_1.useLayoutManager)().isSidebarCollapsed;
    return (React.createElement("li", __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, className) }, rootProps),
        React.createElement(NavOrExternalLink_1.NavOrExternalLink, { exact: exact, className: classes.link, activeClassName: classes.linkActive, to: to },
            isSidebarCollapsed ? (React.createElement(Tooltip_1.Tooltip, { title: label, placement: "right", gutter: -4 },
                React.createElement("div", { className: classes.icon }, icon))) : (React.createElement("div", { className: classes.icon }, icon)),
            React.createElement(framer_motion_1.motion.div, { variants: text },
                React.createElement(Text_1.Text, { size: "subbody", className: (0, clsx_1.default)(classes.label, beta && classes.labelBeta, className) }, label)),
            beta && !isSidebarCollapsed && (React.createElement(Pill_1.Pill, { variant: "highlight", label: betaLabelText, className: classes.beta, initial: common_1.BETA_INITIAL_TRANSITION, animate: common_1.BETA_ANIMATE_TRANSITION, exit: common_1.BETA_EXIT_TRANSITION })))));
});
//# sourceMappingURL=data:application/json;base64,