"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pill = exports.useStyles = exports.PillStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
var framer_motion_1 = require("framer-motion");
exports.PillStylesKey = 'ChromaPill';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        display: 'inline-flex',
        alignItems: 'center',
        background: theme.palette.black[500],
        color: theme.palette.common.white,
        borderRadius: theme.pxToRem(20),
        fontSize: theme.typography.caption.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        padding: theme.spacing(0.5, 1.5),
        width: 'fit-content',
        maxHeight: theme.pxToRem(25),
    },
    default: {},
    primaryColor: {
        background: theme.palette.primary.main,
    },
    highlight: {
        background: "linear-gradient(135deg, ".concat(theme.palette.primary.light, " 0%, ").concat(theme.palette.primary.main, " 40%, rgb(166, 66, 254) 92%)"),
        boxShadow: theme.boxShadows.table,
        borderRadius: theme.spacing(0.25, 1),
        borderBottom: 'solid 1px rgba(0, 83, 154, 0.75)',
        borderRight: 'solid 1px rgba(0, 83, 154, 0.75)',
        color: theme.palette.common.white,
        fontSize: theme.pxToRem(9),
        fontWeight: theme.typography.fontWeightBolder,
        height: theme.pxToRem(20),
        justifyContent: 'center',
        letterSpacing: theme.pxToRem(1.6),
        lineHeight: 0.9,
        padding: theme.spacing(0.125, 0.75, 0),
        textIndent: theme.pxToRem(3),
        textTransform: 'uppercase',
    },
}); }, { name: exports.PillStylesKey });
exports.Pill = React.forwardRef(function (_a, ref) {
    var _b, _c;
    var children = _a.children, className = _a.className, color = _a.color, label = _a.label, _d = _a.variant, variant = _d === void 0 ? 'default' : _d, rootProps = __rest(_a, ["children", "className", "color", "label", "variant"]);
    var classes = (0, exports.useStyles)({});
    return (React.createElement(framer_motion_1.motion.span, __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, (_b = {},
            _b[classes.default] = variant === 'default',
            _b[classes.highlight] = variant === 'highlight',
            _b), (_c = {},
            _c[classes.primaryColor] = color === 'primary',
            _c), className) }, rootProps),
        label,
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGlsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1BpbGwvUGlsbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUMvQix1Q0FBMEM7QUFFMUMsK0NBQW9EO0FBRXZDLFFBQUEsYUFBYSxHQUFHLFlBQVksQ0FBQztBQUU3QixRQUFBLFNBQVMsR0FBRyxJQUFBLG1CQUFVLEVBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7UUFDcEMsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFDakMsWUFBWSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQy9CLFFBQVEsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxRQUFRO1FBQzNDLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLGNBQWM7UUFDM0MsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQztRQUNoQyxLQUFLLEVBQUUsYUFBYTtRQUNwQixTQUFTLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDN0I7SUFDRCxPQUFPLEVBQUUsRUFBRTtJQUNYLFlBQVksRUFBRTtRQUNaLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO0tBQ3ZDO0lBQ0QsU0FBUyxFQUFFO1FBQ1QsVUFBVSxFQUFFLGtDQUEyQixLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLGtCQUFRLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksaUNBQThCO1FBQ2xJLFNBQVMsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLEtBQUs7UUFDakMsWUFBWSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNwQyxZQUFZLEVBQUUsa0NBQWtDO1FBQ2hELFdBQVcsRUFBRSxrQ0FBa0M7UUFDL0MsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFDakMsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQzFCLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLGdCQUFnQjtRQUM3QyxNQUFNLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDekIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsYUFBYSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ2pDLFVBQVUsRUFBRSxHQUFHO1FBQ2YsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDdEMsVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQzVCLGFBQWEsRUFBRSxXQUFXO0tBQzNCO0NBQ0YsQ0FBQyxFQWxDUyxDQWtDVCxFQUNGLEVBQUUsSUFBSSxFQUFFLHFCQUFhLEVBQUUsQ0FDeEIsQ0FBQztBQWtCVyxRQUFBLElBQUksR0FBRyxLQUFLLENBQUMsVUFBVSxDQUNsQyxVQUNFLEVBQXdFLEVBQ3hFLEdBQUc7O0lBREQsSUFBQSxRQUFRLGNBQUEsRUFBRSxTQUFTLGVBQUEsRUFBRSxLQUFLLFdBQUEsRUFBRSxLQUFLLFdBQUEsRUFBRSxlQUFtQixFQUFuQixPQUFPLG1CQUFHLFNBQVMsS0FBQSxFQUFLLFNBQVMsY0FBdEUsc0RBQXdFLENBQUY7SUFHdEUsSUFBTSxPQUFPLEdBQUcsSUFBQSxpQkFBUyxFQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRTlCLE9BQU8sQ0FDTCxvQkFBQyxzQkFBTSxDQUFDLElBQUksYUFDVixHQUFHLEVBQUUsR0FBRyxFQUNSLFNBQVMsRUFBRSxJQUFBLGNBQUksRUFDYixPQUFPLENBQUMsSUFBSTtZQUVWLEdBQUMsT0FBTyxDQUFDLE9BQU8sSUFBRyxPQUFPLEtBQUssU0FBUztZQUN4QyxHQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUcsT0FBTyxLQUFLLFdBQVc7O1lBRzVDLEdBQUMsT0FBTyxDQUFDLFlBQVksSUFBRyxLQUFLLEtBQUssU0FBUztpQkFFN0MsU0FBUyxDQUNWLElBQ0csU0FBUztRQUVaLEtBQUs7UUFDTCxRQUFRLENBQ0csQ0FDZixDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgeyBtb3Rpb24sIE1vdGlvblByb3BzIH0gZnJvbSAnZnJhbWVyLW1vdGlvbic7XG5cbmV4cG9ydCBjb25zdCBQaWxsU3R5bGVzS2V5ID0gJ0Nocm9tYVBpbGwnO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGRpc3BsYXk6ICdpbmxpbmUtZmxleCcsXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnBhbGV0dGUuYmxhY2tbNTAwXSxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgIGJvcmRlclJhZGl1czogdGhlbWUucHhUb1JlbSgyMCksXG4gICAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uLmZvbnRTaXplLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0Qm9sZCxcbiAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMC41LCAxLjUpLFxuICAgICAgd2lkdGg6ICdmaXQtY29udGVudCcsXG4gICAgICBtYXhIZWlnaHQ6IHRoZW1lLnB4VG9SZW0oMjUpLFxuICAgIH0sXG4gICAgZGVmYXVsdDoge30sXG4gICAgcHJpbWFyeUNvbG9yOiB7XG4gICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICB9LFxuICAgIGhpZ2hsaWdodDoge1xuICAgICAgYmFja2dyb3VuZDogYGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICR7dGhlbWUucGFsZXR0ZS5wcmltYXJ5LmxpZ2h0fSAwJSwgJHt0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbn0gNDAlLCByZ2IoMTY2LCA2NiwgMjU0KSA5MiUpYCxcbiAgICAgIGJveFNoYWRvdzogdGhlbWUuYm94U2hhZG93cy50YWJsZSxcbiAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuc3BhY2luZygwLjI1LCAxKSxcbiAgICAgIGJvcmRlckJvdHRvbTogJ3NvbGlkIDFweCByZ2JhKDAsIDgzLCAxNTQsIDAuNzUpJyxcbiAgICAgIGJvcmRlclJpZ2h0OiAnc29saWQgMXB4IHJnYmEoMCwgODMsIDE1NCwgMC43NSknLFxuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICAgICAgZm9udFNpemU6IHRoZW1lLnB4VG9SZW0oOSksXG4gICAgICBmb250V2VpZ2h0OiB0aGVtZS50eXBvZ3JhcGh5LmZvbnRXZWlnaHRCb2xkZXIsXG4gICAgICBoZWlnaHQ6IHRoZW1lLnB4VG9SZW0oMjApLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgbGV0dGVyU3BhY2luZzogdGhlbWUucHhUb1JlbSgxLjYpLFxuICAgICAgbGluZUhlaWdodDogMC45LFxuICAgICAgcGFkZGluZzogdGhlbWUuc3BhY2luZygwLjEyNSwgMC43NSwgMCksXG4gICAgICB0ZXh0SW5kZW50OiB0aGVtZS5weFRvUmVtKDMpLFxuICAgICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZScsXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogUGlsbFN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBpbGxPd25Qcm9wc1xuICBleHRlbmRzIE9taXQ8XG4gICAgICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8J3NwYW4nPixcbiAgICAgICdvbkFuaW1hdGlvblN0YXJ0JyB8ICdvbkRyYWcnIHwgJ29uRHJhZ0VuZCcgfCAnb25EcmFnU3RhcnQnIHwgJ3N0eWxlJ1xuICAgID4sXG4gICAgTW90aW9uUHJvcHMge1xuICBjb2xvcj86ICdwcmltYXJ5JyB8ICdkZWZhdWx0JztcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGxhYmVsPzogc3RyaW5nO1xuICB2YXJpYW50PzogJ2RlZmF1bHQnIHwgJ2hpZ2hsaWdodCc7XG59XG5cbmV4cG9ydCB0eXBlIFBpbGxDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBQaWxsUHJvcHMgZXh0ZW5kcyBQaWxsT3duUHJvcHMge31cblxuZXhwb3J0IGNvbnN0IFBpbGwgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxTcGFuRWxlbWVudCwgUGlsbFByb3BzPihcbiAgKFxuICAgIHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgY29sb3IsIGxhYmVsLCB2YXJpYW50ID0gJ2RlZmF1bHQnLCAuLi5yb290UHJvcHMgfSxcbiAgICByZWZcbiAgKSA9PiB7XG4gICAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7fSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPG1vdGlvbi5zcGFuXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICAgY2xhc3Nlcy5yb290LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFtjbGFzc2VzLmRlZmF1bHRdOiB2YXJpYW50ID09PSAnZGVmYXVsdCcsXG4gICAgICAgICAgICBbY2xhc3Nlcy5oaWdobGlnaHRdOiB2YXJpYW50ID09PSAnaGlnaGxpZ2h0JyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFtjbGFzc2VzLnByaW1hcnlDb2xvcl06IGNvbG9yID09PSAncHJpbWFyeScsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjbGFzc05hbWVcbiAgICAgICAgKX1cbiAgICAgICAgey4uLnJvb3RQcm9wc31cbiAgICAgID5cbiAgICAgICAge2xhYmVsfVxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L21vdGlvbi5zcGFuPlxuICAgICk7XG4gIH1cbik7XG4iXX0=