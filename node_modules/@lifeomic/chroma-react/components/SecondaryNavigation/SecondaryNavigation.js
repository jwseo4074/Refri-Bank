"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
exports.SecondaryNavigationStylesKey = 'ChromaSecondaryNavigation';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        borderRight: "1px solid " + theme.palette.divider,
        display: 'flex',
        flex: 1,
        flexDirection: 'column',
        height: '100%',
    },
    horizontalNav: {
        position: 'relative',
        borderRight: 0,
        '& > ul': {
            display: 'flex',
            borderBottom: "1px solid",
            borderBottomColor: theme.palette.divider,
            '& > li': {
                padding: theme.spacing(1, 3),
                fontSize: theme.typography.button.fontSize,
                letterSpacing: 0.5,
                whiteSpace: 'nowrap',
                '& > div': {
                    height: theme.pxToRem(2),
                    width: '100%',
                    top: 'auto',
                    bottom: 0,
                    left: 0,
                },
            },
        },
    },
    list: {
        listStyle: 'none',
        margin: 0,
        overflowY: 'auto',
        padding: 0,
    },
}); }, { name: exports.SecondaryNavigationStylesKey });
exports.SecondaryNavigation = React.forwardRef(function (_a, ref) {
    var children = _a.children, _b = _a.variant, variant = _b === void 0 ? 'vertical' : _b, className = _a.className, additionalClasses = _a.classes, rootProps = __rest(_a, ["children", "variant", "className", "classes"]);
    var classes = exports.useStyles({ classes: additionalClasses });
    return (React.createElement("nav", __assign({ ref: ref, className: clsx_1.default(classes.root, className, variant === 'horizontal' && classes.horizontalNav), "aria-label": "Secondary", role: "navigation" }, rootProps),
        React.createElement("ul", { className: classes.list }, children)));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vjb25kYXJ5TmF2aWdhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1NlY29uZGFyeU5hdmlnYXRpb24vU2Vjb25kYXJ5TmF2aWdhdGlvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhDQUF3QjtBQUN4QiwyQ0FBK0I7QUFDL0IsdUNBQTBDO0FBRzdCLFFBQUEsNEJBQTRCLEdBQUcsMkJBQTJCLENBQUM7QUFFM0QsUUFBQSxTQUFTLEdBQUcsbUJBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osV0FBVyxFQUFFLGVBQWEsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFTO1FBQ2pELE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLENBQUM7UUFDUCxhQUFhLEVBQUUsUUFBUTtRQUN2QixNQUFNLEVBQUUsTUFBTTtLQUNmO0lBQ0QsYUFBYSxFQUFFO1FBQ2IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsV0FBVyxFQUFFLENBQUM7UUFFZCxRQUFRLEVBQUU7WUFDUixPQUFPLEVBQUUsTUFBTTtZQUNmLFlBQVksRUFBRSxXQUFXO1lBQ3pCLGlCQUFpQixFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTztZQUV4QyxRQUFRLEVBQUU7Z0JBQ1IsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDNUIsUUFBUSxFQUFFLEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFFBQVE7Z0JBQzFDLGFBQWEsRUFBRSxHQUFHO2dCQUNsQixVQUFVLEVBQUUsUUFBUTtnQkFFcEIsU0FBUyxFQUFFO29CQUNULE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztvQkFDeEIsS0FBSyxFQUFFLE1BQU07b0JBQ2IsR0FBRyxFQUFFLE1BQU07b0JBQ1gsTUFBTSxFQUFFLENBQUM7b0JBQ1QsSUFBSSxFQUFFLENBQUM7aUJBQ1I7YUFDRjtTQUNGO0tBQ0Y7SUFDRCxJQUFJLEVBQUU7UUFDSixTQUFTLEVBQUUsTUFBTTtRQUNqQixNQUFNLEVBQUUsQ0FBQztRQUNULFNBQVMsRUFBRSxNQUFNO1FBQ2pCLE9BQU8sRUFBRSxDQUFDO0tBQ1g7Q0FDRixDQUFDLEVBdkNTLENBdUNULEVBQ0YsRUFBRSxJQUFJLEVBQUUsb0NBQTRCLEVBQUUsQ0FDdkMsQ0FBQztBQVNXLFFBQUEsbUJBQW1CLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FJakQsVUFDRSxFQU1DLEVBQ0QsR0FBRztJQU5ELElBQUEsc0JBQVEsRUFDUixlQUFvQixFQUFwQix5Q0FBb0IsRUFDcEIsd0JBQVMsRUFDVCw4QkFBMEIsRUFDMUIsdUVBQVk7SUFJZCxJQUFNLE9BQU8sR0FBRyxpQkFBUyxDQUFDLEVBQUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLENBQUMsQ0FBQztJQUMxRCxPQUFPLENBQ0wsc0NBQ0UsR0FBRyxFQUFFLEdBQUcsRUFDUixTQUFTLEVBQUUsY0FBSSxDQUNiLE9BQU8sQ0FBQyxJQUFJLEVBQ1osU0FBUyxFQUNULE9BQU8sS0FBSyxZQUFZLElBQUksT0FBTyxDQUFDLGFBQWEsQ0FDbEQsZ0JBQ1UsV0FBVyxFQUN0QixJQUFJLEVBQUMsWUFBWSxJQUNiLFNBQVM7UUFFYiw0QkFBSSxTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksSUFBRyxRQUFRLENBQU0sQ0FDeEMsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcywgU3RhbmRhcmRQcm9wcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5cbmV4cG9ydCBjb25zdCBTZWNvbmRhcnlOYXZpZ2F0aW9uU3R5bGVzS2V5ID0gJ0Nocm9tYVNlY29uZGFyeU5hdmlnYXRpb24nO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGJvcmRlclJpZ2h0OiBgMXB4IHNvbGlkICR7dGhlbWUucGFsZXR0ZS5kaXZpZGVyfWAsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBmbGV4OiAxLFxuICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICB9LFxuICAgIGhvcml6b250YWxOYXY6IHtcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgYm9yZGVyUmlnaHQ6IDAsXG5cbiAgICAgICcmID4gdWwnOiB7XG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgYm9yZGVyQm90dG9tOiBgMXB4IHNvbGlkYCxcbiAgICAgICAgYm9yZGVyQm90dG9tQ29sb3I6IHRoZW1lLnBhbGV0dGUuZGl2aWRlcixcblxuICAgICAgICAnJiA+IGxpJzoge1xuICAgICAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMSwgMyksXG4gICAgICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuYnV0dG9uLmZvbnRTaXplLFxuICAgICAgICAgIGxldHRlclNwYWNpbmc6IDAuNSxcbiAgICAgICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcblxuICAgICAgICAgICcmID4gZGl2Jzoge1xuICAgICAgICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDIpLFxuICAgICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICAgIHRvcDogJ2F1dG8nLFxuICAgICAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIGxpc3Q6IHtcbiAgICAgIGxpc3RTdHlsZTogJ25vbmUnLFxuICAgICAgbWFyZ2luOiAwLFxuICAgICAgb3ZlcmZsb3dZOiAnYXV0bycsXG4gICAgICBwYWRkaW5nOiAwLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IFNlY29uZGFyeU5hdmlnYXRpb25TdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgU2Vjb25kYXJ5TmF2aWdhdGlvbkNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlY29uZGFyeU5hdmlnYXRpb25Qcm9wc1xuICBleHRlbmRzIFN0YW5kYXJkUHJvcHM8SFRNTEVsZW1lbnQsIFNlY29uZGFyeU5hdmlnYXRpb25DbGFzc2VzPiB7XG4gIHZhcmlhbnQ/OiAndmVydGljYWwnIHwgJ2hvcml6b250YWwnO1xufVxuXG5leHBvcnQgY29uc3QgU2Vjb25kYXJ5TmF2aWdhdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxFbGVtZW50LFxuICBTZWNvbmRhcnlOYXZpZ2F0aW9uUHJvcHNcbj4oXG4gIChcbiAgICB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHZhcmlhbnQgPSAndmVydGljYWwnLFxuICAgICAgY2xhc3NOYW1lLFxuICAgICAgY2xhc3NlczogYWRkaXRpb25hbENsYXNzZXMsXG4gICAgICAuLi5yb290UHJvcHNcbiAgICB9LFxuICAgIHJlZlxuICApID0+IHtcbiAgICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHsgY2xhc3NlczogYWRkaXRpb25hbENsYXNzZXMgfSk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxuYXZcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICBjbGFzc2VzLnJvb3QsXG4gICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgIHZhcmlhbnQgPT09ICdob3Jpem9udGFsJyAmJiBjbGFzc2VzLmhvcml6b250YWxOYXZcbiAgICAgICAgKX1cbiAgICAgICAgYXJpYS1sYWJlbD1cIlNlY29uZGFyeVwiXG4gICAgICAgIHJvbGU9XCJuYXZpZ2F0aW9uXCJcbiAgICAgICAgey4uLnJvb3RQcm9wc31cbiAgICAgID5cbiAgICAgICAgPHVsIGNsYXNzTmFtZT17Y2xhc3Nlcy5saXN0fT57Y2hpbGRyZW59PC91bD5cbiAgICAgIDwvbmF2PlxuICAgICk7XG4gIH1cbik7XG4iXX0=