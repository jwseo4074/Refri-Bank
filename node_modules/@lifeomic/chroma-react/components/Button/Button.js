"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Button = exports.useStyles = exports.ButtonStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
require("focus-visible");
exports.ButtonStylesKey = 'ChromaButton';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        background: theme.palette.primary.main,
        border: "".concat(theme.pxToRem(1), " solid transparent"),
        borderRadius: theme.pxToRem(4),
        color: theme.palette.common.white,
        cursor: 'pointer',
        display: 'inline-block',
        whiteSpace: 'nowrap',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.typography.button.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        letterSpacing: theme.pxToRem(0.5),
        lineHeight: theme.pxToRem(19),
        margin: 0,
        maxHeight: theme.pxToRem(35),
        minWidth: theme.pxToRem(64),
        outline: 'none',
        overflow: 'hidden',
        paddingBottom: theme.pxToRem(7),
        paddingLeft: theme.pxToRem(11),
        paddingRight: theme.pxToRem(11),
        paddingTop: theme.pxToRem(7),
        position: 'relative',
        textOverflow: 'ellipsis',
        transition: 'background-color 0.25s ease, color 0.25s ease, opacity 0.25s ease',
        userSelect: 'none',
        verticalAlign: 'middle',
        '&:hover': {
            backgroundColor: theme.palette.primary[900],
            outline: 'none',
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisible,
        },
        '&:disabled': {
            cursor: 'default',
            pointerEvents: 'none',
            backgroundColor: theme.palette.primary.main,
            opacity: 0.44,
        },
        '&::-moz-focus-inner': {
            border: 'none',
        },
    },
    containedInverse: {
        backgroundColor: theme.palette.common.white,
        color: theme.palette.primary.main,
        '&:hover': {
            backgroundColor: theme.palette.common.white,
            color: theme.palette.primary.main,
            opacity: 0.85,
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
        '&:disabled, &[disabled]': {
            backgroundColor: 'rgba(255, 255, 255, 0.45)',
            opacity: 1,
            color: theme.palette.text.secondary,
        },
    },
    outlined: {
        backgroundColor: 'transparent',
        borderColor: theme.palette.primary.main,
        color: theme.palette.primary.main,
        transition: 'border 0.25s ease, color 0.25s ease',
        '&:hover': {
            backgroundColor: 'transparent',
            borderColor: theme.palette.primary[900],
            color: theme.palette.primary[900],
        },
        '&:disabled': {
            backgroundColor: 'transparent',
            borderColor: theme.palette.primary.main,
            color: theme.palette.primary.main,
            opacity: 0.44,
        },
    },
    outlinedInverse: {
        borderColor: theme.palette.common.white,
        color: theme.palette.common.white,
        '&:hover': {
            color: theme.palette.common.white,
            opacity: 0.85,
            borderColor: 'rgba(255, 255, 255, 0.85)',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
        '&:disabled, &[disabled]': {
            color: 'rgba(255, 255, 255, 0.45)',
            opacity: 1,
            borderColor: 'rgba(255, 255, 255, 0.45)',
        },
    },
    text: {
        backgroundColor: 'transparent',
        color: theme.palette.primary.main,
        transition: 'color 0.25s ease',
        '&:hover': {
            backgroundColor: 'transparent',
            color: theme.palette.primary[900],
        },
        '&:disabled': {
            backgroundColor: 'transparent',
            color: theme.palette.primary.main,
            opacity: 0.44,
        },
    },
    textInverse: {
        color: theme.palette.common.white,
        '&:hover': {
            color: theme.palette.common.white,
            opacity: 0.85,
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
        '&:disabled, &[disabled]': {
            color: theme.palette.common.white,
            opacity: 0.44,
        },
    },
    containedNegative: {
        backgroundColor: theme.palette.negative.main,
        color: theme.palette.common.white,
        '&:hover': {
            backgroundColor: theme.palette.negative.dark,
        },
        '&:disabled, &[disabled]': {
            backgroundColor: theme.palette.negative.main,
            color: theme.palette.common.white,
        },
    },
    containedPositive: {
        backgroundColor: theme.palette.positive.main,
        color: theme.palette.common.white,
        '&:hover': {
            backgroundColor: theme.palette.positive.dark,
        },
        '&:disabled, &[disabled]': {
            backgroundColor: theme.palette.positive.main,
            color: theme.palette.common.white,
        },
    },
    outlinedNegative: {
        borderColor: theme.palette.negative.main,
        color: theme.palette.negative.main,
        '&:hover': {
            borderColor: theme.palette.negative.dark,
            color: theme.palette.negative.dark,
        },
        '&:disabled, &[disabled]': {
            borderColor: theme.palette.negative.main,
            color: theme.palette.negative.main,
        },
    },
    outlinedPositive: {
        borderColor: theme.palette.positive.main,
        color: theme.palette.positive.main,
        '&:hover': {
            borderColor: theme.palette.positive.dark,
            color: theme.palette.positive.dark,
        },
        '&:disabled, &[disabled]': {
            borderColor: theme.palette.positive.main,
            color: theme.palette.positive.main,
        },
    },
    textNegative: {
        color: theme.palette.negative.main,
        '&:hover': {
            color: theme.palette.negative.dark,
        },
        '&:disabled': {
            color: theme.palette.negative.main,
        },
    },
    textPositive: {
        color: theme.palette.positive.main,
        '&:hover': {
            color: theme.palette.positive.dark,
        },
        '&:disabled': {
            color: theme.palette.positive.main,
        },
    },
    fullWidth: {
        width: '100%',
    },
    icon: {
        height: theme.spacing(2),
        marginRight: theme.spacing(1),
        position: 'relative',
        top: theme.pxToRem(-1),
        verticalAlign: 'middle',
        width: theme.spacing(2),
    },
    trailingIcon: {
        marginRight: 0,
        marginLeft: theme.spacing(1),
    },
}); }, { name: exports.ButtonStylesKey });
exports.Button = React.forwardRef(function (_a, ref) {
    var _b, _c;
    var className = _a.className, _d = _a.color, color = _d === void 0 ? 'default' : _d, children = _a.children, disabled = _a.disabled, fullWidth = _a.fullWidth, Icon = _a.icon, TrailingIcon = _a.trailingIcon, _e = _a.variant, variant = _e === void 0 ? 'contained' : _e, rootProps = __rest(_a, ["className", "color", "children", "disabled", "fullWidth", "icon", "trailingIcon", "variant"]);
    var classes = (0, exports.useStyles)({});
    return (React.createElement("button", __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, (_b = {},
            _b[classes.outlined] = variant === 'outlined',
            _b[classes.text] = variant === 'text',
            _b), (_c = {},
            _c[classes.containedInverse] = variant === 'contained' && color === 'inverse',
            _c[classes.outlinedInverse] = variant === 'outlined' && color === 'inverse',
            _c[classes.textInverse] = variant === 'text' && color === 'inverse',
            _c[classes.containedNegative] = variant === 'contained' && color === 'negative',
            _c[classes.outlinedNegative] = variant === 'outlined' && color === 'negative',
            _c[classes.textNegative] = variant === 'text' && color === 'negative',
            _c[classes.containedPositive] = variant === 'contained' && color === 'positive',
            _c[classes.outlinedPositive] = variant === 'outlined' && color === 'positive',
            _c[classes.textPositive] = variant === 'text' && color === 'positive',
            _c), fullWidth && classes.fullWidth, className), disabled: disabled ? true : undefined, tabIndex: disabled ? -1 : 0, type: "button" }, rootProps),
        !!Icon && React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon }),
        children,
        !!TrailingIcon && (React.createElement(TrailingIcon, { role: "img", "aria-hidden": true, className: (0, clsx_1.default)(classes.icon, classes.trailingIcon) }))));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnV0dG9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQnV0dG9uL0J1dHRvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUMvQix1Q0FBMEM7QUFFMUMseUJBQXVCO0FBRVYsUUFBQSxlQUFlLEdBQUcsY0FBYyxDQUFDO0FBRWpDLFFBQUEsU0FBUyxHQUFHLElBQUEsbUJBQVUsRUFDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUk7UUFDdEMsTUFBTSxFQUFFLFVBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsdUJBQW9CO1FBQy9DLFlBQVksRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM5QixLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSztRQUNqQyxNQUFNLEVBQUUsU0FBUztRQUNqQixPQUFPLEVBQUUsY0FBYztRQUN2QixVQUFVLEVBQUUsUUFBUTtRQUNwQixVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFVO1FBQ3ZDLFFBQVEsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxRQUFRO1FBQzFDLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLGNBQWM7UUFDM0MsYUFBYSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ2pDLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUM3QixNQUFNLEVBQUUsQ0FBQztRQUNULFNBQVMsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUM1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QUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQzNCLElBQUksRUFBQyxRQUFRLElBQ1QsU0FBUztRQUVaLENBQUMsQ0FBQyxJQUFJLElBQUksb0JBQUMsSUFBSSxJQUFDLElBQUksRUFBQyxLQUFLLHVCQUFhLFNBQVMsRUFBRSxPQUFPLENBQUMsSUFBSSxHQUFJO1FBQ2xFLFFBQVE7UUFDUixDQUFDLENBQUMsWUFBWSxJQUFJLENBQ2pCLG9CQUFDLFlBQVksSUFDWCxJQUFJLEVBQUMsS0FBSyx1QkFFVixTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsWUFBWSxDQUFDLEdBQ25ELENBQ0gsQ0FDTSxDQUNWLENBQUM7QUFDSixDQUFDLENBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcyc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCAnZm9jdXMtdmlzaWJsZSc7XG5cbmV4cG9ydCBjb25zdCBCdXR0b25TdHlsZXNLZXkgPSAnQ2hyb21hQnV0dG9uJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgIGJvcmRlcjogYCR7dGhlbWUucHhUb1JlbSgxKX0gc29saWQgdHJhbnNwYXJlbnRgLFxuICAgICAgYm9yZGVyUmFkaXVzOiB0aGVtZS5weFRvUmVtKDQpLFxuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgICAgZm9udEZhbWlseTogdGhlbWUudHlwb2dyYXBoeS5mb250RmFtaWx5LFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuYnV0dG9uLmZvbnRTaXplLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0Qm9sZCxcbiAgICAgIGxldHRlclNwYWNpbmc6IHRoZW1lLnB4VG9SZW0oMC41KSxcbiAgICAgIGxpbmVIZWlnaHQ6IHRoZW1lLnB4VG9SZW0oMTkpLFxuICAgICAgbWFyZ2luOiAwLFxuICAgICAgbWF4SGVpZ2h0OiB0aGVtZS5weFRvUmVtKDM1KSxcbiAgICAgIG1pbldpZHRoOiB0aGVtZS5weFRvUmVtKDY0KSxcbiAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnB4VG9SZW0oNyksXG4gICAgICBwYWRkaW5nTGVmdDogdGhlbWUucHhUb1JlbSgxMSksXG4gICAgICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnB4VG9SZW0oMTEpLFxuICAgICAgcGFkZGluZ1RvcDogdGhlbWUucHhUb1JlbSg3KSxcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgdGV4dE92ZXJmbG93OiAnZWxsaXBzaXMnLFxuICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgJ2JhY2tncm91bmQtY29sb3IgMC4yNXMgZWFzZSwgY29sb3IgMC4yNXMgZWFzZSwgb3BhY2l0eSAwLjI1cyBlYXNlJyxcbiAgICAgIHVzZXJTZWxlY3Q6ICdub25lJyxcbiAgICAgIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5WzkwMF0sXG4gICAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIH0sXG4gICAgICAnJjpmb2N1cyc6IHtcbiAgICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgfSxcbiAgICAgICcmOmZvY3VzLmZvY3VzLXZpc2libGUnOiB7XG4gICAgICAgIGJveFNoYWRvdzogdGhlbWUuYm94U2hhZG93cy5mb2N1c1Zpc2libGUsXG4gICAgICB9LFxuICAgICAgJyY6ZGlzYWJsZWQnOiB7XG4gICAgICAgIGN1cnNvcjogJ2RlZmF1bHQnLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAgIG9wYWNpdHk6IDAuNDQsXG4gICAgICB9LFxuICAgICAgJyY6Oi1tb3otZm9jdXMtaW5uZXInOiB7XG4gICAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGNvbnRhaW5lZEludmVyc2U6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgICBvcGFjaXR5OiAwLjg1LFxuICAgICAgfSxcbiAgICAgICcmOmZvY3VzJzoge1xuICAgICAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgICB9LFxuICAgICAgJyY6Zm9jdXMuZm9jdXMtdmlzaWJsZSc6IHtcbiAgICAgICAgYm94U2hhZG93OiB0aGVtZS5ib3hTaGFkb3dzLmZvY3VzVmlzaWJsZUludmVyc2UsXG4gICAgICB9LFxuICAgICAgJyY6ZGlzYWJsZWQsICZbZGlzYWJsZWRdJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNDUpJyxcbiAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUudGV4dC5zZWNvbmRhcnksXG4gICAgICB9LFxuICAgIH0sXG4gICAgb3V0bGluZWQ6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgIGJvcmRlckNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgIHRyYW5zaXRpb246ICdib3JkZXIgMC4yNXMgZWFzZSwgY29sb3IgMC4yNXMgZWFzZScsXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBib3JkZXJDb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5WzkwMF0sXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnlbOTAwXSxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBib3JkZXJDb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgICAgb3BhY2l0eTogMC40NCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBvdXRsaW5lZEludmVyc2U6IHtcbiAgICAgIGJvcmRlckNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICAgIG9wYWNpdHk6IDAuODUsXG4gICAgICAgIGJvcmRlckNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg1KScsXG4gICAgICB9LFxuICAgICAgJyY6Zm9jdXMuZm9jdXMtdmlzaWJsZSc6IHtcbiAgICAgICAgYm94U2hhZG93OiB0aGVtZS5ib3hTaGFkb3dzLmZvY3VzVmlzaWJsZUludmVyc2UsXG4gICAgICB9LFxuICAgICAgJyY6ZGlzYWJsZWQsICZbZGlzYWJsZWRdJzoge1xuICAgICAgICBjb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC40NSknLFxuICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC40NSknLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgIHRyYW5zaXRpb246ICdjb2xvciAwLjI1cyBlYXNlJyxcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnlbOTAwXSxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAgIG9wYWNpdHk6IDAuNDQsXG4gICAgICB9LFxuICAgIH0sXG4gICAgdGV4dEludmVyc2U6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICAgIG9wYWNpdHk6IDAuODUsXG4gICAgICB9LFxuICAgICAgJyY6Zm9jdXMnOiB7XG4gICAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIH0sXG4gICAgICAnJjpmb2N1cy5mb2N1cy12aXNpYmxlJzoge1xuICAgICAgICBib3hTaGFkb3c6IHRoZW1lLmJveFNoYWRvd3MuZm9jdXNWaXNpYmxlSW52ZXJzZSxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCwgJltkaXNhYmxlZF0nOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgICAgb3BhY2l0eTogMC40NCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBjb250YWluZWROZWdhdGl2ZToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLm5lZ2F0aXZlLm1haW4sXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLm5lZ2F0aXZlLmRhcmssXG4gICAgICB9LFxuICAgICAgJyY6ZGlzYWJsZWQsICZbZGlzYWJsZWRdJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUubmVnYXRpdmUubWFpbixcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGNvbnRhaW5lZFBvc2l0aXZlOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUucG9zaXRpdmUubWFpbixcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUucG9zaXRpdmUuZGFyayxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCwgJltkaXNhYmxlZF0nOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5wb3NpdGl2ZS5tYWluLFxuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICB9LFxuICAgIH0sXG4gICAgb3V0bGluZWROZWdhdGl2ZToge1xuICAgICAgYm9yZGVyQ29sb3I6IHRoZW1lLnBhbGV0dGUubmVnYXRpdmUubWFpbixcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLm5lZ2F0aXZlLm1haW4sXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgYm9yZGVyQ29sb3I6IHRoZW1lLnBhbGV0dGUubmVnYXRpdmUuZGFyayxcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUubmVnYXRpdmUuZGFyayxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCwgJltkaXNhYmxlZF0nOiB7XG4gICAgICAgIGJvcmRlckNvbG9yOiB0aGVtZS5wYWxldHRlLm5lZ2F0aXZlLm1haW4sXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLm5lZ2F0aXZlLm1haW4sXG4gICAgICB9LFxuICAgIH0sXG4gICAgb3V0bGluZWRQb3NpdGl2ZToge1xuICAgICAgYm9yZGVyQ29sb3I6IHRoZW1lLnBhbGV0dGUucG9zaXRpdmUubWFpbixcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnBvc2l0aXZlLm1haW4sXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgYm9yZGVyQ29sb3I6IHRoZW1lLnBhbGV0dGUucG9zaXRpdmUuZGFyayxcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucG9zaXRpdmUuZGFyayxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCwgJltkaXNhYmxlZF0nOiB7XG4gICAgICAgIGJvcmRlckNvbG9yOiB0aGVtZS5wYWxldHRlLnBvc2l0aXZlLm1haW4sXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnBvc2l0aXZlLm1haW4sXG4gICAgICB9LFxuICAgIH0sXG4gICAgdGV4dE5lZ2F0aXZlOiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5uZWdhdGl2ZS5tYWluLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLm5lZ2F0aXZlLmRhcmssXG4gICAgICB9LFxuICAgICAgJyY6ZGlzYWJsZWQnOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLm5lZ2F0aXZlLm1haW4sXG4gICAgICB9LFxuICAgIH0sXG4gICAgdGV4dFBvc2l0aXZlOiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wb3NpdGl2ZS5tYWluLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnBvc2l0aXZlLmRhcmssXG4gICAgICB9LFxuICAgICAgJyY6ZGlzYWJsZWQnOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnBvc2l0aXZlLm1haW4sXG4gICAgICB9LFxuICAgIH0sXG4gICAgZnVsbFdpZHRoOiB7XG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgIH0sXG4gICAgaWNvbjoge1xuICAgICAgaGVpZ2h0OiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIHRvcDogdGhlbWUucHhUb1JlbSgtMSksXG4gICAgICB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJyxcbiAgICAgIHdpZHRoOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgIH0sXG4gICAgdHJhaWxpbmdJY29uOiB7XG4gICAgICBtYXJnaW5SaWdodDogMCxcbiAgICAgIG1hcmdpbkxlZnQ6IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogQnV0dG9uU3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCB0eXBlIEJ1dHRvbkNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvblByb3BzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCdidXR0b24nPiB7XG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xuICBjb2xvcj86ICdkZWZhdWx0JyB8ICdpbnZlcnNlJyB8ICduZWdhdGl2ZScgfCAncG9zaXRpdmUnO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIGZ1bGxXaWR0aD86IGJvb2xlYW47XG4gIGljb24/OiBSZWFjdC5Db21wb25lbnRUeXBlPFJlYWN0LlNWR1Byb3BzPFNWR1NWR0VsZW1lbnQ+PjtcbiAgdmFyaWFudD86ICdjb250YWluZWQnIHwgJ291dGxpbmVkJyB8ICd0ZXh0JztcbiAgdHJhaWxpbmdJY29uPzogUmVhY3QuQ29tcG9uZW50VHlwZTxSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50Pj47XG59XG5cbmV4cG9ydCBjb25zdCBCdXR0b24gPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxCdXR0b25FbGVtZW50LCBCdXR0b25Qcm9wcz4oXG4gIChcbiAgICB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBjb2xvciA9ICdkZWZhdWx0JyxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICBmdWxsV2lkdGgsXG4gICAgICBpY29uOiBJY29uLFxuICAgICAgdHJhaWxpbmdJY29uOiBUcmFpbGluZ0ljb24sXG4gICAgICB2YXJpYW50ID0gJ2NvbnRhaW5lZCcsXG4gICAgICAuLi5yb290UHJvcHNcbiAgICB9LFxuICAgIHJlZlxuICApID0+IHtcbiAgICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcbiAgICByZXR1cm4gKFxuICAgICAgPGJ1dHRvblxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgIGNsYXNzZXMucm9vdCxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5vdXRsaW5lZF06IHZhcmlhbnQgPT09ICdvdXRsaW5lZCcsXG4gICAgICAgICAgICBbY2xhc3Nlcy50ZXh0XTogdmFyaWFudCA9PT0gJ3RleHQnLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgW2NsYXNzZXMuY29udGFpbmVkSW52ZXJzZV06XG4gICAgICAgICAgICAgIHZhcmlhbnQgPT09ICdjb250YWluZWQnICYmIGNvbG9yID09PSAnaW52ZXJzZScsXG4gICAgICAgICAgICBbY2xhc3Nlcy5vdXRsaW5lZEludmVyc2VdOlxuICAgICAgICAgICAgICB2YXJpYW50ID09PSAnb3V0bGluZWQnICYmIGNvbG9yID09PSAnaW52ZXJzZScsXG4gICAgICAgICAgICBbY2xhc3Nlcy50ZXh0SW52ZXJzZV06IHZhcmlhbnQgPT09ICd0ZXh0JyAmJiBjb2xvciA9PT0gJ2ludmVyc2UnLFxuICAgICAgICAgICAgW2NsYXNzZXMuY29udGFpbmVkTmVnYXRpdmVdOlxuICAgICAgICAgICAgICB2YXJpYW50ID09PSAnY29udGFpbmVkJyAmJiBjb2xvciA9PT0gJ25lZ2F0aXZlJyxcbiAgICAgICAgICAgIFtjbGFzc2VzLm91dGxpbmVkTmVnYXRpdmVdOlxuICAgICAgICAgICAgICB2YXJpYW50ID09PSAnb3V0bGluZWQnICYmIGNvbG9yID09PSAnbmVnYXRpdmUnLFxuICAgICAgICAgICAgW2NsYXNzZXMudGV4dE5lZ2F0aXZlXTogdmFyaWFudCA9PT0gJ3RleHQnICYmIGNvbG9yID09PSAnbmVnYXRpdmUnLFxuICAgICAgICAgICAgW2NsYXNzZXMuY29udGFpbmVkUG9zaXRpdmVdOlxuICAgICAgICAgICAgICB2YXJpYW50ID09PSAnY29udGFpbmVkJyAmJiBjb2xvciA9PT0gJ3Bvc2l0aXZlJyxcbiAgICAgICAgICAgIFtjbGFzc2VzLm91dGxpbmVkUG9zaXRpdmVdOlxuICAgICAgICAgICAgICB2YXJpYW50ID09PSAnb3V0bGluZWQnICYmIGNvbG9yID09PSAncG9zaXRpdmUnLFxuICAgICAgICAgICAgW2NsYXNzZXMudGV4dFBvc2l0aXZlXTogdmFyaWFudCA9PT0gJ3RleHQnICYmIGNvbG9yID09PSAncG9zaXRpdmUnLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZnVsbFdpZHRoICYmIGNsYXNzZXMuZnVsbFdpZHRoLFxuICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICApfVxuICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWQgPyB0cnVlIDogdW5kZWZpbmVkfVxuICAgICAgICB0YWJJbmRleD17ZGlzYWJsZWQgPyAtMSA6IDB9XG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICB7Li4ucm9vdFByb3BzfVxuICAgICAgPlxuICAgICAgICB7ISFJY29uICYmIDxJY29uIHJvbGU9XCJpbWdcIiBhcmlhLWhpZGRlbiBjbGFzc05hbWU9e2NsYXNzZXMuaWNvbn0gLz59XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgeyEhVHJhaWxpbmdJY29uICYmIChcbiAgICAgICAgICA8VHJhaWxpbmdJY29uXG4gICAgICAgICAgICByb2xlPVwiaW1nXCJcbiAgICAgICAgICAgIGFyaWEtaGlkZGVuXG4gICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5pY29uLCBjbGFzc2VzLnRyYWlsaW5nSWNvbil9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgIDwvYnV0dG9uPlxuICAgICk7XG4gIH1cbik7XG4iXX0=