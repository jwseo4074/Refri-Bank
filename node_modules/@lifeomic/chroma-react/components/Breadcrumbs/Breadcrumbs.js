"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Breadcrumbs = exports.useStyles = exports.BreadcrumbsStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var index_1 = require("../../styles/index");
var Breadcrumb_1 = require("./Breadcrumb");
var BreadcrumbNav_1 = require("./BreadcrumbNav");
exports.BreadcrumbsStylesKey = 'ChromaBreadcrumbs';
exports.useStyles = (0, index_1.makeStyles)(function (_theme) { return ({
    root: {},
    inverse: {},
}); }, { name: exports.BreadcrumbsStylesKey });
var Breadcrumbs = function (_a) {
    var _b;
    var className = _a.className, color = _a.color, crumbs = _a.crumbs, rootProps = __rest(_a, ["className", "color", "crumbs"]);
    var classes = (0, exports.useStyles)({});
    return (React.createElement(BreadcrumbNav_1.BreadcrumbNav, __assign({ className: (0, clsx_1.default)(classes.root, (_b = {}, _b[classes.inverse] = color === 'inverse', _b), className) }, rootProps), crumbs &&
        crumbs.map(function (c, i) { return (React.createElement(Breadcrumb_1.Breadcrumb, { key: i, text: c.text, url: c.url, color: color, isCurrentPage: i === crumbs.length - 1 })); })));
};
exports.Breadcrumbs = Breadcrumbs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJlYWRjcnVtYnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9CcmVhZGNydW1icy9CcmVhZGNydW1icy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUMvQiw0Q0FBZ0Q7QUFFaEQsMkNBQTJEO0FBQzNELGlEQUFnRDtBQUVuQyxRQUFBLG9CQUFvQixHQUFHLG1CQUFtQixDQUFDO0FBRTNDLFFBQUEsU0FBUyxHQUFHLElBQUEsa0JBQVUsRUFDakMsVUFBQyxNQUFNLElBQUssT0FBQSxDQUFDO0lBQ1gsSUFBSSxFQUFFLEVBQUU7SUFDUixPQUFPLEVBQUUsRUFBRTtDQUNaLENBQUMsRUFIVSxDQUdWLEVBQ0YsRUFBRSxJQUFJLEVBQUUsNEJBQW9CLEVBQUUsQ0FDL0IsQ0FBQztBQWFLLElBQU0sV0FBVyxHQUErQixVQUFDLEVBS3ZEOztJQUpDLElBQUEsU0FBUyxlQUFBLEVBQ1QsS0FBSyxXQUFBLEVBQ0wsTUFBTSxZQUFBLEVBQ0gsU0FBUyxjQUowQyxnQ0FLdkQsQ0FEYTtJQUVaLElBQU0sT0FBTyxHQUFHLElBQUEsaUJBQVMsRUFBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQ0wsb0JBQUMsNkJBQWEsYUFDWixTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQ2IsT0FBTyxDQUFDLElBQUksWUFDVixHQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUcsS0FBSyxLQUFLLFNBQVMsT0FDeEMsU0FBUyxDQUNWLElBQ0csU0FBUyxHQUVaLE1BQU07UUFDTCxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSyxPQUFBLENBQ25CLG9CQUFDLHVCQUFVLElBQ1QsR0FBRyxFQUFFLENBQUMsRUFDTixJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFDWixHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFDVixLQUFLLEVBQUUsS0FBSyxFQUNaLGFBQWEsRUFBRSxDQUFDLEtBQUssTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQ3RDLENBQ0gsRUFSb0IsQ0FRcEIsQ0FBQyxDQUNVLENBQ2pCLENBQUM7QUFDSixDQUFDLENBQUM7QUE1QlcsUUFBQSxXQUFXLGVBNEJ0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcy9pbmRleCc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCB7IEJyZWFkY3J1bWIsIEJyZWFkY3J1bWJQcm9wcyB9IGZyb20gJy4vQnJlYWRjcnVtYic7XG5pbXBvcnQgeyBCcmVhZGNydW1iTmF2IH0gZnJvbSAnLi9CcmVhZGNydW1iTmF2JztcblxuZXhwb3J0IGNvbnN0IEJyZWFkY3J1bWJzU3R5bGVzS2V5ID0gJ0Nocm9tYUJyZWFkY3J1bWJzJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gIChfdGhlbWUpID0+ICh7XG4gICAgcm9vdDoge30sXG4gICAgaW52ZXJzZToge30sXG4gIH0pLFxuICB7IG5hbWU6IEJyZWFkY3J1bWJzU3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCB0eXBlIEJyZWFkY3J1bWJzQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnJlYWRjcnVtYnNQcm9wc1xuICBleHRlbmRzIFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFxuICAgIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxFbGVtZW50PixcbiAgICBIVE1MRWxlbWVudFxuICA+IHtcbiAgY29sb3I/OiBCcmVhZGNydW1iUHJvcHNbJ2NvbG9yJ107XG4gIGNydW1iczogQXJyYXk8QnJlYWRjcnVtYlByb3BzPjtcbn1cblxuZXhwb3J0IGNvbnN0IEJyZWFkY3J1bWJzOiBSZWFjdC5GQzxCcmVhZGNydW1ic1Byb3BzPiA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgY29sb3IsXG4gIGNydW1icyxcbiAgLi4ucm9vdFByb3BzXG59KSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICByZXR1cm4gKFxuICAgIDxCcmVhZGNydW1iTmF2XG4gICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgIGNsYXNzZXMucm9vdCxcbiAgICAgICAgeyBbY2xhc3Nlcy5pbnZlcnNlXTogY29sb3IgPT09ICdpbnZlcnNlJyB9LFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgICB7Li4ucm9vdFByb3BzfVxuICAgID5cbiAgICAgIHtjcnVtYnMgJiZcbiAgICAgICAgY3J1bWJzLm1hcCgoYywgaSkgPT4gKFxuICAgICAgICAgIDxCcmVhZGNydW1iXG4gICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICB0ZXh0PXtjLnRleHR9XG4gICAgICAgICAgICB1cmw9e2MudXJsfVxuICAgICAgICAgICAgY29sb3I9e2NvbG9yfVxuICAgICAgICAgICAgaXNDdXJyZW50UGFnZT17aSA9PT0gY3J1bWJzLmxlbmd0aCAtIDF9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSl9XG4gICAgPC9CcmVhZGNydW1iTmF2PlxuICApO1xufTtcbiJdfQ==