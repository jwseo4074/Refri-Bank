"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
var Box_1 = require("../Box");
var Pill_1 = require("../Pill");
var Text_1 = require("../Text");
exports.StepStylesKey = 'ChromaStep';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    buttonRoot: {
        alignItems: 'center',
        backgroundColor: 'transparent',
        border: 'none',
        cursor: 'pointer',
        display: 'flex',
        flexDirection: 'column',
        fontFamily: theme.typography.fontFamily,
        minWidth: theme.pxToRem(110),
        paddingBottom: theme.spacing(1.5),
        '&:focus': {
            outline: 'none',
        },
        '&:hover': {
            '&>div': {
                transform: 'scale(1.1)',
                transition: '0.25s cubic-bezier(0.2, 0.8, 0.2, 1)',
            },
        },
    },
    divRoot: {
        minWidth: theme.pxToRem(110),
        padding: theme.spacing(0, 0.875, 1.5, 0.875),
    },
    activeRoot: {
        borderBottom: "2px solid " + theme.palette.primary.main,
        paddingBottom: theme.spacing(1.25),
    },
    completedRoot: {},
    iconContainer: {
        width: theme.pxToRem(56),
        height: theme.pxToRem(56),
        minWidth: theme.pxToRem(56),
        minHeight: theme.pxToRem(56),
        borderRadius: theme.pxToRem(9999),
        backgroundColor: theme.palette.common.white,
        border: "2px solid " + theme.palette.black[200],
        transition: 'background-color .5s ease, border .5s ease, box-shadow .5s ease',
        '@media screen and (max-width: 850px)': {
            width: theme.pxToRem(40),
            height: theme.pxToRem(40),
            minWidth: theme.pxToRem(40),
            minHeight: theme.pxToRem(40),
        },
    },
    completed: {
        border: "2px solid " + theme.palette.common.white,
        boxShadow: theme.boxShadows.table,
    },
    active: {
        backgroundColor: theme.palette.primary[50],
        border: "2px solid " + theme.palette.primary.main,
        boxShadow: theme.boxShadows.table,
    },
    icon: {
        color: theme.palette.black[500],
        transition: 'color .5s ease',
    },
    activeIcon: {
        color: theme.palette.primary.main,
    },
    completedIcon: {
        color: theme.palette.black[500],
        opacity: 0.75,
    },
    title: {
        color: theme.palette.black[500],
        transition: 'color .5s ease',
        '&:first-of-type': {
            marginTop: theme.spacing(1.5),
        },
        '@media screen and (max-width: 850px)': {
            fontSize: theme.pxToRem(12),
        },
    },
    activeTitle: {
        color: theme.palette.primary.main,
    },
    pillSubTitle: {
        transition: 'background .5s ease',
        marginTop: theme.spacing(0.5),
    },
    completedPillSubTitle: {
        background: theme.palette.black[500],
        marginTop: theme.spacing(0.5),
        opacity: 0.75,
    },
    disabled: {
        cursor: 'not-allowed',
        '&:hover': {
            '&>div': {
                transform: 'none',
            },
        },
    },
}); }, { name: exports.StepStylesKey });
exports.Step = function (_a) {
    var active = _a.active, as = _a.as, className = _a.className, completed = _a.completed, disabled = _a.disabled, Icon = _a.icon, index = _a.index, onClick = _a.onClick, subTitle = _a.subTitle, subTitlePillLabel = _a.subTitlePillLabel, title = _a.title, rootProps = __rest(_a, ["active", "as", "className", "completed", "disabled", "icon", "index", "onClick", "subTitle", "subTitlePillLabel", "title"]);
    var classes = exports.useStyles({});
    var handleClick = function () {
        onClick === null || onClick === void 0 ? void 0 : onClick(index);
    };
    var content = (React.createElement(React.Fragment, null,
        React.createElement(Box_1.Box, { align: "center", className: clsx_1.default(classes.iconContainer, active && classes.active, completed && classes.completed), justify: "center" }, Icon ? (React.createElement(Icon, { "aria-hidden": "true", className: clsx_1.default(classes.icon, active && classes.activeIcon, completed && classes.completedIcon), role: "img" })) : (React.createElement(Text_1.Text, { "aria-hidden": "true", size: "headline", className: clsx_1.default(classes.icon, active && classes.activeIcon, completed && classes.completedIcon) }, (index || 0) + 1))),
        React.createElement(Text_1.Text, { className: clsx_1.default(classes.title, active && classes.activeTitle), size: "subbody" }, title),
        subTitle && !subTitlePillLabel && (React.createElement(Text_1.Text, { className: clsx_1.default(classes.title, active && classes.activeTitle), size: "caption" }, subTitle)),
        subTitlePillLabel && !subTitle && (React.createElement(Pill_1.Pill, { className: clsx_1.default(classes.pillSubTitle, completed && classes.completedPillSubTitle), color: active ? 'primary' : 'default', label: subTitlePillLabel }))));
    if (as === 'button') {
        return (React.createElement("button", __assign({ className: clsx_1.default(classes.buttonRoot, active && classes.activeRoot, completed && classes.completedRoot, disabled && classes.disabled, className), disabled: disabled, onClick: handleClick }, rootProps), content));
    }
    else {
        return (React.createElement(Box_1.Box, __assign({ align: "center", className: clsx_1.default(classes.divRoot, active && classes.activeRoot, completed && classes.completedRoot, className), direction: "column" }, rootProps), content));
    }
};
//# sourceMappingURL=data:application/json;base64,