"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
exports.IconTileStylesKey = 'ChromaIconTile';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        width: theme.pxToRem(202),
        height: theme.pxToRem(200),
        borderRadius: 10,
        overflow: 'hidden',
        position: 'relative',
        display: 'flex',
        flexDirection: 'column',
        background: theme.palette.common.white,
        boxShadow: theme.boxShadows.table,
    },
    cursorPointer: {
        cursor: 'pointer',
        transition: 'transform 0.5s ease, box-shadow 0.25s ease-out',
        '&:hover, &:focus': {
            outline: 'none',
            transform: 'translate3d(0, -2px, 0)',
            boxShadow: theme.boxShadows.elevatedContent,
            '& > * > p,span': {
                transition: 'color 0.5s ease',
                color: theme.palette.primary.main,
            },
        },
    },
}); }, { name: exports.IconTileStylesKey });
exports.IconTile = React.forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, onClick = _a.onClick, rootProps = __rest(_a, ["children", "className", "onClick"]);
    var classes = exports.useStyles({});
    return (
    // We conditionally add the role if `onClick` is provided
    // eslint-disable-next-line jsx-a11y/no-static-element-interactions
    React.createElement("div", __assign({ ref: ref, className: clsx_1.default(classes.root, className, !!onClick && classes.cursorPointer), role: onClick ? 'button' : undefined, tabIndex: onClick ? 0 : undefined, onClick: onClick }, rootProps), children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWNvblRpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9JY29uVGlsZS9JY29uVGlsZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhDQUF3QjtBQUN4QiwyQ0FBK0I7QUFDL0IsdUNBQTBDO0FBRzdCLFFBQUEsaUJBQWlCLEdBQUcsZ0JBQWdCLENBQUM7QUFFckMsUUFBQSxTQUFTLEdBQUcsbUJBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ3pCLE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUMxQixZQUFZLEVBQUUsRUFBRTtRQUNoQixRQUFRLEVBQUUsUUFBUTtRQUNsQixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsTUFBTTtRQUNmLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1FBQ3RDLFNBQVMsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLEtBQUs7S0FDbEM7SUFDRCxhQUFhLEVBQUU7UUFDYixNQUFNLEVBQUUsU0FBUztRQUNqQixVQUFVLEVBQUUsZ0RBQWdEO1FBQzVELGtCQUFrQixFQUFFO1lBQ2xCLE9BQU8sRUFBRSxNQUFNO1lBQ2YsU0FBUyxFQUFFLHlCQUF5QjtZQUNwQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxlQUFlO1lBQzNDLGdCQUFnQixFQUFFO2dCQUNoQixVQUFVLEVBQUUsaUJBQWlCO2dCQUM3QixLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSTthQUNsQztTQUNGO0tBQ0Y7Q0FDRixDQUFDLEVBekJTLENBeUJULEVBQ0YsRUFBRSxJQUFJLEVBQUUseUJBQWlCLEVBQUUsQ0FDNUIsQ0FBQztBQVlXLFFBQUEsUUFBUSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQ3RDLFVBQUMsRUFBOEMsRUFBRSxHQUFHO0lBQWpELElBQUEsc0JBQVEsRUFBRSx3QkFBUyxFQUFFLG9CQUFPLEVBQUUsNERBQVk7SUFDM0MsSUFBTSxPQUFPLEdBQUcsaUJBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUU5QixPQUFPO0lBQ0wseURBQXlEO0lBQ3pELG1FQUFtRTtJQUNuRSxzQ0FDRSxHQUFHLEVBQUUsR0FBRyxFQUNSLFNBQVMsRUFBRSxjQUFJLENBQ2IsT0FBTyxDQUFDLElBQUksRUFDWixTQUFTLEVBQ1QsQ0FBQyxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsYUFBYSxDQUNuQyxFQUNELElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUNwQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFDakMsT0FBTyxFQUFFLE9BQU8sSUFDWixTQUFTLEdBRVosUUFBUSxDQUNMLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuXG5leHBvcnQgY29uc3QgSWNvblRpbGVTdHlsZXNLZXkgPSAnQ2hyb21hSWNvblRpbGUnO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIHdpZHRoOiB0aGVtZS5weFRvUmVtKDIwMiksXG4gICAgICBoZWlnaHQ6IHRoZW1lLnB4VG9SZW0oMjAwKSxcbiAgICAgIGJvcmRlclJhZGl1czogMTAsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgYmFja2dyb3VuZDogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICBib3hTaGFkb3c6IHRoZW1lLmJveFNoYWRvd3MudGFibGUsXG4gICAgfSxcbiAgICBjdXJzb3JQb2ludGVyOiB7XG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIHRyYW5zaXRpb246ICd0cmFuc2Zvcm0gMC41cyBlYXNlLCBib3gtc2hhZG93IDAuMjVzIGVhc2Utb3V0JyxcbiAgICAgICcmOmhvdmVyLCAmOmZvY3VzJzoge1xuICAgICAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIC0ycHgsIDApJywgLy8gR1BVIGFjY2VsZXJhdGlvbiBvbiB0cmFuc2l0aW9uXG4gICAgICAgIGJveFNoYWRvdzogdGhlbWUuYm94U2hhZG93cy5lbGV2YXRlZENvbnRlbnQsXG4gICAgICAgICcmID4gKiA+IHAsc3Bhbic6IHtcbiAgICAgICAgICB0cmFuc2l0aW9uOiAnY29sb3IgMC41cyBlYXNlJyxcbiAgICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IEljb25UaWxlU3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWNvblRpbGVPd25Qcm9wc1xuICBleHRlbmRzIFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFxuICAgIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PixcbiAgICBIVE1MRGl2RWxlbWVudFxuICA+IHt9XG5cbmV4cG9ydCB0eXBlIEljb25UaWxlQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWNvblRpbGVQcm9wcyBleHRlbmRzIEljb25UaWxlT3duUHJvcHMge31cblxuZXhwb3J0IGNvbnN0IEljb25UaWxlID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MRGl2RWxlbWVudCwgSWNvblRpbGVQcm9wcz4oXG4gICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIG9uQ2xpY2ssIC4uLnJvb3RQcm9wcyB9LCByZWYpID0+IHtcbiAgICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcblxuICAgIHJldHVybiAoXG4gICAgICAvLyBXZSBjb25kaXRpb25hbGx5IGFkZCB0aGUgcm9sZSBpZiBgb25DbGlja2AgaXMgcHJvdmlkZWRcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9uby1zdGF0aWMtZWxlbWVudC1pbnRlcmFjdGlvbnNcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICBjbGFzc2VzLnJvb3QsXG4gICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICEhb25DbGljayAmJiBjbGFzc2VzLmN1cnNvclBvaW50ZXJcbiAgICAgICAgKX1cbiAgICAgICAgcm9sZT17b25DbGljayA/ICdidXR0b24nIDogdW5kZWZpbmVkfVxuICAgICAgICB0YWJJbmRleD17b25DbGljayA/IDAgOiB1bmRlZmluZWR9XG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgIHsuLi5yb290UHJvcHN9XG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbik7XG4iXX0=