"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var index_1 = require("../../styles/index");
var Text_1 = require("../Text");
exports.IconTileContentStylesKey = 'ChromaIconTileContent';
exports.useStyles = index_1.makeStyles(function (theme) { return ({
    root: {
        width: '100%',
        height: '57%',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center',
    },
    text: {
        marginTop: theme.spacing(1),
        fontSize: theme.pxToRem(18),
        fontWeight: theme.typography.fontWeightBold,
        letterSpacing: 0.25,
    },
    caption: {
        color: theme.palette.black[500],
        textTransform: 'uppercase',
        letterSpacing: 2,
    },
}); }, { name: exports.IconTileContentStylesKey });
exports.IconTileContent = React.forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, text = _a.text, caption = _a.caption, rootProps = __rest(_a, ["children", "className", "text", "caption"]);
    var classes = exports.useStyles({});
    return (React.createElement("div", __assign({ ref: ref, className: clsx_1.default(classes.root, className) }, rootProps),
        !!text && React.createElement(Text_1.Text, { className: classes.text }, text),
        !!caption && (React.createElement(Text_1.Text, { size: "caption", className: classes.caption }, caption)),
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWNvblRpbGVDb250ZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvSWNvblRpbGUvSWNvblRpbGVDb250ZW50LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUMvQiw0Q0FBZ0Q7QUFFaEQsZ0NBQStCO0FBRWxCLFFBQUEsd0JBQXdCLEdBQUcsdUJBQXVCLENBQUM7QUFFbkQsUUFBQSxTQUFTLEdBQUcsa0JBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLE1BQU07UUFDYixNQUFNLEVBQUUsS0FBSztRQUNiLE9BQU8sRUFBRSxNQUFNO1FBQ2YsYUFBYSxFQUFFLFFBQVE7UUFDdkIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsVUFBVSxFQUFFLFFBQVE7S0FDckI7SUFDRCxJQUFJLEVBQUU7UUFDSixTQUFTLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDM0IsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQzNCLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLGNBQWM7UUFDM0MsYUFBYSxFQUFFLElBQUk7S0FDcEI7SUFDRCxPQUFPLEVBQUU7UUFDUCxLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQy9CLGFBQWEsRUFBRSxXQUFXO1FBQzFCLGFBQWEsRUFBRSxDQUFDO0tBQ2pCO0NBQ0YsQ0FBQyxFQXBCUyxDQW9CVCxFQUNGLEVBQUUsSUFBSSxFQUFFLGdDQUF3QixFQUFFLENBQ25DLENBQUM7QUFlVyxRQUFBLGVBQWUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUc3QyxVQUFDLEVBQW9ELEVBQUUsR0FBRztJQUF2RCxJQUFBLHNCQUFRLEVBQUUsd0JBQVMsRUFBRSxjQUFJLEVBQUUsb0JBQU8sRUFBRSxvRUFBWTtJQUNuRCxJQUFNLE9BQU8sR0FBRyxpQkFBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRTlCLE9BQU8sQ0FDTCxzQ0FBSyxHQUFHLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxjQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsSUFBTSxTQUFTO1FBQ25FLENBQUMsQ0FBQyxJQUFJLElBQUksb0JBQUMsV0FBSSxJQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsSUFBSSxJQUFHLElBQUksQ0FBUTtRQUN0RCxDQUFDLENBQUMsT0FBTyxJQUFJLENBQ1osb0JBQUMsV0FBSSxJQUFDLElBQUksRUFBQyxTQUFTLEVBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxPQUFPLElBQzVDLE9BQU8sQ0FDSCxDQUNSO1FBQ0EsUUFBUSxDQUNMLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzL2luZGV4JztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uL1RleHQnO1xuXG5leHBvcnQgY29uc3QgSWNvblRpbGVDb250ZW50U3R5bGVzS2V5ID0gJ0Nocm9tYUljb25UaWxlQ29udGVudCc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIGhlaWdodDogJzU3JScsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgbWFyZ2luVG9wOiB0aGVtZS5zcGFjaW5nKDEpLFxuICAgICAgZm9udFNpemU6IHRoZW1lLnB4VG9SZW0oMTgpLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0Qm9sZCxcbiAgICAgIGxldHRlclNwYWNpbmc6IDAuMjUsXG4gICAgfSxcbiAgICBjYXB0aW9uOiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5ibGFja1s1MDBdLFxuICAgICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZScsXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAyLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IEljb25UaWxlQ29udGVudFN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgaW50ZXJmYWNlIEljb25UaWxlQ29udGVudE93blByb3BzXG4gIGV4dGVuZHMgUmVhY3QuRGV0YWlsZWRIVE1MUHJvcHM8XG4gICAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+LFxuICAgIEhUTUxEaXZFbGVtZW50XG4gID4ge1xuICB0ZXh0Pzogc3RyaW5nO1xuICBjYXB0aW9uPzogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBJY29uVGlsZUNvbnRlbnRDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBJY29uVGlsZUNvbnRlbnRQcm9wcyBleHRlbmRzIEljb25UaWxlQ29udGVudE93blByb3BzIHt9XG5cbmV4cG9ydCBjb25zdCBJY29uVGlsZUNvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MRGl2RWxlbWVudCxcbiAgSWNvblRpbGVDb250ZW50UHJvcHNcbj4oKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgdGV4dCwgY2FwdGlvbiwgLi4ucm9vdFByb3BzIH0sIHJlZikgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9IHsuLi5yb290UHJvcHN9PlxuICAgICAgeyEhdGV4dCAmJiA8VGV4dCBjbGFzc05hbWU9e2NsYXNzZXMudGV4dH0+e3RleHR9PC9UZXh0Pn1cbiAgICAgIHshIWNhcHRpb24gJiYgKFxuICAgICAgICA8VGV4dCBzaXplPVwiY2FwdGlvblwiIGNsYXNzTmFtZT17Y2xhc3Nlcy5jYXB0aW9ufT5cbiAgICAgICAgICB7Y2FwdGlvbn1cbiAgICAgICAgPC9UZXh0PlxuICAgICAgKX1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuIl19