"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IconTileBadge = exports.useStyles = exports.IconTileBadgeStylesKey = void 0;
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var index_1 = require("../../styles/index");
exports.IconTileBadgeStylesKey = 'ChromaIconTileBadge';
exports.useStyles = (0, index_1.makeStyles)(function (theme) { return ({
    root: {
        display: 'flex',
        width: theme.pxToRem(67),
        height: theme.pxToRem(67),
        position: 'absolute',
        top: 'calc(50% - 3.125rem)',
        left: 'calc(50% - 2.125rem)',
        backgroundColor: theme.palette.common.white,
        borderRadius: '100%',
        boxShadow: '0px 4px 34px rgba(0, 0, 0, 0.25)',
        color: theme.palette.primary.main,
    },
    icon: {
        height: '100%',
        display: 'flex',
        margin: '0 auto',
    },
}); }, { name: exports.IconTileBadgeStylesKey });
exports.IconTileBadge = React.forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, Icon = _a.icon, rootProps = __rest(_a, ["children", "className", "icon"]);
    var classes = (0, exports.useStyles)({});
    return (React.createElement("div", __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, className) }, rootProps),
        !!Icon && (React.createElement(Icon, { className: classes.icon, role: "img", "aria-hidden": true, width: 24, height: 24 })),
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWNvblRpbGVCYWRnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0ljb25UaWxlL0ljb25UaWxlQmFkZ2UudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhDQUF3QjtBQUN4QiwyQ0FBK0I7QUFDL0IsNENBQWdEO0FBR25DLFFBQUEsc0JBQXNCLEdBQUcscUJBQXFCLENBQUM7QUFFL0MsUUFBQSxTQUFTLEdBQUcsSUFBQSxrQkFBVSxFQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUN4QixNQUFNLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDekIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsR0FBRyxFQUFFLHNCQUFzQjtRQUMzQixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1FBQzNDLFlBQVksRUFBRSxNQUFNO1FBQ3BCLFNBQVMsRUFBRSxrQ0FBa0M7UUFDN0MsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUk7S0FDbEM7SUFDRCxJQUFJLEVBQUU7UUFDSixNQUFNLEVBQUUsTUFBTTtRQUNkLE9BQU8sRUFBRSxNQUFNO1FBQ2YsTUFBTSxFQUFFLFFBQVE7S0FDakI7Q0FDRixDQUFDLEVBbEJTLENBa0JULEVBQ0YsRUFBRSxJQUFJLEVBQUUsOEJBQXNCLEVBQUUsQ0FDakMsQ0FBQztBQWVXLFFBQUEsYUFBYSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBRzNDLFVBQUMsRUFBaUQsRUFBRSxHQUFHO0lBQXBELElBQUEsUUFBUSxjQUFBLEVBQUUsU0FBUyxlQUFBLEVBQVEsSUFBSSxVQUFBLEVBQUssU0FBUyxjQUEvQyxpQ0FBaUQsQ0FBRjtJQUNoRCxJQUFNLE9BQU8sR0FBRyxJQUFBLGlCQUFTLEVBQUMsRUFBRSxDQUFDLENBQUM7SUFFOUIsT0FBTyxDQUNMLHNDQUFLLEdBQUcsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUEsY0FBSSxFQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQU0sU0FBUztRQUNuRSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQ1Qsb0JBQUMsSUFBSSxJQUNILFNBQVMsRUFBRSxPQUFPLENBQUMsSUFBSSxFQUN2QixJQUFJLEVBQUMsS0FBSyx1QkFFVixLQUFLLEVBQUUsRUFBRSxFQUNULE1BQU0sRUFBRSxFQUFFLEdBQ1YsQ0FDSDtRQUNBLFFBQVEsQ0FDTCxDQUNQLENBQUM7QUFDSixDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcy9pbmRleCc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcblxuZXhwb3J0IGNvbnN0IEljb25UaWxlQmFkZ2VTdHlsZXNLZXkgPSAnQ2hyb21hSWNvblRpbGVCYWRnZSc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgd2lkdGg6IHRoZW1lLnB4VG9SZW0oNjcpLFxuICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDY3KSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgdG9wOiAnY2FsYyg1MCUgLSAzLjEyNXJlbSknLFxuICAgICAgbGVmdDogJ2NhbGMoNTAlIC0gMi4xMjVyZW0pJyxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICBib3JkZXJSYWRpdXM6ICcxMDAlJyxcbiAgICAgIGJveFNoYWRvdzogJzBweCA0cHggMzRweCByZ2JhKDAsIDAsIDAsIDAuMjUpJyxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICB9LFxuICAgIGljb246IHtcbiAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgbWFyZ2luOiAnMCBhdXRvJyxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBJY29uVGlsZUJhZGdlU3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWNvblRpbGVCYWRnZU93blByb3BzXG4gIGV4dGVuZHMgUmVhY3QuRGV0YWlsZWRIVE1MUHJvcHM8XG4gICAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+LFxuICAgIEhUTUxEaXZFbGVtZW50XG4gID4ge1xuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgaWNvbj86IFJlYWN0LkNvbXBvbmVudFR5cGU8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+O1xufVxuXG5leHBvcnQgdHlwZSBJY29uVGlsZUJhZGdlQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWNvblRpbGVCYWRnZVByb3BzIGV4dGVuZHMgSWNvblRpbGVCYWRnZU93blByb3BzIHt9XG5cbmV4cG9ydCBjb25zdCBJY29uVGlsZUJhZGdlID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTERpdkVsZW1lbnQsXG4gIEljb25UaWxlQmFkZ2VQcm9wc1xuPigoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBpY29uOiBJY29uLCAuLi5yb290UHJvcHMgfSwgcmVmKSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e3JlZn0gY2xhc3NOYW1lPXtjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKX0gey4uLnJvb3RQcm9wc30+XG4gICAgICB7ISFJY29uICYmIChcbiAgICAgICAgPEljb25cbiAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXMuaWNvbn1cbiAgICAgICAgICByb2xlPVwiaW1nXCJcbiAgICAgICAgICBhcmlhLWhpZGRlblxuICAgICAgICAgIHdpZHRoPXsyNH1cbiAgICAgICAgICBoZWlnaHQ9ezI0fVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuIl19