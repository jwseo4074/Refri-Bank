"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Snackbar = exports.useStyles = exports.SnackbarStylesKey = void 0;
var styles_1 = require("../../styles");
var framer_motion_1 = require("framer-motion");
var Text_1 = require("../Text");
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var IconButton_1 = require("../IconButton");
var chromicons_1 = require("@lifeomic/chromicons");
exports.SnackbarStylesKey = 'ChromaSnackbar';
exports.useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    root: {
        color: theme.palette.text.secondary,
        paddingTop: theme.spacing(1),
        paddingBottom: theme.spacing(1),
        paddingLeft: theme.spacing(2),
        paddingRight: theme.spacing(2),
        backgroundColor: theme.palette.common.white,
        borderRadius: 'unset',
        position: 'fixed',
        display: 'flex',
        alignItems: 'center',
        boxShadow: theme.boxShadows.tooltip,
        top: 0,
        right: 0,
        zIndex: 1500,
        pointerEvents: 'auto',
        '@media screen and (max-width: 480px)': {
            top: 'unset',
            bottom: 0,
            width: '100%',
        },
    },
    infoModifier: {
        borderLeft: "10px solid ".concat(theme.palette.blue.main),
    },
    errorModifier: {
        borderLeft: "10px solid ".concat(theme.palette.red.main),
    },
    warningModifier: {
        borderLeft: "10px solid ".concat(theme.palette.yellow.main),
    },
    successModifier: {
        borderLeft: "10px solid ".concat(theme.palette.green.main),
    },
    icon: {
        width: theme.pxToRem(16),
        height: theme.pxToRem(16),
        marginRight: theme.spacing(1),
    },
    title: {
        color: theme.palette.black[600],
    },
    closeButton: {
        marginLeft: theme.spacing(2),
        borderLeft: "1px solid ".concat(theme.palette.divider),
    },
}); }, { name: exports.SnackbarStylesKey });
exports.Snackbar = React.forwardRef(function (_a, ref) {
    var _b;
    var className = _a.className, _c = _a.duration, duration = _c === void 0 ? 6000 : _c, Icon = _a.icon, _d = _a.isOpen, isOpen = _d === void 0 ? false : _d, _e = _a.allowDismiss, allowDismiss = _e === void 0 ? false : _e, onClose = _a.onClose, _f = _a.role, role = _f === void 0 ? 'status' : _f, _g = _a.statusType, statusType = _g === void 0 ? 'info' : _g, title = _a.title, children = _a.children, rootProps = __rest(_a, ["className", "duration", "icon", "isOpen", "allowDismiss", "onClose", "role", "statusType", "title", "children"]);
    var classes = (0, exports.useStyles)({});
    var shouldReduceMotion = (0, framer_motion_1.useReducedMotion)();
    var _h = React.useState(duration), snackbarTimeout = _h[0], setSnackbarTimeout = _h[1];
    // Event handlers
    var onMouseEnter = function () { return setSnackbarTimeout(null); };
    var onMouseLeave = function () { return setSnackbarTimeout(duration); };
    var closeSnackbar = React.useCallback(function () {
        onClose && onClose();
    }, [onClose]);
    // Use a ref to close our Snackbar after the timeout
    var callbackRef = React.useRef();
    React.useEffect(function () {
        if (!callbackRef.current) {
            callbackRef.current = closeSnackbar;
        }
    }, [closeSnackbar]);
    React.useEffect(function () {
        // Ignore setting up a timer for the Snackbar
        // if one is not isOpen.
        if (!isOpen) {
            return;
        }
        var tick = function () {
            if (callbackRef.current) {
                callbackRef.current();
            }
        };
        if (snackbarTimeout) {
            var id_1 = setTimeout(tick, snackbarTimeout);
            return function () { return clearTimeout(id_1); };
        }
    }, [snackbarTimeout, isOpen]);
    return (React.createElement(framer_motion_1.AnimatePresence, { initial: false }, isOpen ? (React.createElement(framer_motion_1.motion.div, __assign({ ref: ref, className: (0, clsx_1.default)(classes.root, (_b = {},
            _b[classes.infoModifier] = statusType === 'info',
            _b[classes.errorModifier] = statusType === 'error',
            _b[classes.warningModifier] = statusType === 'warning',
            _b[classes.successModifier] = statusType === 'success',
            _b), className), "aria-live": role === 'alert' ? 'assertive' : 'polite', role: role, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, positionTransition: true, initial: shouldReduceMotion ? { opacity: 0 } : { opacity: 0, y: -40 }, animate: shouldReduceMotion
            ? { opacity: 1 }
            : {
                opacity: 1,
                y: 0,
            }, exit: shouldReduceMotion
            ? { opacity: 0 }
            : {
                opacity: 0,
                y: 60,
                transition: { duration: 0.25, ease: 'easeIn' },
            } }, rootProps),
        !!Icon && React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon }),
        children ? (children) : (React.createElement(Text_1.Text, { className: classes.title }, title)),
        allowDismiss && (React.createElement(React.Fragment, null,
            React.createElement(IconButton_1.IconButton, { className: classes.closeButton, "aria-label": "Close Notification", size: 0, paddingTop: 0, paddingBottom: 0, paddingRight: 0, icon: chromicons_1.X, onClick: closeSnackbar }))))) : null));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU25hY2tiYXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9TbmFja2Jhci9TbmFja2Jhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsdUNBQTBDO0FBQzFDLCtDQUEwRTtBQUMxRSxnQ0FBK0I7QUFDL0IsOENBQXdCO0FBQ3hCLDJDQUErQjtBQUMvQiw0Q0FBMkM7QUFDM0MsbURBQXlDO0FBRzVCLFFBQUEsaUJBQWlCLEdBQUcsZ0JBQWdCLENBQUM7QUFFckMsUUFBQSxTQUFTLEdBQUcsSUFBQSxtQkFBVSxFQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUztRQUNuQyxVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDNUIsYUFBYSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQy9CLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3QixZQUFZLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDOUIsZUFBZSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFDM0MsWUFBWSxFQUFFLE9BQU87UUFDckIsUUFBUSxFQUFFLE9BQU87UUFDakIsT0FBTyxFQUFFLE1BQU07UUFDZixVQUFVLEVBQUUsUUFBUTtRQUNwQixTQUFTLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPO1FBQ25DLEdBQUcsRUFBRSxDQUFDO1FBQ04sS0FBSyxFQUFFLENBQUM7UUFDUixNQUFNLEVBQUUsSUFBSTtRQUNaLGFBQWEsRUFBRSxNQUFNO1FBQ3JCLHNDQUFzQyxFQUFFO1lBQ3RD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ZCxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ1EsQ0FDbkIsQ0FBQztBQUNKLENBQUMsQ0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IG1vdGlvbiwgQW5pbWF0ZVByZXNlbmNlLCB1c2VSZWR1Y2VkTW90aW9uIH0gZnJvbSAnZnJhbWVyLW1vdGlvbic7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vVGV4dCc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEljb25CdXR0b24gfSBmcm9tICcuLi9JY29uQnV0dG9uJztcbmltcG9ydCB7IFggfSBmcm9tICdAbGlmZW9taWMvY2hyb21pY29ucyc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25TdGF0dXNUeXBlIH0gZnJvbSAnLi4vX3ByaXZhdGUvbm90aWZpY2F0aW9uVHlwZXMnO1xuXG5leHBvcnQgY29uc3QgU25hY2tiYXJTdHlsZXNLZXkgPSAnQ2hyb21hU25hY2tiYXInO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQuc2Vjb25kYXJ5LFxuICAgICAgcGFkZGluZ1RvcDogdGhlbWUuc3BhY2luZygxKSxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZygyKSxcbiAgICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZygyKSxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICBib3JkZXJSYWRpdXM6ICd1bnNldCcsXG4gICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgYm94U2hhZG93OiB0aGVtZS5ib3hTaGFkb3dzLnRvb2x0aXAsXG4gICAgICB0b3A6IDAsXG4gICAgICByaWdodDogMCxcbiAgICAgIHpJbmRleDogMTUwMCxcbiAgICAgIHBvaW50ZXJFdmVudHM6ICdhdXRvJyxcbiAgICAgICdAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCknOiB7XG4gICAgICAgIHRvcDogJ3Vuc2V0JyxcbiAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGluZm9Nb2RpZmllcjoge1xuICAgICAgYm9yZGVyTGVmdDogYDEwcHggc29saWQgJHt0aGVtZS5wYWxldHRlLmJsdWUubWFpbn1gLFxuICAgIH0sXG4gICAgZXJyb3JNb2RpZmllcjoge1xuICAgICAgYm9yZGVyTGVmdDogYDEwcHggc29saWQgJHt0aGVtZS5wYWxldHRlLnJlZC5tYWlufWAsXG4gICAgfSxcbiAgICB3YXJuaW5nTW9kaWZpZXI6IHtcbiAgICAgIGJvcmRlckxlZnQ6IGAxMHB4IHNvbGlkICR7dGhlbWUucGFsZXR0ZS55ZWxsb3cubWFpbn1gLFxuICAgIH0sXG4gICAgc3VjY2Vzc01vZGlmaWVyOiB7XG4gICAgICBib3JkZXJMZWZ0OiBgMTBweCBzb2xpZCAke3RoZW1lLnBhbGV0dGUuZ3JlZW4ubWFpbn1gLFxuICAgIH0sXG4gICAgaWNvbjoge1xuICAgICAgd2lkdGg6IHRoZW1lLnB4VG9SZW0oMTYpLFxuICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDE2KSxcbiAgICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nKDEpLFxuICAgIH0sXG4gICAgdGl0bGU6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmJsYWNrWzYwMF0sXG4gICAgfSxcbiAgICBjbG9zZUJ1dHRvbjoge1xuICAgICAgbWFyZ2luTGVmdDogdGhlbWUuc3BhY2luZygyKSxcbiAgICAgIGJvcmRlckxlZnQ6IGAxcHggc29saWQgJHt0aGVtZS5wYWxldHRlLmRpdmlkZXJ9YCxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBTbmFja2JhclN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBTbmFja2JhckNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNuYWNrYmFyUHJvcHMge1xuICBkdXJhdGlvbj86IG51bWJlcjtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgaWNvbj86IFJlYWN0LkNvbXBvbmVudFR5cGU8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+O1xuICBpc09wZW4/OiBib29sZWFuO1xuICBhbGxvd0Rpc21pc3M/OiBib29sZWFuO1xuICBvbkNsb3NlPzogKCkgPT4gdm9pZDtcbiAgcm9sZT86ICdhbGVydCcgfCAnc3RhdHVzJztcbiAgc3RhdHVzVHlwZT86IE5vdGlmaWNhdGlvblN0YXR1c1R5cGU7XG4gIHRpdGxlPzogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgU25hY2tiYXI6IFJlYWN0LkZDPFNuYWNrYmFyUHJvcHM+ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTERpdkVsZW1lbnQsXG4gIFNuYWNrYmFyUHJvcHNcbj4oXG4gIChcbiAgICB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBkdXJhdGlvbiA9IDYwMDAsXG4gICAgICBpY29uOiBJY29uLFxuICAgICAgaXNPcGVuID0gZmFsc2UsXG4gICAgICBhbGxvd0Rpc21pc3MgPSBmYWxzZSxcbiAgICAgIG9uQ2xvc2UsXG4gICAgICByb2xlID0gJ3N0YXR1cycsXG4gICAgICBzdGF0dXNUeXBlID0gJ2luZm8nLFxuICAgICAgdGl0bGUsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIC4uLnJvb3RQcm9wc1xuICAgIH0sXG4gICAgcmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuXG4gICAgY29uc3Qgc2hvdWxkUmVkdWNlTW90aW9uID0gdXNlUmVkdWNlZE1vdGlvbigpO1xuXG4gICAgY29uc3QgW3NuYWNrYmFyVGltZW91dCwgc2V0U25hY2tiYXJUaW1lb3V0XSA9IFJlYWN0LnVzZVN0YXRlPG51bWJlciB8IG51bGw+KFxuICAgICAgZHVyYXRpb25cbiAgICApO1xuXG4gICAgLy8gRXZlbnQgaGFuZGxlcnNcbiAgICBjb25zdCBvbk1vdXNlRW50ZXIgPSAoKSA9PiBzZXRTbmFja2JhclRpbWVvdXQobnVsbCk7XG4gICAgY29uc3Qgb25Nb3VzZUxlYXZlID0gKCkgPT4gc2V0U25hY2tiYXJUaW1lb3V0KGR1cmF0aW9uKTtcbiAgICBjb25zdCBjbG9zZVNuYWNrYmFyID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgb25DbG9zZSAmJiBvbkNsb3NlKCk7XG4gICAgfSwgW29uQ2xvc2VdKTtcblxuICAgIC8vIFVzZSBhIHJlZiB0byBjbG9zZSBvdXIgU25hY2tiYXIgYWZ0ZXIgdGhlIHRpbWVvdXRcbiAgICBjb25zdCBjYWxsYmFja1JlZiA9IFJlYWN0LnVzZVJlZjwoKSA9PiB2b2lkIHwgbnVsbD4oKTtcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBpZiAoIWNhbGxiYWNrUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY2FsbGJhY2tSZWYuY3VycmVudCA9IGNsb3NlU25hY2tiYXI7XG4gICAgICB9XG4gICAgfSwgW2Nsb3NlU25hY2tiYXJdKTtcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAvLyBJZ25vcmUgc2V0dGluZyB1cCBhIHRpbWVyIGZvciB0aGUgU25hY2tiYXJcbiAgICAgIC8vIGlmIG9uZSBpcyBub3QgaXNPcGVuLlxuICAgICAgaWYgKCFpc09wZW4pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB0aWNrID0gKCkgPT4ge1xuICAgICAgICBpZiAoY2FsbGJhY2tSZWYuY3VycmVudCkge1xuICAgICAgICAgIGNhbGxiYWNrUmVmLmN1cnJlbnQoKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaWYgKHNuYWNrYmFyVGltZW91dCkge1xuICAgICAgICBjb25zdCBpZCA9IHNldFRpbWVvdXQodGljaywgc25hY2tiYXJUaW1lb3V0KTtcbiAgICAgICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dChpZCk7XG4gICAgICB9XG4gICAgfSwgW3NuYWNrYmFyVGltZW91dCwgaXNPcGVuXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPEFuaW1hdGVQcmVzZW5jZSBpbml0aWFsPXtmYWxzZX0+XG4gICAgICAgIHtpc09wZW4gPyAoXG4gICAgICAgICAgPG1vdGlvbi5kaXZcbiAgICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgICAgICBjbGFzc2VzLnJvb3QsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBbY2xhc3Nlcy5pbmZvTW9kaWZpZXJdOiBzdGF0dXNUeXBlID09PSAnaW5mbycsXG4gICAgICAgICAgICAgICAgW2NsYXNzZXMuZXJyb3JNb2RpZmllcl06IHN0YXR1c1R5cGUgPT09ICdlcnJvcicsXG4gICAgICAgICAgICAgICAgW2NsYXNzZXMud2FybmluZ01vZGlmaWVyXTogc3RhdHVzVHlwZSA9PT0gJ3dhcm5pbmcnLFxuICAgICAgICAgICAgICAgIFtjbGFzc2VzLnN1Y2Nlc3NNb2RpZmllcl06IHN0YXR1c1R5cGUgPT09ICdzdWNjZXNzJyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgYXJpYS1saXZlPXtyb2xlID09PSAnYWxlcnQnID8gJ2Fzc2VydGl2ZScgOiAncG9saXRlJ31cbiAgICAgICAgICAgIHJvbGU9e3JvbGV9XG4gICAgICAgICAgICBvbk1vdXNlRW50ZXI9e29uTW91c2VFbnRlcn1cbiAgICAgICAgICAgIG9uTW91c2VMZWF2ZT17b25Nb3VzZUxlYXZlfVxuICAgICAgICAgICAgcG9zaXRpb25UcmFuc2l0aW9uXG4gICAgICAgICAgICBpbml0aWFsPXtcbiAgICAgICAgICAgICAgc2hvdWxkUmVkdWNlTW90aW9uID8geyBvcGFjaXR5OiAwIH0gOiB7IG9wYWNpdHk6IDAsIHk6IC00MCB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhbmltYXRlPXtcbiAgICAgICAgICAgICAgc2hvdWxkUmVkdWNlTW90aW9uXG4gICAgICAgICAgICAgICAgPyB7IG9wYWNpdHk6IDEgfVxuICAgICAgICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXhpdD17XG4gICAgICAgICAgICAgIHNob3VsZFJlZHVjZU1vdGlvblxuICAgICAgICAgICAgICAgID8geyBvcGFjaXR5OiAwIH1cbiAgICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgICAgICAgeTogNjAsXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHsgZHVyYXRpb246IDAuMjUsIGVhc2U6ICdlYXNlSW4nIH0sXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7Li4ucm9vdFByb3BzfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHshIUljb24gJiYgPEljb24gcm9sZT1cImltZ1wiIGFyaWEtaGlkZGVuIGNsYXNzTmFtZT17Y2xhc3Nlcy5pY29ufSAvPn1cbiAgICAgICAgICAgIHtjaGlsZHJlbiA/IChcbiAgICAgICAgICAgICAgY2hpbGRyZW5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDxUZXh0IGNsYXNzTmFtZT17Y2xhc3Nlcy50aXRsZX0+e3RpdGxlfTwvVGV4dD5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICB7YWxsb3dEaXNtaXNzICYmIChcbiAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc2VzLmNsb3NlQnV0dG9ufVxuICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIkNsb3NlIE5vdGlmaWNhdGlvblwiXG4gICAgICAgICAgICAgICAgICBzaXplPXswfVxuICAgICAgICAgICAgICAgICAgcGFkZGluZ1RvcD17MH1cbiAgICAgICAgICAgICAgICAgIHBhZGRpbmdCb3R0b209ezB9XG4gICAgICAgICAgICAgICAgICBwYWRkaW5nUmlnaHQ9ezB9XG4gICAgICAgICAgICAgICAgICBpY29uPXtYfVxuICAgICAgICAgICAgICAgICAgb25DbGljaz17Y2xvc2VTbmFja2Jhcn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9tb3Rpb24uZGl2PlxuICAgICAgICApIDogbnVsbH1cbiAgICAgIDwvQW5pbWF0ZVByZXNlbmNlPlxuICAgICk7XG4gIH1cbik7XG4iXX0=