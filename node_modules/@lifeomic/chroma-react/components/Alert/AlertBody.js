"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
var clsx_1 = __importDefault(require("clsx"));
exports.AlertBodyStylesKey = 'ChromaAlertBody';
exports.useStyles = styles_1.makeStyles(function () { return ({
    root: {
        color: 'inherit',
        flex: '1 1 0%',
        '& > *': {
            color: 'inherit',
        },
        '& button': {
            color: 'inherit',
        },
        '& a': {
            color: 'inherit',
        },
        '& > p': {
            color: 'inherit',
        },
        '& > ul': {
            marginTop: '0.25rem',
            marginBottom: '0.25rem',
            paddingLeft: '1.25rem',
            paddingRight: '1.25rem',
        },
        '& p + a, & p + button, & ul + a, & ul + button': {
            marginLeft: '0.75rem',
        },
    },
    spaceBetween: {
        justifyContent: 'space-between',
        display: 'flex',
        '& a, & button': {
            minHeight: 'unset',
            padding: 0,
        },
        '@media screen and (max-width: 480px)': {
            alignItems: 'flex-start',
            '& button': {
                textAlign: 'left',
                justifyContent: 'flex-start',
                marginTop: '0.125rem',
            },
        },
    },
}); }, { name: exports.AlertBodyStylesKey });
exports.AlertBody = function (_a) {
    var className = _a.className, children = _a.children, spaceBetween = _a.spaceBetween, rootProps = __rest(_a, ["className", "children", "spaceBetween"]);
    var classes = exports.useStyles({});
    return (React.createElement("div", __assign({ className: clsx_1.default(classes.root, spaceBetween && classes.spaceBetween, className) }, rootProps), children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxlcnRCb2R5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQWxlcnQvQWxlcnRCb2R5LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMkNBQStCO0FBQy9CLHVDQUEwQztBQUUxQyw4Q0FBd0I7QUFFWCxRQUFBLGtCQUFrQixHQUFHLGlCQUFpQixDQUFDO0FBRXZDLFFBQUEsU0FBUyxHQUFHLG1CQUFVLENBQ2pDLGNBQU0sT0FBQSxDQUFDO0lBQ0wsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLFNBQVM7UUFDaEIsSUFBSSxFQUFFLFFBQVE7UUFDZCxPQUFPLEVBQUU7WUFDUCxLQUFLLEVBQUUsU0FBUztTQUNqQjtRQUNELFVBQVUsRUFBRTtZQUNWLEtBQUssRUFBRSxTQUFTO1NBQ2pCO1FBQ0QsS0FBSyxFQUFFO1lBQ0wsS0FBSyxFQUFFLFNBQVM7U0FDakI7UUFDRCxPQUFPLEVBQUU7WUFDUCxLQUFLLEVBQUUsU0FBUztTQUNqQjtRQUNELFFBQVEsRUFBRTtZQUNSLFNBQVMsRUFBRSxTQUFTO1lBQ3BCLFlBQVksRUFBRSxTQUFTO1lBQ3ZCLFdBQVcsRUFBRSxTQUFTO1lBQ3RCLFlBQVksRUFBRSxTQUFTO1NBQ3hCO1FBQ0QsZ0RBQWdELEVBQUU7WUFDaEQsVUFBVSxFQUFFLFNBQVM7U0FDdEI7S0FDRjtJQUNELFlBQVksRUFBRTtRQUNaLGNBQWMsRUFBRSxlQUFlO1FBQy9CLE9BQU8sRUFBRSxNQUFNO1FBQ2YsZUFBZSxFQUFFO1lBQ2YsU0FBUyxFQUFFLE9BQU87WUFDbEIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELHNDQUFzQyxFQUFFO1lBQ3RDLFVBQVUsRUFBRSxZQUFZO1lBQ3hCLFVBQVUsRUFBRTtnQkFDVixTQUFTLEVBQUUsTUFBTTtnQkFDakIsY0FBYyxFQUFFLFlBQVk7Z0JBQzVCLFNBQVMsRUFBRSxVQUFVO2FBQ3RCO1NBQ0Y7S0FDRjtDQUNGLENBQUMsRUExQ0ksQ0EwQ0osRUFDRixFQUFFLElBQUksRUFBRSwwQkFBa0IsRUFBRSxDQUM3QixDQUFDO0FBU1csUUFBQSxTQUFTLEdBQTZCLFVBQUMsRUFLbkQ7SUFKQyxJQUFBLHdCQUFTLEVBQ1Qsc0JBQVEsRUFDUiw4QkFBWSxFQUNaLGlFQUFZO0lBRVosSUFBTSxPQUFPLEdBQUcsaUJBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQ0wsc0NBQ0UsU0FBUyxFQUFFLGNBQUksQ0FDYixPQUFPLENBQUMsSUFBSSxFQUNaLFlBQVksSUFBSSxPQUFPLENBQUMsWUFBWSxFQUNwQyxTQUFTLENBQ1YsSUFDRyxTQUFTLEdBRVosUUFBUSxDQUNMLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcblxuZXhwb3J0IGNvbnN0IEFsZXJ0Qm9keVN0eWxlc0tleSA9ICdDaHJvbWFBbGVydEJvZHknO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKCkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBjb2xvcjogJ2luaGVyaXQnLFxuICAgICAgZmxleDogJzEgMSAwJScsXG4gICAgICAnJiA+IConOiB7XG4gICAgICAgIGNvbG9yOiAnaW5oZXJpdCcsXG4gICAgICB9LFxuICAgICAgJyYgYnV0dG9uJzoge1xuICAgICAgICBjb2xvcjogJ2luaGVyaXQnLFxuICAgICAgfSxcbiAgICAgICcmIGEnOiB7XG4gICAgICAgIGNvbG9yOiAnaW5oZXJpdCcsXG4gICAgICB9LFxuICAgICAgJyYgPiBwJzoge1xuICAgICAgICBjb2xvcjogJ2luaGVyaXQnLFxuICAgICAgfSxcbiAgICAgICcmID4gdWwnOiB7XG4gICAgICAgIG1hcmdpblRvcDogJzAuMjVyZW0nLFxuICAgICAgICBtYXJnaW5Cb3R0b206ICcwLjI1cmVtJyxcbiAgICAgICAgcGFkZGluZ0xlZnQ6ICcxLjI1cmVtJyxcbiAgICAgICAgcGFkZGluZ1JpZ2h0OiAnMS4yNXJlbScsXG4gICAgICB9LFxuICAgICAgJyYgcCArIGEsICYgcCArIGJ1dHRvbiwgJiB1bCArIGEsICYgdWwgKyBidXR0b24nOiB7XG4gICAgICAgIG1hcmdpbkxlZnQ6ICcwLjc1cmVtJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBzcGFjZUJldHdlZW46IHtcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAnJiBhLCAmIGJ1dHRvbic6IHtcbiAgICAgICAgbWluSGVpZ2h0OiAndW5zZXQnLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgfSxcbiAgICAgICdAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCknOiB7XG4gICAgICAgIGFsaWduSXRlbXM6ICdmbGV4LXN0YXJ0JyxcbiAgICAgICAgJyYgYnV0dG9uJzoge1xuICAgICAgICAgIHRleHRBbGlnbjogJ2xlZnQnLFxuICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gICAgICAgICAgbWFyZ2luVG9wOiAnMC4xMjVyZW0nLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBBbGVydEJvZHlTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgQWxlcnRCb2R5Q2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWxlcnRCb2R5UHJvcHMge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHNwYWNlQmV0d2Vlbj86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCBBbGVydEJvZHk6IFJlYWN0LkZDPEFsZXJ0Qm9keVByb3BzPiA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG4gIHNwYWNlQmV0d2VlbixcbiAgLi4ucm9vdFByb3BzXG59KSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgY2xhc3Nlcy5yb290LFxuICAgICAgICBzcGFjZUJldHdlZW4gJiYgY2xhc3Nlcy5zcGFjZUJldHdlZW4sXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHsuLi5yb290UHJvcHN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdfQ==