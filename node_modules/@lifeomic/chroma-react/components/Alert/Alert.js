"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styles_1 = require("../../styles");
var clsx_1 = __importDefault(require("clsx"));
exports.AlertStylesKey = 'ChromaAlert';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        alignItems: 'flex-start',
        borderRadius: '0.375rem',
        display: 'flex',
        justifyContent: 'center',
        padding: theme.spacing(2, 3),
    },
    fullWidth: {
        width: '100%',
    },
    info: {
        backgroundColor: theme.palette.blue[50],
        color: theme.palette.primary[800],
    },
    warning: {
        backgroundColor: theme.palette.yellow[100],
        color: theme.palette.yellow[900],
    },
    error: {
        backgroundColor: theme.palette.red[50],
        color: theme.palette.red[900],
    },
    success: {
        backgroundColor: theme.palette.green[100],
        color: theme.palette.green[900],
    },
}); }, { name: exports.AlertStylesKey });
exports.Alert = function (_a) {
    var className = _a.className, children = _a.children, fullWidth = _a.fullWidth, _b = _a.statusType, statusType = _b === void 0 ? 'info' : _b, rootProps = __rest(_a, ["className", "children", "fullWidth", "statusType"]);
    var classes = exports.useStyles({});
    return (React.createElement("div", __assign({ className: clsx_1.default(classes.root, classes[statusType], fullWidth && classes.fullWidth, className), role: "alert" }, rootProps), children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxlcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9BbGVydC9BbGVydC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUErQjtBQUMvQix1Q0FBMEM7QUFFMUMsOENBQXdCO0FBR1gsUUFBQSxjQUFjLEdBQUcsYUFBYSxDQUFDO0FBRS9CLFFBQUEsU0FBUyxHQUFHLG1CQUFVLENBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNKLFVBQVUsRUFBRSxZQUFZO1FBQ3hCLFlBQVksRUFBRSxVQUFVO1FBQ3hCLE9BQU8sRUFBRSxNQUFNO1FBQ2YsY0FBYyxFQUFFLFFBQVE7UUFDeEIsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUM3QjtJQUNELFNBQVMsRUFBRTtRQUNULEtBQUssRUFBRSxNQUFNO0tBQ2Q7SUFDRCxJQUFJLEVBQUU7UUFDSixlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3ZDLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7S0FDbEM7SUFDRCxPQUFPLEVBQUU7UUFDUCxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1FBQzFDLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7S0FDakM7SUFDRCxLQUFLLEVBQUU7UUFDTCxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ3RDLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUM7S0FDOUI7SUFDRCxPQUFPLEVBQUU7UUFDUCxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQ3pDLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7S0FDaEM7Q0FDRixDQUFDLEVBM0JTLENBMkJULEVBQ0YsRUFBRSxJQUFJLEVBQUUsc0JBQWMsRUFBRSxDQUN6QixDQUFDO0FBVVcsUUFBQSxLQUFLLEdBQXlCLFVBQUMsRUFNM0M7SUFMQyxJQUFBLHdCQUFTLEVBQ1Qsc0JBQVEsRUFDUix3QkFBUyxFQUNULGtCQUFtQixFQUFuQix3Q0FBbUIsRUFDbkIsNEVBQVk7SUFFWixJQUFNLE9BQU8sR0FBRyxpQkFBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlCLE9BQU8sQ0FDTCxzQ0FDRSxTQUFTLEVBQUUsY0FBSSxDQUNiLE9BQU8sQ0FBQyxJQUFJLEVBQ1osT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUNuQixTQUFTLElBQUksT0FBTyxDQUFDLFNBQVMsRUFDOUIsU0FBUyxDQUNWLEVBQ0QsSUFBSSxFQUFDLE9BQU8sSUFDUixTQUFTLEdBRVosUUFBUSxDQUNMLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IE5vdGlmaWNhdGlvblN0YXR1c1R5cGUgfSBmcm9tICcuLi9fcHJpdmF0ZS9ub3RpZmljYXRpb25UeXBlcyc7XG5cbmV4cG9ydCBjb25zdCBBbGVydFN0eWxlc0tleSA9ICdDaHJvbWFBbGVydCc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgYWxpZ25JdGVtczogJ2ZsZXgtc3RhcnQnLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnMC4zNzVyZW0nLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgcGFkZGluZzogdGhlbWUuc3BhY2luZygyLCAzKSxcbiAgICB9LFxuICAgIGZ1bGxXaWR0aDoge1xuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICB9LFxuICAgIGluZm86IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5ibHVlWzUwXSxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnlbODAwXSxcbiAgICB9LFxuICAgIHdhcm5pbmc6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS55ZWxsb3dbMTAwXSxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnllbGxvd1s5MDBdLFxuICAgIH0sXG4gICAgZXJyb3I6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5yZWRbNTBdLFxuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucmVkWzkwMF0sXG4gICAgfSxcbiAgICBzdWNjZXNzOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JlZW5bMTAwXSxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmdyZWVuWzkwMF0sXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogQWxlcnRTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgQWxlcnRDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBBbGVydFByb3BzIHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBzdGF0dXNUeXBlPzogTm90aWZpY2F0aW9uU3RhdHVzVHlwZTtcbiAgZnVsbFdpZHRoPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0IEFsZXJ0OiBSZWFjdC5GQzxBbGVydFByb3BzPiA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG4gIGZ1bGxXaWR0aCxcbiAgc3RhdHVzVHlwZSA9ICdpbmZvJyxcbiAgLi4ucm9vdFByb3BzXG59KSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgY2xhc3Nlcy5yb290LFxuICAgICAgICBjbGFzc2VzW3N0YXR1c1R5cGVdLFxuICAgICAgICBmdWxsV2lkdGggJiYgY2xhc3Nlcy5mdWxsV2lkdGgsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHJvbGU9XCJhbGVydFwiXG4gICAgICB7Li4ucm9vdFByb3BzfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXX0=