"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clsx_1 = __importDefault(require("clsx"));
var React = __importStar(require("react"));
var Tab_1 = require("reakit/Tab");
var styles_1 = require("../../styles");
var TabsContext_1 = require("./TabsContext");
exports.TabStylesKey = 'ChromaTab';
exports.useStyles = styles_1.makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundColor: 'transparent',
        border: 'none',
        cursor: 'pointer',
        display: 'inline-flex',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.typography.subtitle1.fontSize,
        fontWeight: theme.typography.fontWeightRegular,
        justifyContent: 'center',
        letterSpacing: '0.03125em',
        margin: 0,
        minHeight: theme.pxToRem(48),
        outline: 'none',
        overflow: 'hidden',
        paddingBottom: theme.spacing(0.75),
        paddingLeft: theme.spacing(3),
        paddingRight: theme.spacing(3),
        paddingTop: theme.spacing(0.75),
        transition: 'border-bottom 0.25s ease, color 0.5s ease',
        userSelect: 'none',
        verticalAlign: 'middle',
        '&:hover': {
            color: theme.palette.black[500],
        },
        '&:focus': {
            outline: 'none',
        },
        '&[aria-selected="true"]': {
            color: theme.palette.black[900],
            borderBottom: "4px solid " + theme.palette.primary.main,
        },
        '&[aria-disabled="true"]': {
            color: theme.palette.black[400],
            cursor: 'initial',
            opacity: 0.4,
        },
    },
}); }, { name: exports.TabStylesKey });
exports.Tab = function (_a) {
    var className = _a.className, disabled = _a.disabled, onClick = _a.onClick, stopId = _a.stopId, rootProps = __rest(_a, ["className", "disabled", "onClick", "stopId"]);
    var classes = exports.useStyles({});
    var tab = React.useContext(TabsContext_1.TabsContext);
    return (React.createElement(Tab_1.Tab, __assign({}, tab, { className: clsx_1.default(classes.root, className), disabled: disabled, onClick: onClick, id: stopId }, rootProps)));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFiLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGFicy9UYWIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBd0I7QUFDeEIsMkNBQStCO0FBQy9CLGtDQUE0QztBQUM1Qyx1Q0FBMEM7QUFFMUMsNkNBQTRDO0FBRy9CLFFBQUEsWUFBWSxHQUFHLFdBQVcsQ0FBQztBQUUzQixRQUFBLFNBQVMsR0FBRyxtQkFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixVQUFVLEVBQUUsUUFBUTtRQUNwQixlQUFlLEVBQUUsYUFBYTtRQUM5QixNQUFNLEVBQUUsTUFBTTtRQUNkLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLFVBQVU7UUFDdkMsUUFBUSxFQUFFLEtBQUssQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLFFBQVE7UUFDN0MsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVLENBQUMsaUJBQWlCO1FBQzlDLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLGFBQWEsRUFBRSxXQUFXO1FBQzFCLE1BQU0sRUFBRSxDQUFDO1FBQ1QsU0FBUyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQzVCLE9BQU8sRUFBRSxNQUFNO1FBQ2YsUUFBUSxFQUFFLFFBQVE7UUFDbEIsYUFBYSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xDLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3QixZQUFZLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDOUIsVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQy9CLFVBQVUsRUFBRSwyQ0FBMkM7UUFDdkQsVUFBVSxFQUFFLE1BQU07UUFDbEIsYUFBYSxFQUFFLFFBQVE7UUFDdkIsU0FBUyxFQUFFO1lBQ1QsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztTQUNoQztRQUNELFNBQVMsRUFBRTtZQUNULE9BQU8sRUFBRSxNQUFNO1NBQ2hCO1FBQ0QseUJBQXlCLEVBQUU7WUFDekIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztZQUMvQixZQUFZLEVBQUUsZUFBYSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFNO1NBQ3hEO1FBQ0QseUJBQXlCLEVBQUU7WUFDekIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztZQUMvQixNQUFNLEVBQUUsU0FBUztZQUNqQixPQUFPLEVBQUUsR0FBRztTQUNiO0tBQ0Y7Q0FDRixDQUFDLEVBdkNTLENBdUNULEVBQ0YsRUFBRSxJQUFJLEVBQUUsb0JBQVksRUFBRSxDQUN2QixDQUFDO0FBVVcsUUFBQSxHQUFHLEdBQXVCLFVBQUMsRUFNdkM7SUFMQyxJQUFBLHdCQUFTLEVBQ1Qsc0JBQVEsRUFDUixvQkFBTyxFQUNQLGtCQUFNLEVBQ04sc0VBQVk7SUFFWixJQUFNLE9BQU8sR0FBRyxpQkFBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlCLElBQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUMseUJBQVcsQ0FBQyxDQUFDO0lBQzFDLE9BQU8sQ0FDTCxvQkFBQyxTQUFPLGVBQ0YsR0FBRyxJQUNQLFNBQVMsRUFBRSxjQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsRUFDeEMsUUFBUSxFQUFFLFFBQVEsRUFDbEIsT0FBTyxFQUFFLE9BQU8sRUFDaEIsRUFBRSxFQUFFLE1BQU0sSUFDTixTQUFTLEVBQ2IsQ0FDSCxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUYWIgYXMgQmFzZVRhYiB9IGZyb20gJ3JlYWtpdC9UYWInO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcyc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCB7IFRhYnNDb250ZXh0IH0gZnJvbSAnLi9UYWJzQ29udGV4dCc7XG5pbXBvcnQgeyBUYWJTdG9wIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBUYWJTdHlsZXNLZXkgPSAnQ2hyb21hVGFiJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICBkaXNwbGF5OiAnaW5saW5lLWZsZXgnLFxuICAgICAgZm9udEZhbWlseTogdGhlbWUudHlwb2dyYXBoeS5mb250RmFtaWx5LFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuc3VidGl0bGUxLmZvbnRTaXplLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0UmVndWxhcixcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIGxldHRlclNwYWNpbmc6ICcwLjAzMTI1ZW0nLFxuICAgICAgbWFyZ2luOiAwLFxuICAgICAgbWluSGVpZ2h0OiB0aGVtZS5weFRvUmVtKDQ4KSxcbiAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnNwYWNpbmcoMC43NSksXG4gICAgICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZygzKSxcbiAgICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZygzKSxcbiAgICAgIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcoMC43NSksXG4gICAgICB0cmFuc2l0aW9uOiAnYm9yZGVyLWJvdHRvbSAwLjI1cyBlYXNlLCBjb2xvciAwLjVzIGVhc2UnLFxuICAgICAgdXNlclNlbGVjdDogJ25vbmUnLFxuICAgICAgdmVydGljYWxBbGlnbjogJ21pZGRsZScsXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUuYmxhY2tbNTAwXSxcbiAgICAgIH0sXG4gICAgICAnJjpmb2N1cyc6IHtcbiAgICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgfSxcbiAgICAgICcmW2FyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCJdJzoge1xuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5ibGFja1s5MDBdLFxuICAgICAgICBib3JkZXJCb3R0b206IGA0cHggc29saWQgJHt0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbn1gLFxuICAgICAgfSxcbiAgICAgICcmW2FyaWEtZGlzYWJsZWQ9XCJ0cnVlXCJdJzoge1xuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5ibGFja1s0MDBdLFxuICAgICAgICBjdXJzb3I6ICdpbml0aWFsJyxcbiAgICAgICAgb3BhY2l0eTogMC40LFxuICAgICAgfSxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBUYWJTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgVGFiQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFiUHJvcHMgZXh0ZW5kcyBUYWJTdG9wIHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIG9uQ2xpY2s/OiAoZT86IE1vdXNlRXZlbnQpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBUYWI6IFJlYWN0LkZDPFRhYlByb3BzPiA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgZGlzYWJsZWQsXG4gIG9uQ2xpY2ssXG4gIHN0b3BJZCxcbiAgLi4ucm9vdFByb3BzXG59KSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICBjb25zdCB0YWIgPSBSZWFjdC51c2VDb250ZXh0KFRhYnNDb250ZXh0KTtcbiAgcmV0dXJuIChcbiAgICA8QmFzZVRhYlxuICAgICAgey4uLnRhYn1cbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9XG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgaWQ9e3N0b3BJZH1cbiAgICAgIHsuLi5yb290UHJvcHN9XG4gICAgLz5cbiAgKTtcbn07XG4iXX0=