var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { useEffect, useRef, useState } from 'react';
import useInterval from '../utils/useInterval';
import useWindowSize from './useWindowSize';
var WINDOW = 'window';
var PARENT = 'parent';
var getParentSize = function (ref) {
    return ref.current.parentNode.getBoundingClientRect();
};
var getMySize = function (ref) {
    return ref.current.getBoundingClientRect();
};
export var helpers = {
    getParentSize: getParentSize,
    getMySize: getMySize,
};
function useInfiniteScroll(_a) {
    var loading = _a.loading, hasNextPage = _a.hasNextPage, loadMore = _a.loadMore, _b = _a.scrollOffset, scrollOffset = _b === void 0 ? 250 : _b, _c = _a.debounceInterval, debounceInterval = _c === void 0 ? 250 : _c, _d = _a.scrollContainer, scrollContainer = _d === void 0 ? WINDOW : _d;
    var ref = useRef();
    var _e = useWindowSize(), windowHeight = _e.height, windowWidth = _e.width;
    var _f = useState(true), listen = _f[0], setListen = _f[1];
    useEffect(function () {
        if (!loading) {
            setListen(true);
        }
    }, [loading]);
    function getBottomOffset() {
        var bottom = helpers.getMySize(ref).bottom;
        var bottomOffset = windowHeight ? bottom - windowHeight : 0;
        if (scrollContainer === PARENT) {
            var parentBottom = helpers.getParentSize(ref).bottom;
            // Distance between bottom of list and its parent
            bottomOffset = bottom - parentBottom;
        }
        return bottomOffset;
    }
    function isParentInView() {
        var parent = ref.current ? ref.current.parentNode : null;
        if (parent) {
            var _a = helpers.getParentSize(ref), left = _a.left, right = _a.right, top_1 = _a.top, bottom = _a.bottom;
            if (windowWidth && left > windowWidth) {
                return false;
            }
            else if (right < 0) {
                return false;
            }
            else if (windowHeight && top_1 > windowHeight) {
                return false;
            }
            else if (bottom < 0) {
                return false;
            }
        }
        return true;
    }
    function listenBottomOffset() {
        return __awaiter(this, void 0, void 0, function () {
            var bottomOffset, validOffset;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(listen && !loading && hasNextPage)) return [3 /*break*/, 2];
                        if (!ref.current) return [3 /*break*/, 2];
                        if (scrollContainer === PARENT) {
                            if (!isParentInView()) {
                                // Do nothing if the parent is out of screen
                                return [2 /*return*/];
                            }
                        }
                        bottomOffset = getBottomOffset();
                        validOffset = bottomOffset < scrollOffset;
                        if (!validOffset) return [3 /*break*/, 2];
                        setListen(false);
                        return [4 /*yield*/, loadMore()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    }
    useInterval(function () { return listenBottomOffset(); }, 
    // Stop interval when there is no next page.
    hasNextPage ? debounceInterval : 0);
    return ref;
}
export default useInfiniteScroll;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlSW5maW5pdGVTY3JvbGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvaG9va3MvZXZlbnRzL3VzZUluZmluaXRlU2Nyb2xsLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDcEQsT0FBTyxXQUFXLE1BQU0sc0JBQXNCLENBQUM7QUFDL0MsT0FBTyxhQUFhLE1BQU0saUJBQWlCLENBQUM7QUFFNUMsSUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDO0FBQ3hCLElBQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQztBQUV4QixJQUFNLGFBQWEsR0FBRyxVQUFVLEdBQVE7SUFDdEMsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0FBQ3hELENBQUMsQ0FBQztBQUVGLElBQU0sU0FBUyxHQUFHLFVBQVUsR0FBUTtJQUNsQyxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMscUJBQXFCLEVBQUUsQ0FBQztBQUM3QyxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxPQUFPLEdBQUc7SUFDckIsYUFBYSxlQUFBO0lBQ2IsU0FBUyxXQUFBO0NBQ1YsQ0FBQztBQVdGLFNBQVMsaUJBQWlCLENBQUMsRUFPTDtRQU5wQixvQkFBTyxFQUNQLDRCQUFXLEVBQ1gsc0JBQVEsRUFDUixvQkFBa0IsRUFBbEIsdUNBQWtCLEVBQ2xCLHdCQUFzQixFQUF0QiwyQ0FBc0IsRUFDdEIsdUJBQXdCLEVBQXhCLDZDQUF3QjtJQUV4QixJQUFNLEdBQUcsR0FBRyxNQUFNLEVBQVMsQ0FBQztJQUN0QixJQUFBLG9CQUE4RCxFQUE1RCx3QkFBb0IsRUFBRSxzQkFBc0MsQ0FBQztJQUMvRCxJQUFBLG1CQUFvQyxFQUFuQyxjQUFNLEVBQUUsaUJBQTJCLENBQUM7SUFFM0MsU0FBUyxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNaLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNqQjtJQUNILENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFFZCxTQUFTLGVBQWU7UUFDZCxJQUFBLHNDQUFNLENBQTRCO1FBQzFDLElBQUksWUFBWSxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTVELElBQUksZUFBZSxLQUFLLE1BQU0sRUFBRTtZQUN0QixJQUFBLGdEQUFvQixDQUFnQztZQUM1RCxpREFBaUQ7WUFDakQsWUFBWSxHQUFHLE1BQU0sR0FBRyxZQUFZLENBQUM7U0FDdEM7UUFFRCxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDO0lBRUQsU0FBUyxjQUFjO1FBQ3JCLElBQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFFM0QsSUFBSSxNQUFNLEVBQUU7WUFDSixJQUFBLCtCQUF5RCxFQUF2RCxjQUFJLEVBQUUsZ0JBQUssRUFBRSxjQUFHLEVBQUUsa0JBQXFDLENBQUM7WUFDaEUsSUFBSSxXQUFXLElBQUksSUFBSSxHQUFHLFdBQVcsRUFBRTtnQkFDckMsT0FBTyxLQUFLLENBQUM7YUFDZDtpQkFBTSxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUU7Z0JBQ3BCLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7aUJBQU0sSUFBSSxZQUFZLElBQUksS0FBRyxHQUFHLFlBQVksRUFBRTtnQkFDN0MsT0FBTyxLQUFLLENBQUM7YUFDZDtpQkFBTSxJQUFJLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ3JCLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7U0FDRjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELFNBQWUsa0JBQWtCOzs7Ozs7NkJBQzNCLENBQUEsTUFBTSxJQUFJLENBQUMsT0FBTyxJQUFJLFdBQVcsQ0FBQSxFQUFqQyx3QkFBaUM7NkJBQy9CLEdBQUcsQ0FBQyxPQUFPLEVBQVgsd0JBQVc7d0JBQ2IsSUFBSSxlQUFlLEtBQUssTUFBTSxFQUFFOzRCQUM5QixJQUFJLENBQUMsY0FBYyxFQUFFLEVBQUU7Z0NBQ3JCLDRDQUE0QztnQ0FDNUMsc0JBQU87NkJBQ1I7eUJBQ0Y7d0JBSUssWUFBWSxHQUFHLGVBQWUsRUFBRSxDQUFDO3dCQUNqQyxXQUFXLEdBQUcsWUFBWSxHQUFHLFlBQVksQ0FBQzs2QkFDNUMsV0FBVyxFQUFYLHdCQUFXO3dCQUNiLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQzt3QkFDakIscUJBQU0sUUFBUSxFQUFFLEVBQUE7O3dCQUFoQixTQUFnQixDQUFDOzs7Ozs7S0FJeEI7SUFFRCxXQUFXLENBQ1QsY0FBTSxPQUFBLGtCQUFrQixFQUFFLEVBQXBCLENBQW9CO0lBQzFCLDRDQUE0QztJQUM1QyxXQUFXLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQ25DLENBQUM7SUFFRixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxlQUFlLGlCQUFpQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUludGVydmFsIGZyb20gJy4uL3V0aWxzL3VzZUludGVydmFsJztcbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gJy4vdXNlV2luZG93U2l6ZSc7XG5cbmNvbnN0IFdJTkRPVyA9ICd3aW5kb3cnO1xuY29uc3QgUEFSRU5UID0gJ3BhcmVudCc7XG5cbmNvbnN0IGdldFBhcmVudFNpemUgPSBmdW5jdGlvbiAocmVmOiBhbnkpIHtcbiAgcmV0dXJuIHJlZi5jdXJyZW50LnBhcmVudE5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG59O1xuXG5jb25zdCBnZXRNeVNpemUgPSBmdW5jdGlvbiAocmVmOiBhbnkpIHtcbiAgcmV0dXJuIHJlZi5jdXJyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xufTtcblxuZXhwb3J0IGNvbnN0IGhlbHBlcnMgPSB7XG4gIGdldFBhcmVudFNpemUsXG4gIGdldE15U2l6ZSxcbn07XG5cbmV4cG9ydCB0eXBlIEluZmluaXRlU2Nyb2xsUHJvcHMgPSB7XG4gIGxvYWRpbmc6IGJvb2xlYW47XG4gIGhhc05leHRQYWdlOiBib29sZWFuO1xuICBsb2FkTW9yZTogKCkgPT4gUHJvbWlzZTxhbnk+O1xuICBzY3JvbGxPZmZzZXQ/OiBudW1iZXI7XG4gIGRlYm91bmNlSW50ZXJ2YWw/OiBudW1iZXI7XG4gIHNjcm9sbENvbnRhaW5lcj86ICd3aW5kb3cnIHwgJ3BhcmVudCc7XG59O1xuXG5mdW5jdGlvbiB1c2VJbmZpbml0ZVNjcm9sbCh7XG4gIGxvYWRpbmcsXG4gIGhhc05leHRQYWdlLFxuICBsb2FkTW9yZSxcbiAgc2Nyb2xsT2Zmc2V0ID0gMjUwLFxuICBkZWJvdW5jZUludGVydmFsID0gMjUwLFxuICBzY3JvbGxDb250YWluZXIgPSBXSU5ET1csXG59OiBJbmZpbml0ZVNjcm9sbFByb3BzKSB7XG4gIGNvbnN0IHJlZiA9IHVzZVJlZigpIGFzIGFueTtcbiAgY29uc3QgeyBoZWlnaHQ6IHdpbmRvd0hlaWdodCwgd2lkdGg6IHdpbmRvd1dpZHRoIH0gPSB1c2VXaW5kb3dTaXplKCk7XG4gIGNvbnN0IFtsaXN0ZW4sIHNldExpc3Rlbl0gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghbG9hZGluZykge1xuICAgICAgc2V0TGlzdGVuKHRydWUpO1xuICAgIH1cbiAgfSwgW2xvYWRpbmddKTtcblxuICBmdW5jdGlvbiBnZXRCb3R0b21PZmZzZXQoKSB7XG4gICAgY29uc3QgeyBib3R0b20gfSA9IGhlbHBlcnMuZ2V0TXlTaXplKHJlZik7XG4gICAgbGV0IGJvdHRvbU9mZnNldCA9IHdpbmRvd0hlaWdodCA/IGJvdHRvbSAtIHdpbmRvd0hlaWdodCA6IDA7XG5cbiAgICBpZiAoc2Nyb2xsQ29udGFpbmVyID09PSBQQVJFTlQpIHtcbiAgICAgIGNvbnN0IHsgYm90dG9tOiBwYXJlbnRCb3R0b20gfSA9IGhlbHBlcnMuZ2V0UGFyZW50U2l6ZShyZWYpO1xuICAgICAgLy8gRGlzdGFuY2UgYmV0d2VlbiBib3R0b20gb2YgbGlzdCBhbmQgaXRzIHBhcmVudFxuICAgICAgYm90dG9tT2Zmc2V0ID0gYm90dG9tIC0gcGFyZW50Qm90dG9tO1xuICAgIH1cblxuICAgIHJldHVybiBib3R0b21PZmZzZXQ7XG4gIH1cblxuICBmdW5jdGlvbiBpc1BhcmVudEluVmlldygpIHtcbiAgICBjb25zdCBwYXJlbnQgPSByZWYuY3VycmVudCA/IHJlZi5jdXJyZW50LnBhcmVudE5vZGUgOiBudWxsO1xuXG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgY29uc3QgeyBsZWZ0LCByaWdodCwgdG9wLCBib3R0b20gfSA9IGhlbHBlcnMuZ2V0UGFyZW50U2l6ZShyZWYpO1xuICAgICAgaWYgKHdpbmRvd1dpZHRoICYmIGxlZnQgPiB3aW5kb3dXaWR0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9IGVsc2UgaWYgKHJpZ2h0IDwgMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9IGVsc2UgaWYgKHdpbmRvd0hlaWdodCAmJiB0b3AgPiB3aW5kb3dIZWlnaHQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSBlbHNlIGlmIChib3R0b20gPCAwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIGxpc3RlbkJvdHRvbU9mZnNldCgpIHtcbiAgICBpZiAobGlzdGVuICYmICFsb2FkaW5nICYmIGhhc05leHRQYWdlKSB7XG4gICAgICBpZiAocmVmLmN1cnJlbnQpIHtcbiAgICAgICAgaWYgKHNjcm9sbENvbnRhaW5lciA9PT0gUEFSRU5UKSB7XG4gICAgICAgICAgaWYgKCFpc1BhcmVudEluVmlldygpKSB7XG4gICAgICAgICAgICAvLyBEbyBub3RoaW5nIGlmIHRoZSBwYXJlbnQgaXMgb3V0IG9mIHNjcmVlblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIGJvdHRvbSBvZiB0aGUgY29udGFpbmVyIGFuZCBib3R0b20gb2YgdGhlIHdpbmRvdyBvciBwYXJlbnRcbiAgICAgICAgLy8gaXMgbGVzcyB0aGFuIHRoZSBvZmZzZXRcbiAgICAgICAgY29uc3QgYm90dG9tT2Zmc2V0ID0gZ2V0Qm90dG9tT2Zmc2V0KCk7XG4gICAgICAgIGNvbnN0IHZhbGlkT2Zmc2V0ID0gYm90dG9tT2Zmc2V0IDwgc2Nyb2xsT2Zmc2V0O1xuICAgICAgICBpZiAodmFsaWRPZmZzZXQpIHtcbiAgICAgICAgICBzZXRMaXN0ZW4oZmFsc2UpO1xuICAgICAgICAgIGF3YWl0IGxvYWRNb3JlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB1c2VJbnRlcnZhbChcbiAgICAoKSA9PiBsaXN0ZW5Cb3R0b21PZmZzZXQoKSxcbiAgICAvLyBTdG9wIGludGVydmFsIHdoZW4gdGhlcmUgaXMgbm8gbmV4dCBwYWdlLlxuICAgIGhhc05leHRQYWdlID8gZGVib3VuY2VJbnRlcnZhbCA6IDBcbiAgKTtcblxuICByZXR1cm4gcmVmO1xufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VJbmZpbml0ZVNjcm9sbDtcbiJdfQ==