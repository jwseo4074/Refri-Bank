// Yoinked from https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/warning.ts
/**
 * Logs `messages` to the console using `console.warn` based on a `condition`.
 *
 * @example
 * import { warning } from "@lifeomic/chroma-react/utils/warning";
 *
 * warning(true, "a", "b"); // console.warn("a\nb")
 * warning(false, "a", "b"); // does nothing
 */
export function warning(condition) {
    var messages = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        messages[_i - 1] = arguments[_i];
    }
    if (process.env.NODE_ENV !== 'production') {
        if (!condition)
            return;
        var text = messages.join('\n');
        // eslint-disable-next-line no-console
        console.warn(text);
        // Throwing an error and catching it immediately to improve debugging
        // A consumer can use 'pause on caught exceptions'
        // https://github.com/facebook/react/issues/4216
        try {
            throw Error(text);
        }
        catch (x) {
            // do nothing
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FybmluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy93YXJuaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlHQUFpRztBQUVqRzs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxPQUFPLENBQUMsU0FBa0I7SUFBRSxrQkFBcUI7U0FBckIsVUFBcUIsRUFBckIscUJBQXFCLEVBQXJCLElBQXFCO1FBQXJCLGlDQUFxQjs7SUFDL0QsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxZQUFZLEVBQUU7UUFDekMsSUFBSSxDQUFDLFNBQVM7WUFBRSxPQUFPO1FBRXZCLElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFakMsc0NBQXNDO1FBQ3RDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbkIscUVBQXFFO1FBQ3JFLGtEQUFrRDtRQUNsRCxnREFBZ0Q7UUFDaEQsSUFBSTtZQUNGLE1BQU0sS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ25CO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixhQUFhO1NBQ2Q7S0FDRjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBZb2lua2VkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3JlYWtpdC9yZWFraXQvYmxvYi9tYXN0ZXIvcGFja2FnZXMvcmVha2l0LXV0aWxzL3NyYy93YXJuaW5nLnRzXG5cbi8qKlxuICogTG9ncyBgbWVzc2FnZXNgIHRvIHRoZSBjb25zb2xlIHVzaW5nIGBjb25zb2xlLndhcm5gIGJhc2VkIG9uIGEgYGNvbmRpdGlvbmAuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IHdhcm5pbmcgfSBmcm9tIFwiQGxpZmVvbWljL2Nocm9tYS1yZWFjdC91dGlscy93YXJuaW5nXCI7XG4gKlxuICogd2FybmluZyh0cnVlLCBcImFcIiwgXCJiXCIpOyAvLyBjb25zb2xlLndhcm4oXCJhXFxuYlwiKVxuICogd2FybmluZyhmYWxzZSwgXCJhXCIsIFwiYlwiKTsgLy8gZG9lcyBub3RoaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3YXJuaW5nKGNvbmRpdGlvbjogYm9vbGVhbiwgLi4ubWVzc2FnZXM6IHN0cmluZ1tdKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKCFjb25kaXRpb24pIHJldHVybjtcblxuICAgIGNvbnN0IHRleHQgPSBtZXNzYWdlcy5qb2luKCdcXG4nKTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKHRleHQpO1xuXG4gICAgLy8gVGhyb3dpbmcgYW4gZXJyb3IgYW5kIGNhdGNoaW5nIGl0IGltbWVkaWF0ZWx5IHRvIGltcHJvdmUgZGVidWdnaW5nXG4gICAgLy8gQSBjb25zdW1lciBjYW4gdXNlICdwYXVzZSBvbiBjYXVnaHQgZXhjZXB0aW9ucydcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzQyMTZcbiAgICB0cnkge1xuICAgICAgdGhyb3cgRXJyb3IodGV4dCk7XG4gICAgfSBjYXRjaCAoeCkge1xuICAgICAgLy8gZG8gbm90aGluZ1xuICAgIH1cbiAgfVxufVxuIl19