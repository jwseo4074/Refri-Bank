var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { useAvatarSize } from './AvatarSizeContext';
export var AvatarBadgeStylesKey = 'ChromaAvatarBadge';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundColor: theme.palette.red.main,
        border: theme.pxToRem(1) + " solid " + theme.palette.black[50],
        borderRadius: 9999,
        bottom: 0,
        color: theme.palette.common.white,
        display: 'flex',
        fontWeight: theme.typography.fontWeightBold,
        justifyContent: 'center',
        position: 'absolute',
        right: 0,
        transform: 'translate(25%, 25%)',
        userSelect: 'none',
    },
    size0: {
        height: theme.pxToRem(12),
        width: theme.pxToRem(12),
    },
    size1: {
        fontSize: theme.pxToRem(8),
        height: theme.pxToRem(16),
        width: theme.pxToRem(16),
    },
    size2: {
        fontSize: theme.pxToRem(10),
        height: theme.pxToRem(20),
        width: theme.pxToRem(20),
    },
}); }, { name: AvatarBadgeStylesKey });
export var AvatarBadge = function (_a) {
    var _b;
    var className = _a.className, count = _a.count, isVisible = _a.isVisible, rootProps = __rest(_a, ["className", "count", "isVisible"]);
    var classes = useStyles({});
    var size = useAvatarSize().size;
    if (!count && !isVisible) {
        return null;
    }
    return (React.createElement("span", __assign({ "aria-label": count ? count + " notifications available" : 'notifications available', role: "status", className: clsx(classes.root, (_b = {},
            _b[classes.size0] = size === 0,
            _b[classes.size1] = size === 1,
            _b[classes.size2] = size === 2,
            _b), className) }, rootProps), size !== 0 ? count : null));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZhdGFyQmFkZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9BdmF0YXIvQXZhdGFyQmFkZ2UudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUUxQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFcEQsTUFBTSxDQUFDLElBQU0sb0JBQW9CLEdBQUcsbUJBQW1CLENBQUM7QUFFeEQsTUFBTSxDQUFDLElBQU0sU0FBUyxHQUFHLFVBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osVUFBVSxFQUFFLFFBQVE7UUFDcEIsZUFBZSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUk7UUFDdkMsTUFBTSxFQUFLLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGVBQVUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFHO1FBQzlELFlBQVksRUFBRSxJQUFJO1FBQ2xCLE1BQU0sRUFBRSxDQUFDO1FBQ1QsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUs7UUFDakMsT0FBTyxFQUFFLE1BQU07UUFDZixVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxjQUFjO1FBQzNDLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLEtBQUssRUFBRSxDQUFDO1FBQ1IsU0FBUyxFQUFFLHFCQUFxQjtRQUNoQyxVQUFVLEVBQUUsTUFBTTtLQUNuQjtJQUNELEtBQUssRUFBRTtRQUNMLE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUN6QixLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDekI7SUFDRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDMUIsTUFBTSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3pCLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUN6QjtJQUNELEtBQUssRUFBRTtRQUNMLFFBQVEsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUMzQixNQUFNLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDekIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQ3pCO0NBQ0YsQ0FBQyxFQTlCUyxDQThCVCxFQUNGLEVBQUUsSUFBSSxFQUFFLG9CQUFvQixFQUFFLENBQy9CLENBQUM7QUFVRixNQUFNLENBQUMsSUFBTSxXQUFXLEdBQStCLFVBQUMsRUFLdkQ7O0lBSkMsSUFBQSx3QkFBUyxFQUNULGdCQUFLLEVBQ0wsd0JBQVMsRUFDVCwyREFBWTtJQUVaLElBQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0QixJQUFBLDJCQUFJLENBQXFCO0lBRWpDLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDeEIsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUVELE9BQU8sQ0FDTCxxREFFSSxLQUFLLENBQUMsQ0FBQyxDQUFJLEtBQUssNkJBQTBCLENBQUMsQ0FBQyxDQUFDLHlCQUF5QixFQUV4RSxJQUFJLEVBQUMsUUFBUSxFQUNiLFNBQVMsRUFBRSxJQUFJLENBQ2IsT0FBTyxDQUFDLElBQUk7WUFFVixHQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUcsSUFBSSxLQUFLLENBQUM7WUFDM0IsR0FBQyxPQUFPLENBQUMsS0FBSyxJQUFHLElBQUksS0FBSyxDQUFDO1lBQzNCLEdBQUMsT0FBTyxDQUFDLEtBQUssSUFBRyxJQUFJLEtBQUssQ0FBQztpQkFFN0IsU0FBUyxDQUNWLElBQ0csU0FBUyxHQUVaLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNyQixDQUNSLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgeyB1c2VBdmF0YXJTaXplIH0gZnJvbSAnLi9BdmF0YXJTaXplQ29udGV4dCc7XG5cbmV4cG9ydCBjb25zdCBBdmF0YXJCYWRnZVN0eWxlc0tleSA9ICdDaHJvbWFBdmF0YXJCYWRnZSc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUucmVkLm1haW4sXG4gICAgICBib3JkZXI6IGAke3RoZW1lLnB4VG9SZW0oMSl9IHNvbGlkICR7dGhlbWUucGFsZXR0ZS5ibGFja1s1MF19YCxcbiAgICAgIGJvcmRlclJhZGl1czogOTk5OSxcbiAgICAgIGJvdHRvbTogMCxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZvbnRXZWlnaHQ6IHRoZW1lLnR5cG9ncmFwaHkuZm9udFdlaWdodEJvbGQsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlKDI1JSwgMjUlKScsXG4gICAgICB1c2VyU2VsZWN0OiAnbm9uZScsXG4gICAgfSxcbiAgICBzaXplMDoge1xuICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDEyKSxcbiAgICAgIHdpZHRoOiB0aGVtZS5weFRvUmVtKDEyKSxcbiAgICB9LFxuICAgIHNpemUxOiB7XG4gICAgICBmb250U2l6ZTogdGhlbWUucHhUb1JlbSg4KSxcbiAgICAgIGhlaWdodDogdGhlbWUucHhUb1JlbSgxNiksXG4gICAgICB3aWR0aDogdGhlbWUucHhUb1JlbSgxNiksXG4gICAgfSxcbiAgICBzaXplMjoge1xuICAgICAgZm9udFNpemU6IHRoZW1lLnB4VG9SZW0oMTApLFxuICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDIwKSxcbiAgICAgIHdpZHRoOiB0aGVtZS5weFRvUmVtKDIwKSxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBBdmF0YXJCYWRnZVN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBBdmF0YXJCYWRnZUNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIEF2YXRhckJhZGdlUHJvcHNcbiAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8J3NwYW4nPiB7XG4gIGNvdW50PzogbnVtYmVyO1xuICBpc1Zpc2libGU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgQXZhdGFyQmFkZ2U6IFJlYWN0LkZDPEF2YXRhckJhZGdlUHJvcHM+ID0gKHtcbiAgY2xhc3NOYW1lLFxuICBjb3VudCxcbiAgaXNWaXNpYmxlLFxuICAuLi5yb290UHJvcHNcbn0pID0+IHtcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7fSk7XG4gIGNvbnN0IHsgc2l6ZSB9ID0gdXNlQXZhdGFyU2l6ZSgpO1xuXG4gIGlmICghY291bnQgJiYgIWlzVmlzaWJsZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8c3BhblxuICAgICAgYXJpYS1sYWJlbD17XG4gICAgICAgIGNvdW50ID8gYCR7Y291bnR9IG5vdGlmaWNhdGlvbnMgYXZhaWxhYmxlYCA6ICdub3RpZmljYXRpb25zIGF2YWlsYWJsZSdcbiAgICAgIH1cbiAgICAgIHJvbGU9XCJzdGF0dXNcIlxuICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICBjbGFzc2VzLnJvb3QsXG4gICAgICAgIHtcbiAgICAgICAgICBbY2xhc3Nlcy5zaXplMF06IHNpemUgPT09IDAsXG4gICAgICAgICAgW2NsYXNzZXMuc2l6ZTFdOiBzaXplID09PSAxLFxuICAgICAgICAgIFtjbGFzc2VzLnNpemUyXTogc2l6ZSA9PT0gMixcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgICAgey4uLnJvb3RQcm9wc31cbiAgICA+XG4gICAgICB7c2l6ZSAhPT0gMCA/IGNvdW50IDogbnVsbH1cbiAgICA8L3NwYW4+XG4gICk7XG59O1xuIl19