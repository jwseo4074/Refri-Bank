var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import 'focus-visible';
export var IconButtonStylesKey = 'ChromaIconButton';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundColor: 'transparent',
        border: 0,
        color: theme.palette.black[500],
        cursor: 'pointer',
        display: 'inline-flex',
        flex: '0 0 auto',
        justifyContent: 'center',
        margin: 0,
        outline: 'none',
        padding: theme.spacing(1.5),
        position: 'relative',
        transition: 'color 0.25s ease, opacity 0.25s ease',
        userSelect: 'none',
        '&:hover': {
            color: theme.palette.primary.main,
        },
        '&:focus': {
            borderRadius: '9999px',
            color: theme.palette.primary.main,
            outline: 'none',
            '&.focus-visible': {
                boxShadow: theme.boxShadows.focusVisible,
            },
        },
        '&:disabled': {
            cursor: 'default',
            pointerEvents: 'none',
            color: theme.palette.black[200],
        },
    },
    inverse: {
        background: 'transparent',
        color: theme.palette.common.white,
        '&:hover': {
            color: theme.palette.common.white,
            opacity: 0.85,
        },
        '&:focus': {
            color: theme.palette.common.white,
            opacity: 0.75,
            '&.focus-visible': {
                boxShadow: theme.boxShadows.focusVisibleInverse,
            },
        },
        '&:disabled': {
            color: "rgba(255, 255, 255, 0.45)",
        },
    },
    negative: {
        color: theme.palette.negative.main,
        '&:hover, &:focus': {
            color: theme.palette.negative.dark,
        },
        '&:disabled': {
            color: theme.palette.negative.main,
            opacity: 0.44,
        },
    },
    positive: {
        color: theme.palette.positive.main,
        '&:hover, &:focus': {
            color: theme.palette.positive.dark,
        },
        '&:disabled': {
            color: theme.palette.positive.main,
            opacity: 0.44,
        },
    },
    size0: {
        '& > svg': {
            width: 18,
            height: 18,
        },
    },
    size1: {
        '& > svg': {
            width: 24,
            height: 24,
        },
    },
    paddingTop0: {
        paddingTop: 0,
    },
    paddingTop1: {
        paddingTop: theme.spacing(0.5),
    },
    paddingTop2: {
        paddingTop: theme.spacing(1),
    },
    paddingTop3: {
        paddingTop: theme.spacing(1.5),
    },
    paddingBottom0: {
        paddingBottom: 0,
    },
    paddingBottom1: {
        paddingBottom: theme.spacing(0.5),
    },
    paddingBottom2: {
        paddingBottom: theme.spacing(1),
    },
    paddingBottom3: {
        paddingBottom: theme.spacing(1.5),
    },
    paddingLeft0: {
        paddingLeft: 0,
    },
    paddingLeft1: {
        paddingLeft: theme.spacing(0.5),
    },
    paddingLeft2: {
        paddingLeft: theme.spacing(1),
    },
    paddingLeft3: {
        paddingLeft: theme.spacing(1.5),
    },
    paddingRight0: {
        paddingRight: 0,
    },
    paddingRight1: {
        paddingRight: theme.spacing(0.5),
    },
    paddingRight2: {
        paddingRight: theme.spacing(1),
    },
    paddingRight3: {
        paddingRight: theme.spacing(1.5),
    },
}); }, { name: IconButtonStylesKey });
export var IconButton = React.forwardRef(function (_a, ref) {
    var _b, _c, _d, _e, _f, _g;
    var ariaLabel = _a["aria-label"], className = _a.className, _h = _a.color, color = _h === void 0 ? 'default' : _h, disabled = _a.disabled, Icon = _a.icon, paddingTop = _a.paddingTop, paddingBottom = _a.paddingBottom, paddingLeft = _a.paddingLeft, paddingRight = _a.paddingRight, _j = _a.size, size = _j === void 0 ? 1 : _j, rootProps = __rest(_a, ['aria-label', "className", "color", "disabled", "icon", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "size"]);
    var classes = useStyles({});
    return (React.createElement("button", __assign({ ref: ref, "aria-label": ariaLabel, type: "button", className: clsx(classes.root, (_b = {}, _b[classes.size0] = size === 0, _b), (_c = {},
            _c[classes.inverse] = color === 'inverse',
            _c[classes.negative] = color === 'negative',
            _c[classes.positive] = color === 'positive',
            _c), (_d = {},
            _d[classes.paddingTop0] = paddingTop === 0,
            _d[classes.paddingTop1] = paddingTop === 1,
            _d[classes.paddingTop2] = paddingTop === 2,
            _d[classes.paddingTop3] = paddingTop === 3,
            _d), (_e = {},
            _e[classes.paddingBottom0] = paddingBottom === 0,
            _e[classes.paddingBottom1] = paddingBottom === 1,
            _e[classes.paddingBottom2] = paddingBottom === 2,
            _e[classes.paddingBottom3] = paddingBottom === 3,
            _e), (_f = {},
            _f[classes.paddingLeft0] = paddingLeft === 0,
            _f[classes.paddingLeft1] = paddingLeft === 1,
            _f[classes.paddingLeft2] = paddingLeft === 2,
            _f[classes.paddingLeft3] = paddingLeft === 3,
            _f), (_g = {},
            _g[classes.paddingRight0] = paddingRight === 0,
            _g[classes.paddingRight1] = paddingRight === 1,
            _g[classes.paddingRight2] = paddingRight === 2,
            _g[classes.paddingRight3] = paddingRight === 3,
            _g), className), disabled: disabled, tabIndex: disabled ? -1 : 0 }, rootProps),
        React.createElement(Icon, { role: "img", "aria-hidden": true })));
});
//# sourceMappingURL=data:application/json;base64,