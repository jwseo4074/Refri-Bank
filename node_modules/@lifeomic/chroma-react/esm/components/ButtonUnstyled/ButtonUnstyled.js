var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { makeStyles } from '../../styles';
import clsx from 'clsx';
export var ButtonUnstyledStylesKey = 'ChromaButtonUnstyled';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        backgroundColor: 'transparent',
        border: 0,
        borderRadius: theme.pxToRem(4),
        color: 'inherit',
        cursor: 'pointer',
        padding: 0,
        width: 'fit-content',
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisible,
        },
        '&::-moz-focus-inner': {
            border: 'none',
        },
    },
    fullWidth: {
        width: '100%',
    },
}); }, { name: ButtonUnstyledStylesKey });
export var ButtonUnstyled = React.forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, disabled = _a.disabled, fullWidth = _a.fullWidth, rootProps = __rest(_a, ["children", "className", "disabled", "fullWidth"]);
    var classes = useStyles({});
    return (React.createElement("button", __assign({ className: clsx(classes.root, fullWidth && classes.fullWidth, className), disabled: disabled, ref: ref, tabIndex: disabled ? -1 : 0, type: "button" }, rootProps), children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnV0dG9uVW5zdHlsZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9CdXR0b25VbnN0eWxlZC9CdXR0b25VbnN0eWxlZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBRS9CLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDMUMsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRXhCLE1BQU0sQ0FBQyxJQUFNLHVCQUF1QixHQUFHLHNCQUFzQixDQUFDO0FBRTlELE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRyxVQUFVLENBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNKLGVBQWUsRUFBRSxhQUFhO1FBQzlCLE1BQU0sRUFBRSxDQUFDO1FBQ1QsWUFBWSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQzlCLEtBQUssRUFBRSxTQUFTO1FBQ2hCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE9BQU8sRUFBRSxDQUFDO1FBQ1YsS0FBSyxFQUFFLGFBQWE7UUFDcEIsU0FBUyxFQUFFO1lBQ1QsT0FBTyxFQUFFLE1BQU07U0FDaEI7UUFDRCx1QkFBdUIsRUFBRTtZQUN2QixTQUFTLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxZQUFZO1NBQ3pDO1FBQ0QscUJBQXFCLEVBQUU7WUFDckIsTUFBTSxFQUFFLE1BQU07U0FDZjtLQUNGO0lBQ0QsU0FBUyxFQUFFO1FBQ1QsS0FBSyxFQUFFLE1BQU07S0FDZDtDQUNGLENBQUMsRUF0QlMsQ0FzQlQsRUFDRixFQUFFLElBQUksRUFBRSx1QkFBdUIsRUFBRSxDQUNsQyxDQUFDO0FBVUYsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBRzVDLFVBQUMsRUFBMEQsRUFBRSxHQUFHO0lBQTdELElBQUEsc0JBQVEsRUFBRSx3QkFBUyxFQUFFLHNCQUFRLEVBQUUsd0JBQVMsRUFBRSwwRUFBWTtJQUN6RCxJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFOUIsT0FBTyxDQUNMLHlDQUNFLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLElBQUksT0FBTyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsRUFDeEUsUUFBUSxFQUFFLFFBQVEsRUFDbEIsR0FBRyxFQUFFLEdBQUcsRUFDUixRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUMzQixJQUFJLEVBQUMsUUFBUSxJQUNULFNBQVMsR0FFWixRQUFRLENBQ0YsQ0FDVixDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5cbmV4cG9ydCBjb25zdCBCdXR0b25VbnN0eWxlZFN0eWxlc0tleSA9ICdDaHJvbWFCdXR0b25VbnN0eWxlZCc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgYm9yZGVyUmFkaXVzOiB0aGVtZS5weFRvUmVtKDQpLFxuICAgICAgY29sb3I6ICdpbmhlcml0JyxcbiAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdpZHRoOiAnZml0LWNvbnRlbnQnLFxuICAgICAgJyY6Zm9jdXMnOiB7XG4gICAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIH0sXG4gICAgICAnJjpmb2N1cy5mb2N1cy12aXNpYmxlJzoge1xuICAgICAgICBib3hTaGFkb3c6IHRoZW1lLmJveFNoYWRvd3MuZm9jdXNWaXNpYmxlLFxuICAgICAgfSxcbiAgICAgICcmOjotbW96LWZvY3VzLWlubmVyJzoge1xuICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBmdWxsV2lkdGg6IHtcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogQnV0dG9uVW5zdHlsZWRTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgQnV0dG9uVW5zdHlsZWRDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBCdXR0b25VbnN0eWxlZFByb3BzXG4gIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCdidXR0b24nPiB7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgZnVsbFdpZHRoPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0IEJ1dHRvblVuc3R5bGVkID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTEJ1dHRvbkVsZW1lbnQsXG4gIEJ1dHRvblVuc3R5bGVkUHJvcHNcbj4oKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgZGlzYWJsZWQsIGZ1bGxXaWR0aCwgLi4ucm9vdFByb3BzIH0sIHJlZikgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGZ1bGxXaWR0aCAmJiBjbGFzc2VzLmZ1bGxXaWR0aCwgY2xhc3NOYW1lKX1cbiAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgIHJlZj17cmVmfVxuICAgICAgdGFiSW5kZXg9e2Rpc2FibGVkID8gLTEgOiAwfVxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICB7Li4ucm9vdFByb3BzfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn0pO1xuIl19