import * as React from 'react';
import { GetClasses } from '../../typeUtils';
import { ButtonProps } from '../Button';
import 'focus-visible';
export declare const ButtonFilePickerStylesKey = "ChromaButtonFilePicker";
export declare const useStyles: (props: {}) => Record<"text" | "root" | "icon" | "disabled" | "input" | "fullWidth" | "inverse" | "containedInverse" | "outlined" | "outlinedInverse" | "textInverse" | "rootDisabled" | "containedInverseDisabled" | "outlinedDisabled" | "outlinedInverseDisabled" | "textDisabled" | "textInverseDisabled", string>;
export declare type ButtonFilePickerClasses = GetClasses<typeof useStyles>;
export interface ButtonFilePickerProps {
    accept?: string;
    allowMultipleSelection?: boolean;
    children?: React.ReactNode;
    className?: string;
    color?: ButtonProps['color'];
    disabled?: boolean;
    fullWidth?: ButtonProps['fullWidth'];
    icon?: ButtonProps['icon'];
    id?: string;
    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    variant?: ButtonProps['variant'];
}
export declare const ButtonFilePicker: React.ForwardRefExoticComponent<ButtonFilePickerProps & React.RefAttributes<HTMLLabelElement>>;
