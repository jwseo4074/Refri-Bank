var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { Box } from '../Box';
import { StepConnector } from './StepConnector';
export var StepperStylesKey = 'ChromaStepper';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        backgroundColor: theme.palette.common.white,
    },
    innerRoot: {
        margin: theme.spacing(4, 4, 0, 4),
    },
}); }, { name: StepperStylesKey });
export var Stepper = function (_a) {
    var activeStep = _a.activeStep, _b = _a.as, as = _b === void 0 ? 'button' : _b, children = _a.children, className = _a.className, connectorClassName = _a.connectorClassName, onClick = _a.onClick, rootProps = __rest(_a, ["activeStep", "as", "children", "className", "connectorClassName", "onClick"]);
    var classes = useStyles({});
    var childrenArray = Array.isArray(children)
        ? children
        : React.Children.toArray(children);
    var steps = childrenArray.map(function (child, index) {
        var childrenProps = {
            active: false,
            as: as,
            completed: false,
            index: index,
            onClick: onClick,
        };
        if (activeStep === index) {
            childrenProps.active = true;
        }
        else if (activeStep > index) {
            childrenProps.completed = true;
        }
        var connector = React.createElement(StepConnector, null);
        return [
            index !== 0 &&
                React.cloneElement(connector, __assign({ className: connectorClassName, hasSubTitle: child.props.subTitle, hasSubTitlePill: child.props.subTitlePillLabel, key: "connector-" + index }, childrenProps)),
            React.cloneElement(child, __assign({ key: "step-" + index }, childrenProps)),
        ];
    });
    return (React.createElement(Box, __assign({ fullWidth: true, className: clsx(classes.root, className) }, rootProps),
        React.createElement(Box, { align: "center", className: classes.innerRoot, fullWidth: true, justify: "space-between" }, steps)));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RlcHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1N0ZXBwZXIvU3RlcHBlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDN0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRWhELE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLGVBQWUsQ0FBQztBQUVoRCxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSztLQUM1QztJQUNELFNBQVMsRUFBRTtRQUNULE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUNsQztDQUNGLENBQUMsRUFQUyxDQU9ULEVBQ0YsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsQ0FDM0IsQ0FBQztBQWFGLE1BQU0sQ0FBQyxJQUFNLE9BQU8sR0FBMkIsVUFBQyxFQVEvQztJQVBDLElBQUEsMEJBQVUsRUFDVixVQUFhLEVBQWIsa0NBQWEsRUFDYixzQkFBUSxFQUNSLHdCQUFTLEVBQ1QsMENBQWtCLEVBQ2xCLG9CQUFPLEVBQ1Asc0dBQVk7SUFFWixJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUIsSUFBTSxhQUFhLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDM0MsQ0FBQyxDQUFDLFFBQVE7UUFDVixDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFckMsSUFBTSxLQUFLLEdBQUcsYUFBYSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEtBQVUsRUFBRSxLQUFhO1FBQ3hELElBQU0sYUFBYSxHQUFHO1lBQ3BCLE1BQU0sRUFBRSxLQUFLO1lBQ2IsRUFBRSxJQUFBO1lBQ0YsU0FBUyxFQUFFLEtBQUs7WUFDaEIsS0FBSyxPQUFBO1lBQ0wsT0FBTyxTQUFBO1NBQ1IsQ0FBQztRQUVGLElBQUksVUFBVSxLQUFLLEtBQUssRUFBRTtZQUN4QixhQUFhLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztTQUM3QjthQUFNLElBQUksVUFBVSxHQUFHLEtBQUssRUFBRTtZQUM3QixhQUFhLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUNoQztRQUVELElBQU0sU0FBUyxHQUFHLG9CQUFDLGFBQWEsT0FBRyxDQUFDO1FBRXBDLE9BQU87WUFDTCxLQUFLLEtBQUssQ0FBQztnQkFDVCxLQUFLLENBQUMsWUFBWSxDQUFDLFNBQVMsYUFDMUIsU0FBUyxFQUFFLGtCQUFrQixFQUM3QixXQUFXLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQ2pDLGVBQWUsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUM5QyxHQUFHLEVBQUUsZUFBYSxLQUFPLElBQ3RCLGFBQWEsRUFDaEI7WUFDSixLQUFLLENBQUMsWUFBWSxDQUFDLEtBQUssYUFBSSxHQUFHLEVBQUUsVUFBUSxLQUFPLElBQUssYUFBYSxFQUFHO1NBQ3RFLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sQ0FDTCxvQkFBQyxHQUFHLGFBQUMsU0FBUyxRQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsSUFBTSxTQUFTO1FBQ3BFLG9CQUFDLEdBQUcsSUFDRixLQUFLLEVBQUMsUUFBUSxFQUNkLFNBQVMsRUFBRSxPQUFPLENBQUMsU0FBUyxFQUM1QixTQUFTLFFBQ1QsT0FBTyxFQUFDLGVBQWUsSUFFdEIsS0FBSyxDQUNGLENBQ0YsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuaW1wb3J0IHsgQm94IH0gZnJvbSAnLi4vQm94JztcbmltcG9ydCB7IFN0ZXBDb25uZWN0b3IgfSBmcm9tICcuL1N0ZXBDb25uZWN0b3InO1xuXG5leHBvcnQgY29uc3QgU3RlcHBlclN0eWxlc0tleSA9ICdDaHJvbWFTdGVwcGVyJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICAgIH0sXG4gICAgaW5uZXJSb290OiB7XG4gICAgICBtYXJnaW46IHRoZW1lLnNwYWNpbmcoNCwgNCwgMCwgNCksXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogU3RlcHBlclN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBTdGVwcGVyQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RlcHBlclByb3BzIHtcbiAgYWN0aXZlU3RlcDogbnVtYmVyO1xuICBhcz86ICdidXR0b24nIHwgJ2Rpdic7XG4gIGNoaWxkcmVuOiBhbnk7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgY29ubmVjdG9yQ2xhc3NOYW1lPzogc3RyaW5nO1xuICBvbkNsaWNrPzogKGluZGV4OiBudW1iZXIpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBTdGVwcGVyOiBSZWFjdC5GQzxTdGVwcGVyUHJvcHM+ID0gKHtcbiAgYWN0aXZlU3RlcCxcbiAgYXMgPSAnYnV0dG9uJyxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgY29ubmVjdG9yQ2xhc3NOYW1lLFxuICBvbkNsaWNrLFxuICAuLi5yb290UHJvcHNcbn0pID0+IHtcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7fSk7XG4gIGNvbnN0IGNoaWxkcmVuQXJyYXkgPSBBcnJheS5pc0FycmF5KGNoaWxkcmVuKVxuICAgID8gY2hpbGRyZW5cbiAgICA6IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoY2hpbGRyZW4pO1xuXG4gIGNvbnN0IHN0ZXBzID0gY2hpbGRyZW5BcnJheS5tYXAoKGNoaWxkOiBhbnksIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBjaGlsZHJlblByb3BzID0ge1xuICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgIGFzLFxuICAgICAgY29tcGxldGVkOiBmYWxzZSxcbiAgICAgIGluZGV4LFxuICAgICAgb25DbGljayxcbiAgICB9O1xuXG4gICAgaWYgKGFjdGl2ZVN0ZXAgPT09IGluZGV4KSB7XG4gICAgICBjaGlsZHJlblByb3BzLmFjdGl2ZSA9IHRydWU7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVTdGVwID4gaW5kZXgpIHtcbiAgICAgIGNoaWxkcmVuUHJvcHMuY29tcGxldGVkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBjb25uZWN0b3IgPSA8U3RlcENvbm5lY3RvciAvPjtcblxuICAgIHJldHVybiBbXG4gICAgICBpbmRleCAhPT0gMCAmJlxuICAgICAgICBSZWFjdC5jbG9uZUVsZW1lbnQoY29ubmVjdG9yLCB7XG4gICAgICAgICAgY2xhc3NOYW1lOiBjb25uZWN0b3JDbGFzc05hbWUsXG4gICAgICAgICAgaGFzU3ViVGl0bGU6IGNoaWxkLnByb3BzLnN1YlRpdGxlLFxuICAgICAgICAgIGhhc1N1YlRpdGxlUGlsbDogY2hpbGQucHJvcHMuc3ViVGl0bGVQaWxsTGFiZWwsXG4gICAgICAgICAga2V5OiBgY29ubmVjdG9yLSR7aW5kZXh9YCxcbiAgICAgICAgICAuLi5jaGlsZHJlblByb3BzLFxuICAgICAgICB9KSxcbiAgICAgIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwgeyBrZXk6IGBzdGVwLSR7aW5kZXh9YCwgLi4uY2hpbGRyZW5Qcm9wcyB9KSxcbiAgICBdO1xuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxCb3ggZnVsbFdpZHRoIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9IHsuLi5yb290UHJvcHN9PlxuICAgICAgPEJveFxuICAgICAgICBhbGlnbj1cImNlbnRlclwiXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5pbm5lclJvb3R9XG4gICAgICAgIGZ1bGxXaWR0aFxuICAgICAgICBqdXN0aWZ5PVwic3BhY2UtYmV0d2VlblwiXG4gICAgICA+XG4gICAgICAgIHtzdGVwc31cbiAgICAgIDwvQm94PlxuICAgIDwvQm94PlxuICApO1xufTtcbiJdfQ==