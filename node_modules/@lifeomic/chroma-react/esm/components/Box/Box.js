var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { warning } from '../../utils';
import colorOptions from './colorOptions';
export var BoxStylesKey = 'ChromaBox';
export var useStyles = makeStyles(function (theme) {
    var stringOrThemeSpacing = function (value) {
        if (typeof value === 'string')
            return value;
        if (typeof value === 'number')
            return theme.spacing(value);
    };
    var stringOrThemeSpacingGap = function (value) {
        if (typeof value === 'string')
            return value;
        if (typeof value === 'number')
            return theme.spacing(value) + 'px';
    };
    var stringOrThemeColor = function (value) {
        if (!value)
            return;
        var palette = theme.palette;
        var valueParts = value.split('.');
        if (valueParts.length > 1) {
            if (colorOptions.includes(value)) {
                return palette[valueParts[0]][valueParts[1]];
            }
            else {
                warning(true, "Box color property ".concat(value, " is invalid"));
            }
        }
        return value;
    };
    return {
        root: { display: 'flex' },
        alignBaseline: { alignItems: 'baseline' },
        alignCenter: { alignItems: 'center' },
        alignStart: { alignItems: 'start' },
        flexChildren: {
            '& > *': {
                flex: 1,
            },
        },
        flexWrap: { flexWrap: 'wrap' },
        alignFlexStart: { alignItems: 'flex-start' },
        alignEnd: { alignItems: 'end' },
        alignFlexEnd: { alignItems: 'flex-end' },
        directionRow: { flexDirection: 'row' },
        directionColumn: { flexDirection: 'column' },
        justifyStart: { justifyContent: 'flex-start' },
        justifyEnd: { justifyContent: 'flex-end' },
        justifyEvenly: { justifyContent: 'space-evenly' },
        justifyBetween: { justifyContent: 'space-between' },
        justifyCenter: { justifyContent: 'center' },
        height: { height: function (_a) {
                var height = _a.height;
                return stringOrThemeSpacing(height);
            } },
        width: { width: function (_a) {
                var width = _a.width;
                return stringOrThemeSpacing(width);
            } },
        fullWidth: { width: '100%' },
        fullHeight: { height: '100%' },
        margin: { margin: function (_a) {
                var margin = _a.margin;
                return stringOrThemeSpacing(margin);
            } },
        marginLeft: {
            marginLeft: function (_a) {
                var marginLeft = _a.marginLeft;
                return stringOrThemeSpacing(marginLeft);
            },
        },
        marginRight: {
            marginRight: function (_a) {
                var marginRight = _a.marginRight;
                return stringOrThemeSpacing(marginRight);
            },
        },
        marginTop: {
            marginTop: function (_a) {
                var marginTop = _a.marginTop;
                return stringOrThemeSpacing(marginTop);
            },
        },
        marginBottom: {
            marginBottom: function (_a) {
                var marginBottom = _a.marginBottom;
                return stringOrThemeSpacing(marginBottom);
            },
        },
        marginX: {
            marginLeft: function (_a) {
                var marginX = _a.marginX;
                return stringOrThemeSpacing(marginX);
            },
            marginRight: function (_a) {
                var marginX = _a.marginX;
                return stringOrThemeSpacing(marginX);
            },
        },
        marginY: {
            marginTop: function (_a) {
                var marginY = _a.marginY;
                return stringOrThemeSpacing(marginY);
            },
            marginBottom: function (_a) {
                var marginY = _a.marginY;
                return stringOrThemeSpacing(marginY);
            },
        },
        padding: { padding: function (_a) {
                var padding = _a.padding;
                return stringOrThemeSpacing(padding);
            } },
        paddingLeft: {
            paddingLeft: function (_a) {
                var paddingLeft = _a.paddingLeft;
                return stringOrThemeSpacing(paddingLeft);
            },
        },
        paddingRight: {
            paddingRight: function (_a) {
                var paddingRight = _a.paddingRight;
                return stringOrThemeSpacing(paddingRight);
            },
        },
        paddingTop: {
            paddingTop: function (_a) {
                var paddingTop = _a.paddingTop;
                return stringOrThemeSpacing(paddingTop);
            },
        },
        paddingBottom: {
            paddingBottom: function (_a) {
                var paddingBottom = _a.paddingBottom;
                return stringOrThemeSpacing(paddingBottom);
            },
        },
        paddingX: {
            paddingLeft: function (_a) {
                var paddingX = _a.paddingX;
                return stringOrThemeSpacing(paddingX);
            },
            paddingRight: function (_a) {
                var paddingX = _a.paddingX;
                return stringOrThemeSpacing(paddingX);
            },
        },
        paddingY: {
            paddingTop: function (_a) {
                var paddingY = _a.paddingY;
                return stringOrThemeSpacing(paddingY);
            },
            paddingBottom: function (_a) {
                var paddingY = _a.paddingY;
                return stringOrThemeSpacing(paddingY);
            },
        },
        gap: {
            gap: function (_a) {
                var gap = _a.gap;
                return stringOrThemeSpacingGap(gap);
            },
        },
        borderRadius: { borderRadius: theme.shape.borderRadius },
        color: { color: function (_a) {
                var color = _a.color;
                return stringOrThemeColor(color);
            } },
        bgColor: {
            backgroundColor: function (_a) {
                var bgColor = _a.bgColor;
                return stringOrThemeColor(bgColor);
            },
        },
    };
}, { name: BoxStylesKey });
export var Box = React.forwardRef(function (props, ref) {
    var _a, _b, _c, _d, _e;
    var children = props.children, align = props.align, direction = props.direction, flexChildren = props.flexChildren, flexWrap = props.flexWrap, gap = props.gap, justify = props.justify, height = props.height, width = props.width, fullHeight = props.fullHeight, fullWidth = props.fullWidth, margin = props.margin, marginTop = props.marginTop, marginBottom = props.marginBottom, marginLeft = props.marginLeft, marginRight = props.marginRight, marginY = props.marginY, marginX = props.marginX, padding = props.padding, paddingTop = props.paddingTop, paddingBottom = props.paddingBottom, paddingLeft = props.paddingLeft, paddingRight = props.paddingRight, paddingY = props.paddingY, paddingX = props.paddingX, borderRadius = props.borderRadius, color = props.color, bgColor = props.bgColor, className = props.className, rootProps = __rest(props, ["children", "align", "direction", "flexChildren", "flexWrap", "gap", "justify", "height", "width", "fullHeight", "fullWidth", "margin", "marginTop", "marginBottom", "marginLeft", "marginRight", "marginY", "marginX", "padding", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "paddingY", "paddingX", "borderRadius", "color", "bgColor", "className"]);
    var classes = useStyles(props);
    return (React.createElement("div", __assign({ ref: ref, className: clsx(classes.root, (_a = {},
            _a[classes.flexChildren] = flexChildren,
            _a), (_b = {},
            _b[classes.flexWrap] = flexWrap,
            _b), (_c = {},
            _c[classes.directionRow] = direction === 'row',
            _c[classes.directionColumn] = direction === 'column',
            _c), (_d = {},
            _d[classes.alignBaseline] = align === 'baseline',
            _d[classes.alignCenter] = align === 'center',
            _d[classes.alignStart] = align === 'start',
            _d[classes.alignFlexStart] = align === 'flex-start',
            _d[classes.alignEnd] = align === 'end',
            _d[classes.alignFlexEnd] = align === 'flex-end',
            _d), (_e = {},
            _e[classes.justifyBetween] = justify === 'space-between',
            _e[classes.justifyEnd] = justify === 'flex-end',
            _e[classes.justifyEvenly] = justify === 'space-evenly',
            _e[classes.justifyStart] = justify === 'flex-start',
            _e[classes.justifyCenter] = justify === 'center',
            _e), height && classes.height, width && classes.width, fullWidth && classes.fullWidth, fullHeight && classes.fullHeight, gap && classes.gap, margin && classes.margin, marginTop && classes.marginTop, marginBottom && classes.marginBottom, marginLeft && classes.marginLeft, marginRight && classes.marginRight, marginX && classes.marginX, marginY && classes.marginY, padding && classes.padding, paddingTop && classes.paddingTop, paddingBottom && classes.paddingBottom, paddingLeft && classes.paddingLeft, paddingRight && classes.paddingRight, paddingX && classes.paddingX, paddingY && classes.paddingY, borderRadius && classes.borderRadius, color && classes.color, bgColor && classes.bgColor, className) }, rootProps), children));
});
//# sourceMappingURL=data:application/json;base64,