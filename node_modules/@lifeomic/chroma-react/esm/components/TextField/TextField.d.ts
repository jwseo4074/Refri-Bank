import * as React from 'react';
import { GetClasses } from '../../typeUtils';
import { BaseFormElement } from '../_private/forms';
export declare const TextFieldStylesKey = "ChromaTextField";
export declare const useStyles: (props: {}) => import("@material-ui/styles").ClassNameMap<"input" | "label" | "root" | "inputInverse" | "labelInverse" | "errorMessage" | "helpMessage" | "tooltipContainer" | "labelSecondary" | "labelIcon" | "labelIconInverse" | "inputContainer" | "inputContainerFullWidth" | "inputHasAdornment" | "inputStartAdornment" | "inputEndAdornment" | "adornment" | "adornmentInverse" | "startAdornment" | "endAdornment" | "hasTrailer" | "inputError" | "inputErrorInverse" | "inputFullWidth" | "trailerMessage" | "errorMessageInverse" | "helpMessageInverse">;
export declare type TextFieldClasses = GetClasses<typeof useStyles>;
export interface TextFieldProps extends React.ComponentPropsWithoutRef<'input'> {
    color?: BaseFormElement['color'];
    errorMessage?: BaseFormElement['errorMessage'];
    fullWidth?: boolean;
    hasError?: BaseFormElement['hasError'];
    helpMessage?: BaseFormElement['helpMessage'];
    icon?: React.ComponentType<React.SVGProps<SVGSVGElement>>;
    label?: BaseFormElement['label'];
    secondaryLabel?: string;
    tooltipMessage?: string;
    startAdornment?: React.ReactNode;
    endAdornment?: React.ReactNode;
}
export declare const TextField: React.ForwardRefExoticComponent<TextFieldProps & React.RefAttributes<HTMLInputElement>>;
