var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { NavLink, Route } from 'react-router-dom';
import { makeStyles } from '../../styles';
export var SecondaryNavigationItemStylesKey = 'ChromaSecondaryNavigationItem';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        paddingTop: theme.spacing(1.5),
        paddingBottom: theme.spacing(1.5),
        paddingRight: theme.spacing(3),
        textAlign: 'right',
        position: 'relative',
    },
    link: {
        color: theme.palette.text.hint,
        display: 'block',
        textDecoration: 'none',
        transition: 'color 0.5s ease',
        '&:hover': {
            textDecoration: 'none',
            color: theme.palette.primary.main,
        },
    },
    linkActive: {
        color: theme.palette.text.primary,
    },
    selector: {
        position: 'absolute',
        width: theme.pxToRem(4),
        height: '100%',
        top: 0,
        right: 0,
        background: theme.palette.primary.main,
        transition: 'all 0.2s',
        opacity: 0,
    },
    selectorActive: {
        opacity: 100,
    },
}); }, { name: SecondaryNavigationItemStylesKey });
export var SecondaryNavigationItem = React.forwardRef(function (_a, ref) {
    var className = _a.className, exact = _a.exact, label = _a.label, to = _a.to, additionalClasses = _a.classes, rootProps = __rest(_a, ["className", "exact", "label", "to", "classes"]);
    var classes = useStyles({ classes: additionalClasses });
    return (React.createElement(Route, { exact: exact, path: to }, function (_a) {
        var match = _a.match;
        var isActive = Boolean(match);
        return (React.createElement("li", __assign({ ref: ref, className: clsx(classes.root, className) }, rootProps),
            React.createElement(NavLink, { activeClassName: classes.linkActive, className: classes.link, exact: exact, to: to }, label),
            React.createElement("div", { role: "presentation", className: clsx(classes.selector, isActive && classes.selectorActive) })));
    }));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vjb25kYXJ5TmF2aWdhdGlvbkl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9TZWNvbmRhcnlOYXZpZ2F0aW9uL1NlY29uZGFyeU5hdmlnYXRpb25JdGVtLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBQ3hCLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFjLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUcxQyxNQUFNLENBQUMsSUFBTSxnQ0FBZ0MsR0FBRywrQkFBK0IsQ0FBQztBQUVoRixNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7UUFDOUIsYUFBYSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ2pDLFlBQVksRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM5QixTQUFTLEVBQUUsT0FBTztRQUNsQixRQUFRLEVBQUUsVUFBVTtLQUNyQjtJQUNELElBQUksRUFBRTtRQUNKLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJO1FBQzlCLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLGNBQWMsRUFBRSxNQUFNO1FBQ3RCLFVBQVUsRUFBRSxpQkFBaUI7UUFDN0IsU0FBUyxFQUFFO1lBQ1QsY0FBYyxFQUFFLE1BQU07WUFDdEIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUk7U0FDbEM7S0FDRjtJQUNELFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPO0tBQ2xDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3ZCLE1BQU0sRUFBRSxNQUFNO1FBQ2QsR0FBRyxFQUFFLENBQUM7UUFDTixLQUFLLEVBQUUsQ0FBQztRQUNSLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO1FBQ3RDLFVBQVUsRUFBRSxVQUFVO1FBQ3RCLE9BQU8sRUFBRSxDQUFDO0tBQ1g7SUFDRCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsR0FBRztLQUNiO0NBQ0YsQ0FBQyxFQWxDUyxDQWtDVCxFQUNGLEVBQUUsSUFBSSxFQUFFLGdDQUFnQyxFQUFFLENBQzNDLENBQUM7QUFXRixNQUFNLENBQUMsSUFBTSx1QkFBdUIsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUlyRCxVQUNFLEVBQXlFLEVBQ3pFLEdBQUc7SUFERCxJQUFBLFNBQVMsZUFBQSxFQUFFLEtBQUssV0FBQSxFQUFFLEtBQUssV0FBQSxFQUFFLEVBQUUsUUFBQSxFQUFXLGlCQUFpQixhQUFBLEVBQUssU0FBUyxjQUF2RSxnREFBeUUsQ0FBRjtJQUd2RSxJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO0lBRTFELE9BQU8sQ0FDTCxvQkFBQyxLQUFLLElBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRSxJQUMxQixVQUFDLEVBQVM7WUFBUCxLQUFLLFdBQUE7UUFDUCxJQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFaEMsT0FBTyxDQUNMLHFDQUNFLEdBQUcsRUFBRSxHQUFHLEVBQ1IsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUNwQyxTQUFTO1lBRWIsb0JBQUMsT0FBTyxJQUNOLGVBQWUsRUFBRSxPQUFPLENBQUMsVUFBVSxFQUNuQyxTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksRUFDdkIsS0FBSyxFQUFFLEtBQUssRUFDWixFQUFFLEVBQUUsRUFBRSxJQUVMLEtBQUssQ0FDRTtZQUVWLDZCQUNFLElBQUksRUFBQyxjQUFjLEVBQ25CLFNBQVMsRUFBRSxJQUFJLENBQ2IsT0FBTyxDQUFDLFFBQVEsRUFDaEIsUUFBUSxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQ25DLEdBQ0QsQ0FDQyxDQUNOLENBQUM7SUFDSixDQUFDLENBQ0ssQ0FDVCxDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE5hdkxpbmssIFJvdXRlLCBSb3V0ZVByb3BzIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IEdldENsYXNzZXMsIFN0YW5kYXJkUHJvcHMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuXG5leHBvcnQgY29uc3QgU2Vjb25kYXJ5TmF2aWdhdGlvbkl0ZW1TdHlsZXNLZXkgPSAnQ2hyb21hU2Vjb25kYXJ5TmF2aWdhdGlvbkl0ZW0nO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcoMS41KSxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnNwYWNpbmcoMS41KSxcbiAgICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZygzKSxcbiAgICAgIHRleHRBbGlnbjogJ3JpZ2h0JyxcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIH0sXG4gICAgbGluazoge1xuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUudGV4dC5oaW50LFxuICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgICB0cmFuc2l0aW9uOiAnY29sb3IgMC41cyBlYXNlJyxcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICB0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICB9LFxuICAgIH0sXG4gICAgbGlua0FjdGl2ZToge1xuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUudGV4dC5wcmltYXJ5LFxuICAgIH0sXG4gICAgc2VsZWN0b3I6IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgd2lkdGg6IHRoZW1lLnB4VG9SZW0oNCksXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIHRvcDogMCxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgYmFja2dyb3VuZDogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICB0cmFuc2l0aW9uOiAnYWxsIDAuMnMnLFxuICAgICAgb3BhY2l0eTogMCxcbiAgICB9LFxuICAgIHNlbGVjdG9yQWN0aXZlOiB7XG4gICAgICBvcGFjaXR5OiAxMDAsXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogU2Vjb25kYXJ5TmF2aWdhdGlvbkl0ZW1TdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgU2Vjb25kYXJ5TmF2aWdhdGlvbkl0ZW1DbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBTZWNvbmRhcnlOYXZpZ2F0aW9uSXRlbVByb3BzXG4gIGV4dGVuZHMgU3RhbmRhcmRQcm9wczxIVE1MTElFbGVtZW50LCBTZWNvbmRhcnlOYXZpZ2F0aW9uSXRlbUNsYXNzZXM+LFxuICAgIFBpY2s8Um91dGVQcm9wcywgJ2V4YWN0Jz4ge1xuICB0bzogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgU2Vjb25kYXJ5TmF2aWdhdGlvbkl0ZW0gPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MTElFbGVtZW50LFxuICBTZWNvbmRhcnlOYXZpZ2F0aW9uSXRlbVByb3BzXG4+KFxuICAoXG4gICAgeyBjbGFzc05hbWUsIGV4YWN0LCBsYWJlbCwgdG8sIGNsYXNzZXM6IGFkZGl0aW9uYWxDbGFzc2VzLCAuLi5yb290UHJvcHMgfSxcbiAgICByZWZcbiAgKSA9PiB7XG4gICAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7IGNsYXNzZXM6IGFkZGl0aW9uYWxDbGFzc2VzIH0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZSBleGFjdD17ZXhhY3R9IHBhdGg9e3RvfT5cbiAgICAgICAgeyh7IG1hdGNoIH0pID0+IHtcbiAgICAgICAgICBjb25zdCBpc0FjdGl2ZSA9IEJvb2xlYW4obWF0Y2gpO1xuXG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxsaVxuICAgICAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKX1cbiAgICAgICAgICAgICAgey4uLnJvb3RQcm9wc31cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPE5hdkxpbmtcbiAgICAgICAgICAgICAgICBhY3RpdmVDbGFzc05hbWU9e2NsYXNzZXMubGlua0FjdGl2ZX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXMubGlua31cbiAgICAgICAgICAgICAgICBleGFjdD17ZXhhY3R9XG4gICAgICAgICAgICAgICAgdG89e3RvfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAgICA8L05hdkxpbms+XG5cbiAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICAgICAgICAgIGNsYXNzZXMuc2VsZWN0b3IsXG4gICAgICAgICAgICAgICAgICBpc0FjdGl2ZSAmJiBjbGFzc2VzLnNlbGVjdG9yQWN0aXZlXG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgKTtcbiAgICAgICAgfX1cbiAgICAgIDwvUm91dGU+XG4gICAgKTtcbiAgfVxuKTtcbiJdfQ==