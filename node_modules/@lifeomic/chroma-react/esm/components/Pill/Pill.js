var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { motion } from 'framer-motion';
export var PillStylesKey = 'ChromaPill';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        display: 'inline-flex',
        alignItems: 'center',
        background: theme.palette.black[500],
        color: theme.palette.common.white,
        borderRadius: theme.pxToRem(20),
        fontSize: theme.typography.caption.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        padding: theme.spacing(0.5, 1.5),
        width: 'fit-content',
        maxHeight: theme.pxToRem(25),
    },
    default: {},
    primaryColor: {
        background: theme.palette.primary.main,
    },
    highlight: {
        background: "linear-gradient(135deg, ".concat(theme.palette.primary.light, " 0%, ").concat(theme.palette.primary.main, " 40%, rgb(166, 66, 254) 92%)"),
        boxShadow: theme.boxShadows.table,
        borderRadius: theme.spacing(0.25, 1),
        borderBottom: 'solid 1px rgba(0, 83, 154, 0.75)',
        borderRight: 'solid 1px rgba(0, 83, 154, 0.75)',
        color: theme.palette.common.white,
        fontSize: theme.pxToRem(9),
        fontWeight: theme.typography.fontWeightBolder,
        height: theme.pxToRem(20),
        justifyContent: 'center',
        letterSpacing: theme.pxToRem(1.6),
        lineHeight: 0.9,
        padding: theme.spacing(0.125, 0.75, 0),
        textIndent: theme.pxToRem(3),
        textTransform: 'uppercase',
    },
}); }, { name: PillStylesKey });
export var Pill = React.forwardRef(function (_a, ref) {
    var _b, _c;
    var children = _a.children, className = _a.className, color = _a.color, label = _a.label, _d = _a.variant, variant = _d === void 0 ? 'default' : _d, rootProps = __rest(_a, ["children", "className", "color", "label", "variant"]);
    var classes = useStyles({});
    return (React.createElement(motion.span, __assign({ ref: ref, className: clsx(classes.root, (_b = {},
            _b[classes.default] = variant === 'default',
            _b[classes.highlight] = variant === 'highlight',
            _b), (_c = {},
            _c[classes.primaryColor] = color === 'primary',
            _c), className) }, rootProps),
        label,
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGlsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1BpbGwvUGlsbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTFDLE9BQU8sRUFBRSxNQUFNLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFFcEQsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUFHLFlBQVksQ0FBQztBQUUxQyxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsYUFBYTtRQUN0QixVQUFVLEVBQUUsUUFBUTtRQUNwQixVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQ3BDLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1FBQ2pDLFlBQVksRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUMvQixRQUFRLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsUUFBUTtRQUMzQyxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxjQUFjO1FBQzNDLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7UUFDaEMsS0FBSyxFQUFFLGFBQWE7UUFDcEIsU0FBUyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQzdCO0lBQ0QsT0FBTyxFQUFFLEVBQUU7SUFDWCxZQUFZLEVBQUU7UUFDWixVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSTtLQUN2QztJQUNELFNBQVMsRUFBRTtRQUNULFVBQVUsRUFBRSxrQ0FBMkIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxrQkFBUSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLGlDQUE4QjtRQUNsSSxTQUFTLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLO1FBQ2pDLFlBQVksRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDcEMsWUFBWSxFQUFFLGtDQUFrQztRQUNoRCxXQUFXLEVBQUUsa0NBQWtDO1FBQy9DLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1FBQ2pDLFFBQVEsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUMxQixVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0I7UUFDN0MsTUFBTSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3pCLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLGFBQWEsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNqQyxVQUFVLEVBQUUsR0FBRztRQUNmLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ3RDLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM1QixhQUFhLEVBQUUsV0FBVztLQUMzQjtDQUNGLENBQUMsRUFsQ1MsQ0FrQ1QsRUFDRixFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsQ0FDeEIsQ0FBQztBQWtCRixNQUFNLENBQUMsSUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FDbEMsVUFDRSxFQUF3RSxFQUN4RSxHQUFHOztJQURELElBQUEsUUFBUSxjQUFBLEVBQUUsU0FBUyxlQUFBLEVBQUUsS0FBSyxXQUFBLEVBQUUsS0FBSyxXQUFBLEVBQUUsZUFBbUIsRUFBbkIsT0FBTyxtQkFBRyxTQUFTLEtBQUEsRUFBSyxTQUFTLGNBQXRFLHNEQUF3RSxDQUFGO0lBR3RFLElBQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUU5QixPQUFPLENBQ0wsb0JBQUMsTUFBTSxDQUFDLElBQUksYUFDVixHQUFHLEVBQUUsR0FBRyxFQUNSLFNBQVMsRUFBRSxJQUFJLENBQ2IsT0FBTyxDQUFDLElBQUk7WUFFVixHQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUcsT0FBTyxLQUFLLFNBQVM7WUFDeEMsR0FBQyxPQUFPLENBQUMsU0FBUyxJQUFHLE9BQU8sS0FBSyxXQUFXOztZQUc1QyxHQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUcsS0FBSyxLQUFLLFNBQVM7aUJBRTdDLFNBQVMsQ0FDVixJQUNHLFNBQVM7UUFFWixLQUFLO1FBQ0wsUUFBUSxDQUNHLENBQ2YsQ0FBQztBQUNKLENBQUMsQ0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuaW1wb3J0IHsgbW90aW9uLCBNb3Rpb25Qcm9wcyB9IGZyb20gJ2ZyYW1lci1tb3Rpb24nO1xuXG5leHBvcnQgY29uc3QgUGlsbFN0eWxlc0tleSA9ICdDaHJvbWFQaWxsJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBkaXNwbGF5OiAnaW5saW5lLWZsZXgnLFxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5wYWxldHRlLmJsYWNrWzUwMF0sXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnB4VG9SZW0oMjApLFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvbi5mb250U2l6ZSxcbiAgICAgIGZvbnRXZWlnaHQ6IHRoZW1lLnR5cG9ncmFwaHkuZm9udFdlaWdodEJvbGQsXG4gICAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDAuNSwgMS41KSxcbiAgICAgIHdpZHRoOiAnZml0LWNvbnRlbnQnLFxuICAgICAgbWF4SGVpZ2h0OiB0aGVtZS5weFRvUmVtKDI1KSxcbiAgICB9LFxuICAgIGRlZmF1bHQ6IHt9LFxuICAgIHByaW1hcnlDb2xvcjoge1xuICAgICAgYmFja2dyb3VuZDogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgfSxcbiAgICBoaWdobGlnaHQ6IHtcbiAgICAgIGJhY2tncm91bmQ6IGBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAke3RoZW1lLnBhbGV0dGUucHJpbWFyeS5saWdodH0gMCUsICR7dGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW59IDQwJSwgcmdiKDE2NiwgNjYsIDI1NCkgOTIlKWAsXG4gICAgICBib3hTaGFkb3c6IHRoZW1lLmJveFNoYWRvd3MudGFibGUsXG4gICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnNwYWNpbmcoMC4yNSwgMSksXG4gICAgICBib3JkZXJCb3R0b206ICdzb2xpZCAxcHggcmdiYSgwLCA4MywgMTU0LCAwLjc1KScsXG4gICAgICBib3JkZXJSaWdodDogJ3NvbGlkIDFweCByZ2JhKDAsIDgzLCAxNTQsIDAuNzUpJyxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgIGZvbnRTaXplOiB0aGVtZS5weFRvUmVtKDkpLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0Qm9sZGVyLFxuICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDIwKSxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIGxldHRlclNwYWNpbmc6IHRoZW1lLnB4VG9SZW0oMS42KSxcbiAgICAgIGxpbmVIZWlnaHQ6IDAuOSxcbiAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMC4xMjUsIDAuNzUsIDApLFxuICAgICAgdGV4dEluZGVudDogdGhlbWUucHhUb1JlbSgzKSxcbiAgICAgIHRleHRUcmFuc2Zvcm06ICd1cHBlcmNhc2UnLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IFBpbGxTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IGludGVyZmFjZSBQaWxsT3duUHJvcHNcbiAgZXh0ZW5kcyBPbWl0PFxuICAgICAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCdzcGFuJz4sXG4gICAgICAnb25BbmltYXRpb25TdGFydCcgfCAnb25EcmFnJyB8ICdvbkRyYWdFbmQnIHwgJ29uRHJhZ1N0YXJ0JyB8ICdzdHlsZSdcbiAgICA+LFxuICAgIE1vdGlvblByb3BzIHtcbiAgY29sb3I/OiAncHJpbWFyeScgfCAnZGVmYXVsdCc7XG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xuICBsYWJlbD86IHN0cmluZztcbiAgdmFyaWFudD86ICdkZWZhdWx0JyB8ICdoaWdobGlnaHQnO1xufVxuXG5leHBvcnQgdHlwZSBQaWxsQ2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGlsbFByb3BzIGV4dGVuZHMgUGlsbE93blByb3BzIHt9XG5cbmV4cG9ydCBjb25zdCBQaWxsID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MU3BhbkVsZW1lbnQsIFBpbGxQcm9wcz4oXG4gIChcbiAgICB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGNvbG9yLCBsYWJlbCwgdmFyaWFudCA9ICdkZWZhdWx0JywgLi4ucm9vdFByb3BzIH0sXG4gICAgcmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxtb3Rpb24uc3BhblxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgIGNsYXNzZXMucm9vdCxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5kZWZhdWx0XTogdmFyaWFudCA9PT0gJ2RlZmF1bHQnLFxuICAgICAgICAgICAgW2NsYXNzZXMuaGlnaGxpZ2h0XTogdmFyaWFudCA9PT0gJ2hpZ2hsaWdodCcsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5wcmltYXJ5Q29sb3JdOiBjb2xvciA9PT0gJ3ByaW1hcnknLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICl9XG4gICAgICAgIHsuLi5yb290UHJvcHN9XG4gICAgICA+XG4gICAgICAgIHtsYWJlbH1cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9tb3Rpb24uc3Bhbj5cbiAgICApO1xuICB9XG4pO1xuIl19