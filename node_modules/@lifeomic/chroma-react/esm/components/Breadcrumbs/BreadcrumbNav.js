var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles/index';
export var BreadcrumbNavStylesKey = 'ChromaBreadcrumbNav';
export var useStyles = makeStyles(function (theme) { return ({
    root: {},
    ol: {
        margin: theme.spacing(0),
        paddingLeft: theme.spacing(0),
        listStyle: 'none',
    },
}); }, { name: BreadcrumbNavStylesKey });
export var BreadcrumbNav = function (_a) {
    var className = _a.className, children = _a.children, rootProps = __rest(_a, ["className", "children"]);
    var classes = useStyles({});
    return (React.createElement("nav", __assign({ "aria-label": "Breadcrumb", className: clsx(classes.root, className) }, rootProps),
        React.createElement("ol", { className: classes.ol }, children)));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJlYWRjcnVtYk5hdi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JyZWFkY3J1bWJzL0JyZWFkY3J1bWJOYXYudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBR2hELE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHLHFCQUFxQixDQUFDO0FBRTVELE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRyxVQUFVLENBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRSxFQUFFO0lBQ1IsRUFBRSxFQUFFO1FBQ0YsTUFBTSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3QixTQUFTLEVBQUUsTUFBTTtLQUNsQjtDQUNGLENBQUMsRUFQUyxDQU9ULEVBQ0YsRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUUsQ0FDakMsQ0FBQztBQVVGLE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBaUMsVUFBQyxFQUkzRDtJQUhDLElBQUEsd0JBQVMsRUFDVCxzQkFBUSxFQUNSLGlEQUFZO0lBRVosSUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlCLE9BQU8sQ0FDTCxvREFDYSxZQUFZLEVBQ3ZCLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsSUFDcEMsU0FBUztRQUViLDRCQUFJLFNBQVMsRUFBRSxPQUFPLENBQUMsRUFBRSxJQUFHLFFBQVEsQ0FBTSxDQUN0QyxDQUNQLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMvaW5kZXgnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5cbmV4cG9ydCBjb25zdCBCcmVhZGNydW1iTmF2U3R5bGVzS2V5ID0gJ0Nocm9tYUJyZWFkY3J1bWJOYXYnO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHt9LFxuICAgIG9sOiB7XG4gICAgICBtYXJnaW46IHRoZW1lLnNwYWNpbmcoMCksXG4gICAgICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZygwKSxcbiAgICAgIGxpc3RTdHlsZTogJ25vbmUnLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IEJyZWFkY3J1bWJOYXZTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgQnJlYWRjcnVtYk5hdkNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIEJyZWFkY3J1bWJOYXZQcm9wc1xuICBleHRlbmRzIFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFxuICAgIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxFbGVtZW50PixcbiAgICBIVE1MRWxlbWVudFxuICA+IHt9XG5cbmV4cG9ydCBjb25zdCBCcmVhZGNydW1iTmF2OiBSZWFjdC5GQzxCcmVhZGNydW1iTmF2UHJvcHM+ID0gKHtcbiAgY2xhc3NOYW1lLFxuICBjaGlsZHJlbixcbiAgLi4ucm9vdFByb3BzXG59KSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICByZXR1cm4gKFxuICAgIDxuYXZcbiAgICAgIGFyaWEtbGFiZWw9XCJCcmVhZGNydW1iXCJcbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9XG4gICAgICB7Li4ucm9vdFByb3BzfVxuICAgID5cbiAgICAgIDxvbCBjbGFzc05hbWU9e2NsYXNzZXMub2x9PntjaGlsZHJlbn08L29sPlxuICAgIDwvbmF2PlxuICApO1xufTtcbiJdfQ==