var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles/index';
export var BreadcrumbNavStylesKey = 'ChromaBreadcrumbNav';
export var useStyles = makeStyles(function (theme) { return ({
    root: {},
    ol: {
        margin: theme.spacing(0),
        paddingLeft: theme.spacing(0),
        listStyle: 'none',
    },
}); }, { name: BreadcrumbNavStylesKey });
export var BreadcrumbNav = function (_a) {
    var className = _a.className, children = _a.children, rootProps = __rest(_a, ["className", "children"]);
    var classes = useStyles({});
    return (React.createElement("nav", __assign({ "aria-label": "Breadcrumb", className: clsx(classes.root, className) }, rootProps),
        React.createElement("ol", { className: classes.ol }, children)));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJlYWRjcnVtYk5hdi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JyZWFkY3J1bWJzL0JyZWFkY3J1bWJOYXYudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBR2hELE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHLHFCQUFxQixDQUFDO0FBRTVELE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRyxVQUFVLENBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRSxFQUFFO0lBQ1IsRUFBRSxFQUFFO1FBQ0YsTUFBTSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3QixTQUFTLEVBQUUsTUFBTTtLQUNsQjtDQUNGLENBQUMsRUFQUyxDQU9ULEVBQ0YsRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUUsQ0FDakMsQ0FBQztBQVlGLE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBaUMsVUFBQyxFQUkzRDtJQUhDLElBQUEsU0FBUyxlQUFBLEVBQ1QsUUFBUSxjQUFBLEVBQ0wsU0FBUyxjQUg4Qyx5QkFJM0QsQ0FEYTtJQUVaLElBQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQ0wsb0RBQ2EsWUFBWSxFQUN2QixTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQ3BDLFNBQVM7UUFFYiw0QkFBSSxTQUFTLEVBQUUsT0FBTyxDQUFDLEVBQUUsSUFBRyxRQUFRLENBQU0sQ0FDdEMsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzL2luZGV4JztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuXG5leHBvcnQgY29uc3QgQnJlYWRjcnVtYk5hdlN0eWxlc0tleSA9ICdDaHJvbWFCcmVhZGNydW1iTmF2JztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7fSxcbiAgICBvbDoge1xuICAgICAgbWFyZ2luOiB0aGVtZS5zcGFjaW5nKDApLFxuICAgICAgcGFkZGluZ0xlZnQ6IHRoZW1lLnNwYWNpbmcoMCksXG4gICAgICBsaXN0U3R5bGU6ICdub25lJyxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBCcmVhZGNydW1iTmF2U3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCB0eXBlIEJyZWFkY3J1bWJOYXZDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBCcmVhZGNydW1iTmF2UHJvcHNcbiAgZXh0ZW5kcyBSZWFjdC5EZXRhaWxlZEhUTUxQcm9wczxcbiAgICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRWxlbWVudD4sXG4gICAgSFRNTEVsZW1lbnRcbiAgPiB7XG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgQnJlYWRjcnVtYk5hdjogUmVhY3QuRkM8QnJlYWRjcnVtYk5hdlByb3BzPiA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG4gIC4uLnJvb3RQcm9wc1xufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcbiAgcmV0dXJuIChcbiAgICA8bmF2XG4gICAgICBhcmlhLWxhYmVsPVwiQnJlYWRjcnVtYlwiXG4gICAgICBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpfVxuICAgICAgey4uLnJvb3RQcm9wc31cbiAgICA+XG4gICAgICA8b2wgY2xhc3NOYW1lPXtjbGFzc2VzLm9sfT57Y2hpbGRyZW59PC9vbD5cbiAgICA8L25hdj5cbiAgKTtcbn07XG4iXX0=