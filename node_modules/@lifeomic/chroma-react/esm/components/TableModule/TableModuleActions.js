var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { makeStyles } from '../../styles/index';
import clsx from 'clsx';
export var TableModuleActionsStylesKey = 'ChromaTableModuleActions';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        display: 'flex',
        justifyContent: 'flex-end',
        // Handle the case where an IconButton or IconbuttonLink is in a cell
        // We don't want it to be too large to push out the height of the row!
        '& > button, & > a': {
            display: 'flex',
            height: theme.pxToRem(26),
            marginRight: theme.spacing(2.5),
            padding: 0,
            '& > svg': {
                height: theme.pxToRem(15),
                width: theme.pxToRem(15),
            },
            '&:last-child': {
                marginRight: 0,
            },
        },
    },
}); }, { name: TableModuleActionsStylesKey });
export var TableModuleActions = function (_a) {
    var children = _a.children, className = _a.className, rootProps = __rest(_a, ["children", "className"]);
    var classes = useStyles({});
    return (React.createElement("div", __assign({ className: clsx(classes.root, className), "aria-label": "Table Actions" }, rootProps), children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFibGVNb2R1bGVBY3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGFibGVNb2R1bGUvVGFibGVNb2R1bGVBY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWhELE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUV4QixNQUFNLENBQUMsSUFBTSwyQkFBMkIsR0FBRywwQkFBMEIsQ0FBQztBQUV0RSxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLGNBQWMsRUFBRSxVQUFVO1FBQzFCLHFFQUFxRTtRQUNyRSxzRUFBc0U7UUFDdEUsbUJBQW1CLEVBQUU7WUFDbkIsT0FBTyxFQUFFLE1BQU07WUFDZixNQUFNLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDekIsV0FBVyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQy9CLE9BQU8sRUFBRSxDQUFDO1lBQ1YsU0FBUyxFQUFFO2dCQUNULE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztnQkFDekIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO2FBQ3pCO1lBQ0QsY0FBYyxFQUFFO2dCQUNkLFdBQVcsRUFBRSxDQUFDO2FBQ2Y7U0FDRjtLQUNGO0NBQ0YsQ0FBQyxFQXBCUyxDQW9CVCxFQUNGLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLENBQ3RDLENBQUM7QUFZRixNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBc0MsVUFBQyxFQUlyRTtJQUhDLElBQUEsUUFBUSxjQUFBLEVBQ1IsU0FBUyxlQUFBLEVBQ04sU0FBUyxjQUh3RCx5QkFJckUsQ0FEYTtJQUVaLElBQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQ0wsc0NBQ0UsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxnQkFDN0IsZUFBZSxJQUN0QixTQUFTLEdBRVosUUFBUSxDQUNMLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMvaW5kZXgnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcblxuZXhwb3J0IGNvbnN0IFRhYmxlTW9kdWxlQWN0aW9uc1N0eWxlc0tleSA9ICdDaHJvbWFUYWJsZU1vZHVsZUFjdGlvbnMnO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLFxuICAgICAgLy8gSGFuZGxlIHRoZSBjYXNlIHdoZXJlIGFuIEljb25CdXR0b24gb3IgSWNvbmJ1dHRvbkxpbmsgaXMgaW4gYSBjZWxsXG4gICAgICAvLyBXZSBkb24ndCB3YW50IGl0IHRvIGJlIHRvbyBsYXJnZSB0byBwdXNoIG91dCB0aGUgaGVpZ2h0IG9mIHRoZSByb3chXG4gICAgICAnJiA+IGJ1dHRvbiwgJiA+IGEnOiB7XG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDI2KSxcbiAgICAgICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcoMi41KSxcbiAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgJyYgPiBzdmcnOiB7XG4gICAgICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDE1KSxcbiAgICAgICAgICB3aWR0aDogdGhlbWUucHhUb1JlbSgxNSksXG4gICAgICAgIH0sXG4gICAgICAgICcmOmxhc3QtY2hpbGQnOiB7XG4gICAgICAgICAgbWFyZ2luUmlnaHQ6IDAsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IFRhYmxlTW9kdWxlQWN0aW9uc1N0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBUYWJsZU1vZHVsZUFjdGlvbnNDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBUYWJsZU1vZHVsZUFjdGlvbnNQcm9wc1xuICBleHRlbmRzIFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFxuICAgIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PixcbiAgICBIVE1MRGl2RWxlbWVudFxuICA+IHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBjb25zdCBUYWJsZU1vZHVsZUFjdGlvbnM6IFJlYWN0LkZDPFRhYmxlTW9kdWxlQWN0aW9uc1Byb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIC4uLnJvb3RQcm9wc1xufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpfVxuICAgICAgYXJpYS1sYWJlbD1cIlRhYmxlIEFjdGlvbnNcIlxuICAgICAgey4uLnJvb3RQcm9wc31cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19