var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { makeStyles } from '../../styles/index';
import clsx from 'clsx';
export var TableModuleActionsStylesKey = 'ChromaTableModuleActions';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        display: 'flex',
        justifyContent: 'flex-end',
        // Handle the case where an IconButton or IconbuttonLink is in a cell
        // We don't want it to be too large to push out the height of the row!
        '& > button, & > a': {
            display: 'flex',
            height: theme.pxToRem(26),
            marginRight: theme.spacing(2.5),
            padding: 0,
            '& > svg': {
                height: theme.pxToRem(15),
                width: theme.pxToRem(15),
            },
            '&:last-child': {
                marginRight: 0,
            },
        },
    },
}); }, { name: TableModuleActionsStylesKey });
export var TableModuleActions = function (_a) {
    var children = _a.children, className = _a.className, rootProps = __rest(_a, ["children", "className"]);
    var classes = useStyles({});
    return (React.createElement("div", __assign({ className: clsx(classes.root, className), "aria-label": "Table Actions" }, rootProps), children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFibGVNb2R1bGVBY3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGFibGVNb2R1bGUvVGFibGVNb2R1bGVBY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWhELE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUV4QixNQUFNLENBQUMsSUFBTSwyQkFBMkIsR0FBRywwQkFBMEIsQ0FBQztBQUV0RSxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLGNBQWMsRUFBRSxVQUFVO1FBQzFCLHFFQUFxRTtRQUNyRSxzRUFBc0U7UUFDdEUsbUJBQW1CLEVBQUU7WUFDbkIsT0FBTyxFQUFFLE1BQU07WUFDZixNQUFNLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDekIsV0FBVyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQy9CLE9BQU8sRUFBRSxDQUFDO1lBQ1YsU0FBUyxFQUFFO2dCQUNULE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztnQkFDekIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO2FBQ3pCO1lBQ0QsY0FBYyxFQUFFO2dCQUNkLFdBQVcsRUFBRSxDQUFDO2FBQ2Y7U0FDRjtLQUNGO0NBQ0YsQ0FBQyxFQXBCUyxDQW9CVCxFQUNGLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLENBQ3RDLENBQUM7QUFVRixNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBc0MsVUFBQyxFQUlyRTtJQUhDLElBQUEsc0JBQVEsRUFDUix3QkFBUyxFQUNULGlEQUFZO0lBRVosSUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlCLE9BQU8sQ0FDTCxzQ0FDRSxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLGdCQUM3QixlQUFlLElBQ3RCLFNBQVMsR0FFWixRQUFRLENBQ0wsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcy9pbmRleCc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuXG5leHBvcnQgY29uc3QgVGFibGVNb2R1bGVBY3Rpb25zU3R5bGVzS2V5ID0gJ0Nocm9tYVRhYmxlTW9kdWxlQWN0aW9ucyc7XG5cbmV4cG9ydCBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKFxuICAodGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LWVuZCcsXG4gICAgICAvLyBIYW5kbGUgdGhlIGNhc2Ugd2hlcmUgYW4gSWNvbkJ1dHRvbiBvciBJY29uYnV0dG9uTGluayBpcyBpbiBhIGNlbGxcbiAgICAgIC8vIFdlIGRvbid0IHdhbnQgaXQgdG8gYmUgdG9vIGxhcmdlIHRvIHB1c2ggb3V0IHRoZSBoZWlnaHQgb2YgdGhlIHJvdyFcbiAgICAgICcmID4gYnV0dG9uLCAmID4gYSc6IHtcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBoZWlnaHQ6IHRoZW1lLnB4VG9SZW0oMjYpLFxuICAgICAgICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZygyLjUpLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAnJiA+IHN2Zyc6IHtcbiAgICAgICAgICBoZWlnaHQ6IHRoZW1lLnB4VG9SZW0oMTUpLFxuICAgICAgICAgIHdpZHRoOiB0aGVtZS5weFRvUmVtKDE1KSxcbiAgICAgICAgfSxcbiAgICAgICAgJyY6bGFzdC1jaGlsZCc6IHtcbiAgICAgICAgICBtYXJnaW5SaWdodDogMCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogVGFibGVNb2R1bGVBY3Rpb25zU3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCB0eXBlIFRhYmxlTW9kdWxlQWN0aW9uc0NsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlTW9kdWxlQWN0aW9uc1Byb3BzXG4gIGV4dGVuZHMgUmVhY3QuRGV0YWlsZWRIVE1MUHJvcHM8XG4gICAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+LFxuICAgIEhUTUxEaXZFbGVtZW50XG4gID4ge31cblxuZXhwb3J0IGNvbnN0IFRhYmxlTW9kdWxlQWN0aW9uczogUmVhY3QuRkM8VGFibGVNb2R1bGVBY3Rpb25zUHJvcHM+ID0gKHtcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgLi4ucm9vdFByb3BzXG59KSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9XG4gICAgICBhcmlhLWxhYmVsPVwiVGFibGUgQWN0aW9uc1wiXG4gICAgICB7Li4ucm9vdFByb3BzfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXX0=