var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { Box } from '../Box';
export var PaperStylesKey = 'ChromaPaper';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        background: theme.palette.common.white,
        boxShadow: theme.boxShadows.table,
        borderRadius: theme.pxToRem(3),
    },
    padding0: {
        padding: 0,
    },
    padding1: {
        padding: theme.spacing(1),
    },
    padding2: {
        padding: theme.spacing(2),
    },
}); }, { name: PaperStylesKey });
export var Paper = React.forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, _c = _a.padding, padding = _c === void 0 ? 2 : _c, rootProps = __rest(_a, ["children", "className", "padding"]);
    var classes = useStyles({});
    return (React.createElement(Box, __assign({ direction: "column", ref: ref, className: clsx(classes.root, (_b = {},
            _b[classes.padding0] = padding === 0,
            _b[classes.padding1] = padding === 1,
            _b[classes.padding2] = padding === 2,
            _b), className) }, rootProps), children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9QYXBlci9QYXBlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTFDLE9BQU8sRUFBRSxHQUFHLEVBQVksTUFBTSxRQUFRLENBQUM7QUFFdkMsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLGFBQWEsQ0FBQztBQUU1QyxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSztRQUN0QyxTQUFTLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLO1FBQ2pDLFlBQVksRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztLQUMvQjtJQUNELFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxDQUFDO0tBQ1g7SUFDRCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDMUI7SUFDRCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDMUI7Q0FDRixDQUFDLEVBZlMsQ0FlVCxFQUNGLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxDQUN6QixDQUFDO0FBVUYsTUFBTSxDQUFDLElBQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQ25DLFVBQUMsRUFBa0QsRUFBRSxHQUFHOztJQUFyRCxJQUFBLHNCQUFRLEVBQUUsd0JBQVMsRUFBRSxlQUFXLEVBQVgsZ0NBQVcsRUFBRSw0REFBWTtJQUMvQyxJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFOUIsT0FBTyxDQUNMLG9CQUFDLEdBQUcsYUFDRixTQUFTLEVBQUMsUUFBUSxFQUNsQixHQUFHLEVBQUUsR0FBRyxFQUNSLFNBQVMsRUFBRSxJQUFJLENBQ2IsT0FBTyxDQUFDLElBQUk7WUFFVixHQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUcsT0FBTyxLQUFLLENBQUM7WUFDakMsR0FBQyxPQUFPLENBQUMsUUFBUSxJQUFHLE9BQU8sS0FBSyxDQUFDO1lBQ2pDLEdBQUMsT0FBTyxDQUFDLFFBQVEsSUFBRyxPQUFPLEtBQUssQ0FBQztpQkFFbkMsU0FBUyxDQUNWLElBQ0csU0FBUyxHQUVaLFFBQVEsQ0FDTCxDQUNQLENBQUM7QUFDSixDQUFDLENBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcyc7XG5pbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCB7IEJveCwgQm94UHJvcHMgfSBmcm9tICcuLi9Cb3gnO1xuXG5leHBvcnQgY29uc3QgUGFwZXJTdHlsZXNLZXkgPSAnQ2hyb21hUGFwZXInO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnBhbGV0dGUuY29tbW9uLndoaXRlLFxuICAgICAgYm94U2hhZG93OiB0aGVtZS5ib3hTaGFkb3dzLnRhYmxlLFxuICAgICAgYm9yZGVyUmFkaXVzOiB0aGVtZS5weFRvUmVtKDMpLFxuICAgIH0sXG4gICAgcGFkZGluZzA6IHtcbiAgICAgIHBhZGRpbmc6IDAsXG4gICAgfSxcbiAgICBwYWRkaW5nMToge1xuICAgICAgcGFkZGluZzogdGhlbWUuc3BhY2luZygxKSxcbiAgICB9LFxuICAgIHBhZGRpbmcyOiB7XG4gICAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IFBhcGVyU3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFwZXJPd25Qcm9wcyBleHRlbmRzIEJveFByb3BzIHtcbiAgcGFkZGluZz86IDAgfCAxIHwgMjtcbn1cblxuZXhwb3J0IHR5cGUgUGFwZXJDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBQYXBlclByb3BzIGV4dGVuZHMgUGFwZXJPd25Qcm9wcyB7fVxuXG5leHBvcnQgY29uc3QgUGFwZXIgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBQYXBlclByb3BzPihcbiAgKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgcGFkZGluZyA9IDIsIC4uLnJvb3RQcm9wcyB9LCByZWYpID0+IHtcbiAgICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Qm94XG4gICAgICAgIGRpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICAgY2xhc3Nlcy5yb290LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFtjbGFzc2VzLnBhZGRpbmcwXTogcGFkZGluZyA9PT0gMCxcbiAgICAgICAgICAgIFtjbGFzc2VzLnBhZGRpbmcxXTogcGFkZGluZyA9PT0gMSxcbiAgICAgICAgICAgIFtjbGFzc2VzLnBhZGRpbmcyXTogcGFkZGluZyA9PT0gMixcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICApfVxuICAgICAgICB7Li4ucm9vdFByb3BzfVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0JveD5cbiAgICApO1xuICB9XG4pO1xuIl19