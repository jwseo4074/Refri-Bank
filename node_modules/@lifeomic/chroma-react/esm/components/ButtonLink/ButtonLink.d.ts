import * as React from 'react';
import { LinkProps } from 'react-router-dom';
import { GetClasses } from '../../typeUtils';
import { ButtonProps } from '../Button';
import 'focus-visible';
export declare const ButtonLinkStylesKey = "ChromaButtonLink";
export declare const useStyles: (props: {}) => Record<"text" | "root" | "icon" | "disabled" | "fullWidth" | "containedInverse" | "outlined" | "outlinedInverse" | "textInverse" | "disabledContained" | "disabledInverse" | "disabledContainedInverse", string>;
export declare type ButtonLinkClasses = GetClasses<typeof useStyles>;
export interface ButtonLinkProps extends LinkProps {
    color?: ButtonProps['color'];
    disabled?: ButtonProps['disabled'];
    fullWidth?: ButtonProps['fullWidth'];
    icon?: ButtonProps['icon'];
    variant?: ButtonProps['variant'];
}
export declare const ButtonLink: React.ForwardRefExoticComponent<ButtonLinkProps & React.RefAttributes<HTMLAnchorElement>>;
