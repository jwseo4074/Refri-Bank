var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { LinkOrExternalLink } from '../_private/LinkOrExternalLink';
import 'focus-visible';
export var ButtonLinkStylesKey = 'ChromaButtonLink';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        background: theme.palette.primary.main,
        border: '0',
        borderRadius: theme.pxToRem(4),
        color: theme.palette.common.white,
        cursor: 'pointer',
        display: 'inline-flex',
        whiteSpace: 'nowrap',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.typography.button.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        justifyContent: 'center',
        letterSpacing: theme.pxToRem(0.5),
        lineHeight: 1.4,
        margin: 0,
        minHeight: theme.pxToRem(32),
        minWidth: theme.pxToRem(64),
        outline: 'none',
        paddingBottom: theme.pxToRem(8),
        paddingLeft: theme.pxToRem(11),
        paddingRight: theme.pxToRem(11),
        paddingTop: theme.pxToRem(8),
        position: 'relative',
        textDecoration: 'none',
        transition: 'background-color 0.25s ease, color 0.25s ease, opacity 0.25s ease',
        userSelect: 'none',
        '&:hover, &:focus': {
            textDecoration: 'none',
            color: theme.palette.common.white,
            backgroundColor: theme.palette.primary[900],
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisible,
        },
    },
    containedInverse: {
        backgroundColor: theme.palette.common.white,
        color: theme.palette.primary.main,
        '&:hover': {
            backgroundColor: theme.palette.common.white,
            color: theme.palette.primary.main,
            opacity: 0.85,
        },
        '&:focus': {
            backgroundColor: theme.palette.common.white,
            color: theme.palette.primary.main,
            opacity: 0.75,
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
    },
    outlined: {
        backgroundColor: 'transparent',
        border: "1px solid " + theme.palette.primary.main,
        color: theme.palette.primary.main,
        transition: 'border 0.25s ease, color 0.25s ease',
        '&:hover, &:focus': {
            backgroundColor: 'transparent',
            border: "1px solid " + theme.palette.primary[900],
            color: theme.palette.primary[900],
        },
    },
    outlinedInverse: {
        borderColor: theme.palette.common.white,
        color: theme.palette.common.white,
        '&:hover': {
            color: theme.palette.common.white,
            opacity: 0.85,
            borderColor: 'rgba(255, 255, 255, 0.85)',
        },
        '&:focus': {
            color: theme.palette.common.white,
            opacity: 0.75,
            borderColor: 'rgba(255, 255, 255, 0.75)',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
    },
    text: {
        backgroundColor: 'transparent',
        border: 'unset',
        color: theme.palette.primary.main,
        transition: 'color 0.25s ease',
        '&:hover, &:focus': {
            backgroundColor: 'transparent',
            color: theme.palette.primary[900],
        },
    },
    textInverse: {
        color: theme.palette.common.white,
        '&:hover': {
            color: theme.palette.common.white,
            opacity: 0.85,
        },
        '&:focus': {
            color: theme.palette.common.white,
            opacity: 0.75,
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
    },
    fullWidth: {
        width: '100%',
    },
    icon: {
        width: theme.spacing(2),
        height: theme.spacing(2),
        marginRight: theme.spacing(1),
    },
    disabled: {
        pointerEvents: 'none',
        color: theme.palette.grey[900],
        borderColor: theme.palette.grey[900],
    },
    disabledContained: {
        pointerEvents: 'none',
        color: theme.palette.grey[100],
        background: theme.palette.grey[900],
    },
    disabledInverse: {
        pointerEvents: 'none',
        color: theme.palette.grey[100],
        borderColor: theme.palette.grey[100],
    },
    disabledContainedInverse: {
        pointerEvents: 'none',
        color: theme.palette.grey[900],
        background: theme.palette.grey[100],
    },
}); }, { name: ButtonLinkStylesKey });
export var ButtonLink = React.forwardRef(function (_a, ref) {
    var _b, _c, _d, _e;
    var className = _a.className, children = _a.children, color = _a.color, disabled = _a.disabled, fullWidth = _a.fullWidth, Icon = _a.icon, rel = _a.rel, target = _a.target, to = _a.to, variant = _a.variant, rootProps = __rest(_a, ["className", "children", "color", "disabled", "fullWidth", "icon", "rel", "target", "to", "variant"]);
    var classes = useStyles({});
    variant = variant || 'contained';
    return (React.createElement(LinkOrExternalLink, __assign({ disabled: disabled, innerRef: ref, target: target, rel: rel, className: clsx(classes.root, (_b = {},
            _b[classes.outlined] = variant === 'outlined',
            _b[classes.text] = variant === 'text',
            _b), (_c = {},
            _c[classes.containedInverse] = variant === 'contained' && color === 'inverse',
            _c[classes.outlinedInverse] = variant === 'outlined' && color === 'inverse',
            _c[classes.textInverse] = variant === 'text' && color === 'inverse',
            _c), fullWidth && classes.fullWidth, disabled &&
            color !== 'inverse' && (_d = {},
            _d[classes.disabled] = variant === 'text' || variant === 'outlined',
            _d[classes.disabledContained] = variant === 'contained',
            _d), disabled &&
            color === 'inverse' && (_e = {},
            _e[classes.disabledInverse] = variant === 'text' || variant === 'outlined',
            _e[classes.disabledContainedInverse] = variant === 'contained',
            _e), className), to: to }, rootProps),
        !!Icon && React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon }),
        children));
});
//# sourceMappingURL=data:application/json;base64,