var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { ConditionalWrapper } from '../_private/ConditionalWrapper';
import { makeStyles } from '../../styles';
import { motion, useReducedMotion } from 'framer-motion';
import { Portal } from 'reakit/Portal';
import { Text } from '../Text';
import { Menu as ReakitMenu, MenuButton, MenuItem as ReakitMenuItem, useMenuState, } from 'reakit/Menu';
import clsx from 'clsx';
import * as React from 'react';
import 'focus-visible';
export var MenuStylesKey = 'ChromaMenu';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        backgroundColor: theme.palette.common.white,
        borderRadius: theme.pxToRem(10),
        boxShadow: theme.boxShadows.popover,
        maxHeight: theme.pxToRem(432),
        minWidth: theme.pxToRem(224),
        overflowY: 'auto',
        paddingBottom: theme.spacing(2),
        paddingTop: theme.spacing(2),
        zIndex: 40,
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisible,
        },
    },
    title: {
        paddingBottom: theme.spacing(2),
        paddingLeft: theme.spacing(2.5),
        paddingRight: theme.spacing(2.5),
    },
}); }, { name: MenuStylesKey });
export var Menu = function (_a) {
    var ariaLabel = _a["aria-label"], anchorElement = _a.anchorElement, children = _a.children, className = _a.className, gutter = _a.gutter, items = _a.items, _b = _a.placement, placement = _b === void 0 ? 'bottom' : _b, title = _a.title, _c = _a.usePortal, usePortal = _c === void 0 ? false : _c, rootProps = __rest(_a, ['aria-label', "anchorElement", "children", "className", "gutter", "items", "placement", "title", "usePortal"]);
    var classes = useStyles({});
    var shouldReduceMotion = useReducedMotion();
    var menu = useMenuState({ placement: placement, gutter: gutter });
    var handleStopPropagation = function (e) {
        return e.stopPropagation();
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(MenuButton, __assign({}, menu, anchorElement.props, { onClick: handleStopPropagation }), function (disclosureProps) {
            return React.cloneElement(React.Children.only(anchorElement), disclosureProps);
        }),
        React.createElement(ConditionalWrapper, { condition: usePortal, wrapper: function (children) { return React.createElement(Portal, null, children); } },
            React.createElement(ReakitMenu, __assign({}, menu, { as: motion.div, "aria-label": ariaLabel, className: clsx(classes.root, className), animate: menu.visible
                    ? shouldReduceMotion
                        ? { opacity: 1 }
                        : {
                            opacity: 1,
                            transition: { duration: 0.3 },
                        }
                    : shouldReduceMotion
                        ? { opacity: 0 }
                        : {
                            opacity: 0,
                            transition: { duration: 0.1 },
                        } }, rootProps),
                !!title && (React.createElement(Text, { className: classes.title, weight: "bold", size: "subbody" }, title)),
                items &&
                    items.map(function (item, i) { return (React.createElement(ReakitMenuItem, __assign({}, menu, item.props, { key: i, onClick: function (e) {
                            menu.hide();
                            item.props.onClick && item.props.onClick(e);
                        } }), function (itemProps) {
                        return React.cloneElement(React.Children.only(item), itemProps);
                    })); })))));
};
//# sourceMappingURL=data:application/json;base64,