var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { Text } from '../Text';
export var SmallTileFooterStylesKey = 'ChromaSmallTileFooter';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        display: 'flex',
        padding: theme.spacing(1.375, 1.375, 1.375, 1.5),
        borderTop: "1px solid ".concat(theme.palette.divider),
    },
    text: {
        color: theme.palette.black[500],
        letterSpacing: 'unset',
        lineHeight: 1.5,
    },
    justifyStart: {
        justifyContent: 'flex-start',
    },
    justifyEnd: {
        justifyContent: 'flex-end',
    },
    justifyCenter: {
        justifyContent: 'center',
    },
    justifyBetween: {
        justifyContent: 'space-between',
    },
}); }, { name: SmallTileFooterStylesKey });
export var SmallTileFooter = React.forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, _c = _a.justify, justify = _c === void 0 ? 'space-between' : _c, text = _a.text, rootProps = __rest(_a, ["children", "className", "justify", "text"]);
    var classes = useStyles({});
    return (React.createElement("div", __assign({ ref: ref, className: clsx(classes.root, (_b = {},
            _b[classes.justifyBetween] = justify === 'space-between',
            _b[classes.justifyCenter] = justify === 'center',
            _b[classes.justifyEnd] = justify === 'flex-end',
            _b[classes.justifyStart] = justify === 'flex-start',
            _b), className) }, rootProps),
        !!text && (React.createElement(Text, { size: "caption", className: classes.text }, text)),
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU21hbGxUaWxlRm9vdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvU21hbGxUaWxlL1NtYWxsVGlsZUZvb3Rlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFL0IsTUFBTSxDQUFDLElBQU0sd0JBQXdCLEdBQUcsdUJBQXVCLENBQUM7QUFFaEUsTUFBTSxDQUFDLElBQU0sU0FBUyxHQUFHLFVBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUM7UUFDaEQsU0FBUyxFQUFFLG9CQUFhLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFO0tBQ2hEO0lBQ0QsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUMvQixhQUFhLEVBQUUsT0FBTztRQUN0QixVQUFVLEVBQUUsR0FBRztLQUNoQjtJQUNELFlBQVksRUFBRTtRQUNaLGNBQWMsRUFBRSxZQUFZO0tBQzdCO0lBQ0QsVUFBVSxFQUFFO1FBQ1YsY0FBYyxFQUFFLFVBQVU7S0FDM0I7SUFDRCxhQUFhLEVBQUU7UUFDYixjQUFjLEVBQUUsUUFBUTtLQUN6QjtJQUNELGNBQWMsRUFBRTtRQUNkLGNBQWMsRUFBRSxlQUFlO0tBQ2hDO0NBQ0YsQ0FBQyxFQXZCUyxDQXVCVCxFQUNGLEVBQUUsSUFBSSxFQUFFLHdCQUF3QixFQUFFLENBQ25DLENBQUM7QUFnQkYsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBSTdDLFVBQ0UsRUFBc0UsRUFDdEUsR0FBRzs7SUFERCxJQUFBLFFBQVEsY0FBQSxFQUFFLFNBQVMsZUFBQSxFQUFFLGVBQXlCLEVBQXpCLE9BQU8sbUJBQUcsZUFBZSxLQUFBLEVBQUUsSUFBSSxVQUFBLEVBQUssU0FBUyxjQUFwRSw0Q0FBc0UsQ0FBRjtJQUdwRSxJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFOUIsT0FBTyxDQUNMLHNDQUNFLEdBQUcsRUFBRSxHQUFHLEVBQ1IsU0FBUyxFQUFFLElBQUksQ0FDYixPQUFPLENBQUMsSUFBSTtZQUVWLEdBQUMsT0FBTyxDQUFDLGNBQWMsSUFBRyxPQUFPLEtBQUssZUFBZTtZQUNyRCxHQUFDLE9BQU8sQ0FBQyxhQUFhLElBQUcsT0FBTyxLQUFLLFFBQVE7WUFDN0MsR0FBQyxPQUFPLENBQUMsVUFBVSxJQUFHLE9BQU8sS0FBSyxVQUFVO1lBQzVDLEdBQUMsT0FBTyxDQUFDLFlBQVksSUFBRyxPQUFPLEtBQUssWUFBWTtpQkFFbEQsU0FBUyxDQUNWLElBQ0csU0FBUztRQUVaLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FDVCxvQkFBQyxJQUFJLElBQUMsSUFBSSxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksSUFDekMsSUFBSSxDQUNBLENBQ1I7UUFDQSxRQUFRLENBQ0wsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vVGV4dCc7XG5cbmV4cG9ydCBjb25zdCBTbWFsbFRpbGVGb290ZXJTdHlsZXNLZXkgPSAnQ2hyb21hU21hbGxUaWxlRm9vdGVyJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDEuMzc1LCAxLjM3NSwgMS4zNzUsIDEuNSksXG4gICAgICBib3JkZXJUb3A6IGAxcHggc29saWQgJHt0aGVtZS5wYWxldHRlLmRpdmlkZXJ9YCxcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmJsYWNrWzUwMF0sXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAndW5zZXQnLFxuICAgICAgbGluZUhlaWdodDogMS41LFxuICAgIH0sXG4gICAganVzdGlmeVN0YXJ0OiB7XG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnLFxuICAgIH0sXG4gICAganVzdGlmeUVuZDoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LWVuZCcsXG4gICAgfSxcbiAgICBqdXN0aWZ5Q2VudGVyOiB7XG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgfSxcbiAgICBqdXN0aWZ5QmV0d2Vlbjoge1xuICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICB9LFxuICB9KSxcbiAgeyBuYW1lOiBTbWFsbFRpbGVGb290ZXJTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IGludGVyZmFjZSBTbWFsbFRpbGVGb290ZXJPd25Qcm9wc1xuICBleHRlbmRzIFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFxuICAgIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PixcbiAgICBIVE1MRGl2RWxlbWVudFxuICA+IHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIHRleHQ/OiBzdHJpbmc7XG4gIGp1c3RpZnk/OiAnZmxleC1zdGFydCcgfCAnY2VudGVyJyB8ICdmbGV4LWVuZCcgfCAnc3BhY2UtYmV0d2Vlbic7XG59XG5cbmV4cG9ydCB0eXBlIFNtYWxsVGlsZUZvb3RlckNsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNtYWxsVGlsZUZvb3RlclByb3BzIGV4dGVuZHMgU21hbGxUaWxlRm9vdGVyT3duUHJvcHMge31cblxuZXhwb3J0IGNvbnN0IFNtYWxsVGlsZUZvb3RlciA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxEaXZFbGVtZW50LFxuICBTbWFsbFRpbGVGb290ZXJQcm9wc1xuPihcbiAgKFxuICAgIHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwganVzdGlmeSA9ICdzcGFjZS1iZXR3ZWVuJywgdGV4dCwgLi4ucm9vdFByb3BzIH0sXG4gICAgcmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICBjbGFzc2VzLnJvb3QsXG4gICAgICAgICAge1xuICAgICAgICAgICAgW2NsYXNzZXMuanVzdGlmeUJldHdlZW5dOiBqdXN0aWZ5ID09PSAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgICAgICBbY2xhc3Nlcy5qdXN0aWZ5Q2VudGVyXToganVzdGlmeSA9PT0gJ2NlbnRlcicsXG4gICAgICAgICAgICBbY2xhc3Nlcy5qdXN0aWZ5RW5kXToganVzdGlmeSA9PT0gJ2ZsZXgtZW5kJyxcbiAgICAgICAgICAgIFtjbGFzc2VzLmp1c3RpZnlTdGFydF06IGp1c3RpZnkgPT09ICdmbGV4LXN0YXJ0JyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICApfVxuICAgICAgICB7Li4ucm9vdFByb3BzfVxuICAgICAgPlxuICAgICAgICB7ISF0ZXh0ICYmIChcbiAgICAgICAgICA8VGV4dCBzaXplPVwiY2FwdGlvblwiIGNsYXNzTmFtZT17Y2xhc3Nlcy50ZXh0fT5cbiAgICAgICAgICAgIHt0ZXh0fVxuICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgKX1cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcbiJdfQ==