var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import { Text } from '../Text';
export var SmallTileContentStylesKey = 'ChromaSmallTileContent';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center',
        textAlign: 'center',
        height: theme.pxToRem(77),
    },
    text: {
        fontWeight: theme.typography.fontWeightBold,
        letterSpacing: '0.4px',
        wordBreak: 'break-word',
        marginLeft: theme.spacing(1),
        marginRight: theme.spacing(1),
        lineHeight: 1.66,
    },
    fullHeight: {
        height: '100%',
    },
}); }, { name: SmallTileContentStylesKey });
export var SmallTileContent = React.forwardRef(function (_a, ref) {
    var _b = _a.fullHeight, fullHeight = _b === void 0 ? false : _b, className = _a.className, children = _a.children, text = _a.text, rootProps = __rest(_a, ["fullHeight", "className", "children", "text"]);
    var classes = useStyles({});
    return (React.createElement("div", __assign({ ref: ref, className: clsx(classes.root, fullHeight && classes.fullHeight, className) }, rootProps),
        !!text && (React.createElement(Text, { size: "caption", className: classes.text }, text)),
        children));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU21hbGxUaWxlQ29udGVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1NtYWxsVGlsZS9TbWFsbFRpbGVDb250ZW50LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBQ3hCLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFMUMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUUvQixNQUFNLENBQUMsSUFBTSx5QkFBeUIsR0FBRyx3QkFBd0IsQ0FBQztBQUVsRSxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBVSxDQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUM7SUFDVixJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLFNBQVMsRUFBRSxRQUFRO1FBQ25CLE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUMxQjtJQUNELElBQUksRUFBRTtRQUNKLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLGNBQWM7UUFDM0MsYUFBYSxFQUFFLE9BQU87UUFDdEIsU0FBUyxFQUFFLFlBQVk7UUFDdkIsVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQzVCLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3QixVQUFVLEVBQUUsSUFBSTtLQUNqQjtJQUNELFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxNQUFNO0tBQ2Y7Q0FDRixDQUFDLEVBcEJTLENBb0JULEVBQ0YsRUFBRSxJQUFJLEVBQUUseUJBQXlCLEVBQUUsQ0FDcEMsQ0FBQztBQWVGLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxVQUFVLENBRzlDLFVBQUMsRUFBK0QsRUFBRSxHQUFHO0lBQWxFLElBQUEsa0JBQWtCLEVBQWxCLHVDQUFrQixFQUFFLHdCQUFTLEVBQUUsc0JBQVEsRUFBRSxjQUFJLEVBQUUsdUVBQVk7SUFDOUQsSUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRTlCLE9BQU8sQ0FDTCxzQ0FDRSxHQUFHLEVBQUUsR0FBRyxFQUNSLFNBQVMsRUFBRSxJQUFJLENBQ2IsT0FBTyxDQUFDLElBQUksRUFDWixVQUFVLElBQUksT0FBTyxDQUFDLFVBQVUsRUFDaEMsU0FBUyxDQUNWLElBQ0csU0FBUztRQUVaLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FDVCxvQkFBQyxJQUFJLElBQUMsSUFBSSxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksSUFDekMsSUFBSSxDQUNBLENBQ1I7UUFDQSxRQUFRLENBQ0wsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vVGV4dCc7XG5cbmV4cG9ydCBjb25zdCBTbWFsbFRpbGVDb250ZW50U3R5bGVzS2V5ID0gJ0Nocm9tYVNtYWxsVGlsZUNvbnRlbnQnO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDc3KSxcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIGZvbnRXZWlnaHQ6IHRoZW1lLnR5cG9ncmFwaHkuZm9udFdlaWdodEJvbGQsXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAnMC40cHgnLFxuICAgICAgd29yZEJyZWFrOiAnYnJlYWstd29yZCcsXG4gICAgICBtYXJnaW5MZWZ0OiB0aGVtZS5zcGFjaW5nKDEpLFxuICAgICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgICBsaW5lSGVpZ2h0OiAxLjY2LFxuICAgIH0sXG4gICAgZnVsbEhlaWdodDoge1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogU21hbGxUaWxlQ29udGVudFN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNtYWxsVGlsZUNvbnRlbnRPd25Qcm9wc1xuICBleHRlbmRzIFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFxuICAgIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PixcbiAgICBIVE1MRGl2RWxlbWVudFxuICA+IHtcbiAgdGV4dD86IHN0cmluZztcbiAgZnVsbEhlaWdodD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCB0eXBlIFNtYWxsVGlsZUNvbnRlbnRDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBTbWFsbFRpbGVDb250ZW50UHJvcHMgZXh0ZW5kcyBTbWFsbFRpbGVDb250ZW50T3duUHJvcHMge31cblxuZXhwb3J0IGNvbnN0IFNtYWxsVGlsZUNvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MRGl2RWxlbWVudCxcbiAgU21hbGxUaWxlQ29udGVudFByb3BzXG4+KCh7IGZ1bGxIZWlnaHQgPSBmYWxzZSwgY2xhc3NOYW1lLCBjaGlsZHJlbiwgdGV4dCwgLi4ucm9vdFByb3BzIH0sIHJlZikgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHJlZj17cmVmfVxuICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICBjbGFzc2VzLnJvb3QsXG4gICAgICAgIGZ1bGxIZWlnaHQgJiYgY2xhc3Nlcy5mdWxsSGVpZ2h0LFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgICB7Li4ucm9vdFByb3BzfVxuICAgID5cbiAgICAgIHshIXRleHQgJiYgKFxuICAgICAgICA8VGV4dCBzaXplPVwiY2FwdGlvblwiIGNsYXNzTmFtZT17Y2xhc3Nlcy50ZXh0fT5cbiAgICAgICAgICB7dGV4dH1cbiAgICAgICAgPC9UZXh0PlxuICAgICAgKX1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuIl19