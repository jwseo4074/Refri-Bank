var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import 'focus-visible';
export var ButtonFloatStylesKey = 'ChromaButtonFloat';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundImage: "linear-gradient(135deg,\n        ".concat(theme.palette.primary.light, " 0%,\n        ").concat(theme.palette.primary.main, " 22%,\n        ").concat(theme.palette.purple[700], " 92%)"),
        border: 0,
        boxShadow: theme.boxShadows.tooltip,
        bottom: theme.spacing(2),
        color: theme.palette.common.white,
        cursor: 'pointer',
        display: 'inline-flex',
        flex: '0 0 auto',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.typography.button.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        justifyContent: 'center',
        letterSpacing: theme.pxToRem(0.5),
        margin: 0,
        outline: 'none',
        padding: theme.spacing(1.5, 2.5),
        position: 'absolute',
        right: theme.spacing(2),
        transition: 'color 0.25s ease, opacity 0.25s ease',
        userSelect: 'none',
        whiteSpace: 'nowrap',
        '&:hover': {
            backgroundImage: "linear-gradient(135deg,\n          ".concat(theme.palette.primary.light, " 0%,\n          ").concat(theme.palette.primary.main, " 7.5%,\n          ").concat(theme.palette.purple[700], " 92%)"),
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisible,
            backgroundColor: theme.palette.primary.main,
            backgroundImage: 'none',
        },
        '&:disabled': {
            backgroundColor: theme.palette.black[100],
            backgroundImage: 'none',
            cursor: 'not-allowed',
            pointerEvents: 'none',
            color: theme.palette.black[200],
        },
    },
    fullWidth: {
        width: '100%',
    },
    icon: {
        marginRight: theme.spacing(1),
    },
    trailingIcon: {
        marginRight: 0,
        marginLeft: theme.spacing(1),
    },
    size0: {
        borderRadius: theme.pxToRem(21),
        minHeight: theme.pxToRem(42),
        '& $icon': {
            width: theme.pxToRem(18),
            height: theme.pxToRem(18),
        },
    },
    size1: {
        borderRadius: theme.pxToRem(24),
        minHeight: theme.pxToRem(48),
        '& $icon': {
            width: theme.pxToRem(20),
            height: theme.pxToRem(20),
        },
    },
    size2: {
        borderRadius: theme.pxToRem(28),
        fontSize: theme.typography.body2.fontSize,
        minHeight: theme.pxToRem(56),
        paddingLeft: theme.spacing(2.75),
        paddingRight: theme.spacing(2.75),
        '& $icon': {
            width: theme.pxToRem(24),
            height: theme.pxToRem(24),
        },
    },
    justifyLeft: {
        left: theme.spacing(2),
        right: 'auto',
    },
    justifyCenter: {
        left: 'auto',
        right: 'auto',
    },
    justifyRight: {},
    alignTop: {
        top: theme.spacing(2),
        bottom: 'auto',
    },
    alignCenter: {
        top: 'auto',
        bottom: 'auto',
    },
    alignBottom: {},
}); }, { name: ButtonFloatStylesKey });
export var ButtonFloat = React.forwardRef(function (_a, ref) {
    var _b, _c, _d;
    var _e = _a.align, align = _e === void 0 ? 'bottom' : _e, children = _a.children, className = _a.className, disabled = _a.disabled, fullWidth = _a.fullWidth, _f = _a.justify, justify = _f === void 0 ? 'right' : _f, Icon = _a.icon, _g = _a.size, size = _g === void 0 ? 2 : _g, TrailingIcon = _a.trailingIcon, rootProps = __rest(_a, ["align", "children", "className", "disabled", "fullWidth", "justify", "icon", "size", "trailingIcon"]);
    var classes = useStyles({});
    return (React.createElement("button", __assign({ ref: ref, type: "button", className: clsx(classes.root, (_b = {},
            _b[classes.size0] = size === 0,
            _b[classes.size1] = size === 1,
            _b[classes.size2] = size === 2,
            _b), (_c = {},
            _c[classes.justifyLeft] = justify === 'left',
            _c[classes.justifyCenter] = justify === 'center',
            _c[classes.justifyRight] = justify === 'right',
            _c), (_d = {},
            _d[classes.alignTop] = align === 'top',
            _d[classes.alignCenter] = align === 'center',
            _d[classes.alignBottom] = align === 'bottom',
            _d), fullWidth && classes.fullWidth, className), disabled: disabled, tabIndex: disabled ? -1 : 0 }, rootProps),
        !!Icon && React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon }),
        children,
        !!TrailingIcon && (React.createElement(TrailingIcon, { role: "img", "aria-hidden": true, className: clsx(classes.icon, classes.trailingIcon) }))));
});
//# sourceMappingURL=data:application/json;base64,