var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import 'focus-visible';
export var ButtonFloatStylesKey = 'ChromaButtonFloat';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundImage: "linear-gradient(135deg,\n        " + theme.palette.primary.light + " 0%,\n        " + theme.palette.primary.main + " 22%,\n        " + theme.palette.purple[700] + " 92%)",
        border: 0,
        boxShadow: theme.boxShadows.tooltip,
        bottom: theme.spacing(2),
        color: theme.palette.common.white,
        cursor: 'pointer',
        display: 'inline-flex',
        flex: '0 0 auto',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.typography.button.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        justifyContent: 'center',
        letterSpacing: theme.pxToRem(0.5),
        margin: 0,
        outline: 'none',
        padding: theme.spacing(1.5, 2.5),
        position: 'absolute',
        right: theme.spacing(2),
        transition: 'color 0.25s ease, opacity 0.25s ease',
        userSelect: 'none',
        whiteSpace: 'nowrap',
        '&:hover': {
            backgroundImage: "linear-gradient(135deg,\n          " + theme.palette.primary.light + " 0%,\n          " + theme.palette.primary.main + " 7.5%,\n          " + theme.palette.purple[700] + " 92%)",
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisible,
            backgroundColor: theme.palette.primary.main,
            backgroundImage: 'none',
        },
        '&:disabled': {
            backgroundColor: theme.palette.black[100],
            backgroundImage: 'none',
            cursor: 'not-allowed',
            pointerEvents: 'none',
            color: theme.palette.black[200],
        },
    },
    fullWidth: {
        width: '100%',
    },
    icon: {
        marginRight: theme.spacing(1),
    },
    trailingIcon: {
        marginRight: 0,
        marginLeft: theme.spacing(1),
    },
    size0: {
        borderRadius: theme.pxToRem(21),
        minHeight: theme.pxToRem(42),
        '& $icon': {
            width: theme.pxToRem(18),
            height: theme.pxToRem(18),
        },
    },
    size1: {
        borderRadius: theme.pxToRem(24),
        minHeight: theme.pxToRem(48),
        '& $icon': {
            width: theme.pxToRem(20),
            height: theme.pxToRem(20),
        },
    },
    size2: {
        borderRadius: theme.pxToRem(28),
        fontSize: theme.typography.body2.fontSize,
        minHeight: theme.pxToRem(56),
        paddingLeft: theme.spacing(2.75),
        paddingRight: theme.spacing(2.75),
        '& $icon': {
            width: theme.pxToRem(24),
            height: theme.pxToRem(24),
        },
    },
    justifyLeft: {
        left: theme.spacing(2),
        right: 'auto',
    },
    justifyCenter: {
        left: 'auto',
        right: 'auto',
    },
    justifyRight: {},
    alignTop: {
        top: theme.spacing(2),
        bottom: 'auto',
    },
    alignCenter: {
        top: 'auto',
        bottom: 'auto',
    },
    alignBottom: {},
}); }, { name: ButtonFloatStylesKey });
export var ButtonFloat = React.forwardRef(function (_a, ref) {
    var _b, _c, _d;
    var _e = _a.align, align = _e === void 0 ? 'bottom' : _e, children = _a.children, className = _a.className, disabled = _a.disabled, fullWidth = _a.fullWidth, _f = _a.justify, justify = _f === void 0 ? 'right' : _f, Icon = _a.icon, _g = _a.size, size = _g === void 0 ? 2 : _g, TrailingIcon = _a.trailingIcon, rootProps = __rest(_a, ["align", "children", "className", "disabled", "fullWidth", "justify", "icon", "size", "trailingIcon"]);
    var classes = useStyles({});
    return (React.createElement("button", __assign({ ref: ref, type: "button", className: clsx(classes.root, (_b = {},
            _b[classes.size0] = size === 0,
            _b[classes.size1] = size === 1,
            _b[classes.size2] = size === 2,
            _b), (_c = {},
            _c[classes.justifyLeft] = justify === 'left',
            _c[classes.justifyCenter] = justify === 'center',
            _c[classes.justifyRight] = justify === 'right',
            _c), (_d = {},
            _d[classes.alignTop] = align === 'top',
            _d[classes.alignCenter] = align === 'center',
            _d[classes.alignBottom] = align === 'bottom',
            _d), fullWidth && classes.fullWidth, className), disabled: disabled, tabIndex: disabled ? -1 : 0 }, rootProps),
        !!Icon && React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon }),
        children,
        !!TrailingIcon && (React.createElement(TrailingIcon, { role: "img", "aria-hidden": true, className: clsx(classes.icon, classes.trailingIcon) }))));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnV0dG9uRmxvYXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9CdXR0b25GbG9hdC9CdXR0b25GbG9hdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTFDLE9BQU8sZUFBZSxDQUFDO0FBRXZCLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUFHLG1CQUFtQixDQUFDO0FBRXhELE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRyxVQUFVLENBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNKLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLGVBQWUsRUFBRSxzQ0FDYixLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLHNCQUMzQixLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLHVCQUMxQixLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBTztRQUNwQyxNQUFNLEVBQUUsQ0FBQztRQUNULFNBQVMsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU87UUFDbkMsTUFBTSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1FBQ2pDLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxVQUFVO1FBQ2hCLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLFVBQVU7UUFDdkMsUUFBUSxFQUFFLEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFD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S0FBSyxDQUFDO1lBQzNCLEdBQUMsT0FBTyxDQUFDLEtBQUssSUFBRyxJQUFJLEtBQUssQ0FBQztZQUMzQixHQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUcsSUFBSSxLQUFLLENBQUM7O1lBRzNCLEdBQUMsT0FBTyxDQUFDLFdBQVcsSUFBRyxPQUFPLEtBQUssTUFBTTtZQUN6QyxHQUFDLE9BQU8sQ0FBQyxhQUFhLElBQUcsT0FBTyxLQUFLLFFBQVE7WUFDN0MsR0FBQyxPQUFPLENBQUMsWUFBWSxJQUFHLE9BQU8sS0FBSyxPQUFPOztZQUczQyxHQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUcsS0FBSyxLQUFLLEtBQUs7WUFDbkMsR0FBQyxPQUFPLENBQUMsV0FBVyxJQUFHLEtBQUssS0FBSyxRQUFRO1lBQ3pDLEdBQUMsT0FBTyxDQUFDLFdBQVcsSUFBRyxLQUFLLEtBQUssUUFBUTtpQkFFM0MsU0FBUyxJQUFJLE9BQU8sQ0FBQyxTQUFTLEVBQzlCLFNBQVMsQ0FDVixFQUNELFFBQVEsRUFBRSxRQUFRLEVBQ2xCLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQ3ZCLFNBQVM7UUFFWixDQUFDLENBQUMsSUFBSSxJQUFJLG9CQUFDLElBQUksSUFBQyxJQUFJLEVBQUMsS0FBSyx1QkFBYSxTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksR0FBSTtRQUNsRSxRQUFRO1FBQ1IsQ0FBQyxDQUFDLFlBQVksSUFBSSxDQUNqQixvQkFBQyxZQUFZLElBQ1gsSUFBSSxFQUFDLEtBQUssdUJBRVYsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUMsR0FDbkQsQ0FDSCxDQUNNLENBQ1YsQ0FBQztBQUNKLENBQUMsQ0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuaW1wb3J0ICdmb2N1cy12aXNpYmxlJztcblxuZXhwb3J0IGNvbnN0IEJ1dHRvbkZsb2F0U3R5bGVzS2V5ID0gJ0Nocm9tYUJ1dHRvbkZsb2F0JztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCgxMzVkZWcsXG4gICAgICAgICR7dGhlbWUucGFsZXR0ZS5wcmltYXJ5LmxpZ2h0fSAwJSxcbiAgICAgICAgJHt0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbn0gMjIlLFxuICAgICAgICAke3RoZW1lLnBhbGV0dGUucHVycGxlWzcwMF19IDkyJSlgLFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgYm94U2hhZG93OiB0aGVtZS5ib3hTaGFkb3dzLnRvb2x0aXAsXG4gICAgICBib3R0b206IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIGRpc3BsYXk6ICdpbmxpbmUtZmxleCcsXG4gICAgICBmbGV4OiAnMCAwIGF1dG8nLFxuICAgICAgZm9udEZhbWlseTogdGhlbWUudHlwb2dyYXBoeS5mb250RmFtaWx5LFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuYnV0dG9uLmZvbnRTaXplLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0Qm9sZCxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIGxldHRlclNwYWNpbmc6IHRoZW1lLnB4VG9SZW0oMC41KSxcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMS41LCAyLjUpLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICByaWdodDogdGhlbWUuc3BhY2luZygyKSxcbiAgICAgIHRyYW5zaXRpb246ICdjb2xvciAwLjI1cyBlYXNlLCBvcGFjaXR5IDAuMjVzIGVhc2UnLFxuICAgICAgdXNlclNlbGVjdDogJ25vbmUnLFxuICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgYmFja2dyb3VuZEltYWdlOiBgbGluZWFyLWdyYWRpZW50KDEzNWRlZyxcbiAgICAgICAgICAke3RoZW1lLnBhbGV0dGUucHJpbWFyeS5saWdodH0gMCUsXG4gICAgICAgICAgJHt0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbn0gNy41JSxcbiAgICAgICAgICAke3RoZW1lLnBhbGV0dGUucHVycGxlWzcwMF19IDkyJSlgLFxuICAgICAgfSxcbiAgICAgICcmOmZvY3VzJzoge1xuICAgICAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgICB9LFxuICAgICAgJyY6Zm9jdXMuZm9jdXMtdmlzaWJsZSc6IHtcbiAgICAgICAgYm94U2hhZG93OiB0aGVtZS5ib3hTaGFkb3dzLmZvY3VzVmlzaWJsZSxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgICAgYmFja2dyb3VuZEltYWdlOiAnbm9uZScsXG4gICAgICB9LFxuICAgICAgJyY6ZGlzYWJsZWQnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5ibGFja1sxMDBdLFxuICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6ICdub25lJyxcbiAgICAgICAgY3Vyc29yOiAnbm90LWFsbG93ZWQnLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmJsYWNrWzIwMF0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgZnVsbFdpZHRoOiB7XG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgIH0sXG4gICAgaWNvbjoge1xuICAgICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgfSxcbiAgICB0cmFpbGluZ0ljb246IHtcbiAgICAgIG1hcmdpblJpZ2h0OiAwLFxuICAgICAgbWFyZ2luTGVmdDogdGhlbWUuc3BhY2luZygxKSxcbiAgICB9LFxuICAgIHNpemUwOiB7XG4gICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnB4VG9SZW0oMjEpLFxuICAgICAgbWluSGVpZ2h0OiB0aGVtZS5weFRvUmVtKDQyKSxcbiAgICAgICcmICRpY29uJzoge1xuICAgICAgICB3aWR0aDogdGhlbWUucHhUb1JlbSgxOCksXG4gICAgICAgIGhlaWdodDogdGhlbWUucHhUb1JlbSgxOCksXG4gICAgICB9LFxuICAgIH0sXG4gICAgc2l6ZTE6IHtcbiAgICAgIGJvcmRlclJhZGl1czogdGhlbWUucHhUb1JlbSgyNCksXG4gICAgICBtaW5IZWlnaHQ6IHRoZW1lLnB4VG9SZW0oNDgpLFxuICAgICAgJyYgJGljb24nOiB7XG4gICAgICAgIHdpZHRoOiB0aGVtZS5weFRvUmVtKDIwKSxcbiAgICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDIwKSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBzaXplMjoge1xuICAgICAgYm9yZGVyUmFkaXVzOiB0aGVtZS5weFRvUmVtKDI4KSxcbiAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LmJvZHkyLmZvbnRTaXplLFxuICAgICAgbWluSGVpZ2h0OiB0aGVtZS5weFRvUmVtKDU2KSxcbiAgICAgIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nKDIuNzUpLFxuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5zcGFjaW5nKDIuNzUpLFxuICAgICAgJyYgJGljb24nOiB7XG4gICAgICAgIHdpZHRoOiB0aGVtZS5weFRvUmVtKDI0KSxcbiAgICAgICAgaGVpZ2h0OiB0aGVtZS5weFRvUmVtKDI0KSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBqdXN0aWZ5TGVmdDoge1xuICAgICAgbGVmdDogdGhlbWUuc3BhY2luZygyKSxcbiAgICAgIHJpZ2h0OiAnYXV0bycsXG4gICAgfSxcbiAgICBqdXN0aWZ5Q2VudGVyOiB7XG4gICAgICBsZWZ0OiAnYXV0bycsXG4gICAgICByaWdodDogJ2F1dG8nLFxuICAgIH0sXG4gICAganVzdGlmeVJpZ2h0OiB7fSxcbiAgICBhbGlnblRvcDoge1xuICAgICAgdG9wOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgICAgYm90dG9tOiAnYXV0bycsXG4gICAgfSxcbiAgICBhbGlnbkNlbnRlcjoge1xuICAgICAgdG9wOiAnYXV0bycsXG4gICAgICBib3R0b206ICdhdXRvJyxcbiAgICB9LFxuICAgIGFsaWduQm90dG9tOiB7fSxcbiAgfSksXG4gIHsgbmFtZTogQnV0dG9uRmxvYXRTdHlsZXNLZXkgfVxuKTtcblxuZXhwb3J0IHR5cGUgQnV0dG9uRmxvYXRDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBCdXR0b25GbG9hdFByb3BzXG4gIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCdidXR0b24nPiB7XG4gIGFsaWduPzogJ3RvcCcgfCAnY2VudGVyJyB8ICdib3R0b20nO1xuICBpY29uPzogUmVhY3QuQ29tcG9uZW50VHlwZTxSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50Pj47XG4gIGZ1bGxXaWR0aD86IGJvb2xlYW47XG4gIGp1c3RpZnk/OiAnbGVmdCcgfCAnY2VudGVyJyB8ICdyaWdodCc7XG4gIHNpemU/OiAwIHwgMSB8IDI7XG4gIHRyYWlsaW5nSWNvbj86IFJlYWN0LkNvbXBvbmVudFR5cGU8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+O1xufVxuXG5leHBvcnQgY29uc3QgQnV0dG9uRmxvYXQgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MQnV0dG9uRWxlbWVudCxcbiAgQnV0dG9uRmxvYXRQcm9wc1xuPihcbiAgKFxuICAgIHtcbiAgICAgIGFsaWduID0gJ2JvdHRvbScsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgZnVsbFdpZHRoLFxuICAgICAganVzdGlmeSA9ICdyaWdodCcsXG4gICAgICBpY29uOiBJY29uLFxuICAgICAgc2l6ZSA9IDIsXG4gICAgICB0cmFpbGluZ0ljb246IFRyYWlsaW5nSWNvbixcbiAgICAgIC4uLnJvb3RQcm9wc1xuICAgIH0sXG4gICAgcmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICAgIHJldHVybiAoXG4gICAgICA8YnV0dG9uXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgIGNsYXNzZXMucm9vdCxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5zaXplMF06IHNpemUgPT09IDAsXG4gICAgICAgICAgICBbY2xhc3Nlcy5zaXplMV06IHNpemUgPT09IDEsXG4gICAgICAgICAgICBbY2xhc3Nlcy5zaXplMl06IHNpemUgPT09IDIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5qdXN0aWZ5TGVmdF06IGp1c3RpZnkgPT09ICdsZWZ0JyxcbiAgICAgICAgICAgIFtjbGFzc2VzLmp1c3RpZnlDZW50ZXJdOiBqdXN0aWZ5ID09PSAnY2VudGVyJyxcbiAgICAgICAgICAgIFtjbGFzc2VzLmp1c3RpZnlSaWdodF06IGp1c3RpZnkgPT09ICdyaWdodCcsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5hbGlnblRvcF06IGFsaWduID09PSAndG9wJyxcbiAgICAgICAgICAgIFtjbGFzc2VzLmFsaWduQ2VudGVyXTogYWxpZ24gPT09ICdjZW50ZXInLFxuICAgICAgICAgICAgW2NsYXNzZXMuYWxpZ25Cb3R0b21dOiBhbGlnbiA9PT0gJ2JvdHRvbScsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmdWxsV2lkdGggJiYgY2xhc3Nlcy5mdWxsV2lkdGgsXG4gICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICl9XG4gICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgdGFiSW5kZXg9e2Rpc2FibGVkID8gLTEgOiAwfVxuICAgICAgICB7Li4ucm9vdFByb3BzfVxuICAgICAgPlxuICAgICAgICB7ISFJY29uICYmIDxJY29uIHJvbGU9XCJpbWdcIiBhcmlhLWhpZGRlbiBjbGFzc05hbWU9e2NsYXNzZXMuaWNvbn0gLz59XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgeyEhVHJhaWxpbmdJY29uICYmIChcbiAgICAgICAgICA8VHJhaWxpbmdJY29uXG4gICAgICAgICAgICByb2xlPVwiaW1nXCJcbiAgICAgICAgICAgIGFyaWEtaGlkZGVuXG4gICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5pY29uLCBjbGFzc2VzLnRyYWlsaW5nSWNvbil9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgIDwvYnV0dG9uPlxuICAgICk7XG4gIH1cbik7XG4iXX0=