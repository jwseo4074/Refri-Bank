var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { IconButton } from '../IconButton';
import { makeStyles } from '../../styles';
import { Text } from '../Text';
import { X } from '@lifeomic/chromicons';
import * as React from 'react';
import clsx from 'clsx';
export var HeaderStylesKey = 'ChromaSlideOverHeader';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        display: 'flex',
        flexDirection: 'row',
        justifyContent: 'space-between',
        backgroundColor: theme.palette.black[50],
        padding: theme.spacing(2),
    },
}); }, { name: HeaderStylesKey });
export var Header = function (_a) {
    var children = _a.children, additionalClasses = _a.classes, className = _a.className, onClose = _a.onClose, title = _a.title, rootProps = __rest(_a, ["children", "classes", "className", "onClose", "title"]);
    var classes = useStyles({});
    return (React.createElement("div", __assign({ className: clsx(classes.root, additionalClasses === null || additionalClasses === void 0 ? void 0 : additionalClasses.root, className) }, rootProps),
        children,
        title && (React.createElement(Text, { className: clsx(additionalClasses === null || additionalClasses === void 0 ? void 0 : additionalClasses.text), size: "body", weight: "bold" }, title)),
        React.createElement(IconButton, { className: additionalClasses === null || additionalClasses === void 0 ? void 0 : additionalClasses.button, "aria-label": "Close panel", icon: X, onClick: onClose, size: 0 })));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVhZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvU2xpZGVPdmVyL0hlYWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMxQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxDQUFDLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6QyxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFFeEIsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLHVCQUF1QixDQUFDO0FBRXZELE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRyxVQUFVLENBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNKLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLE9BQU8sRUFBRSxNQUFNO1FBQ2YsYUFBYSxFQUFFLEtBQUs7UUFDcEIsY0FBYyxFQUFFLGVBQWU7UUFDL0IsZUFBZSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUN4QyxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDMUI7Q0FDRixDQUFDLEVBVFMsQ0FTVCxFQUNGLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxDQUMxQixDQUFDO0FBZ0JGLE1BQU0sQ0FBQyxJQUFNLE1BQU0sR0FBMEIsVUFBQyxFQU83QztJQU5DLElBQUEsUUFBUSxjQUFBLEVBQ0MsaUJBQWlCLGFBQUEsRUFDMUIsU0FBUyxlQUFBLEVBQ1QsT0FBTyxhQUFBLEVBQ1AsS0FBSyxXQUFBLEVBQ0YsU0FBUyxjQU5nQyx3REFPN0MsQ0FEYTtJQUVaLElBQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQ0wsc0NBQ0UsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLGlCQUFpQixhQUFqQixpQkFBaUIsdUJBQWpCLGlCQUFpQixDQUFFLElBQUksRUFBRSxTQUFTLENBQUMsSUFDN0QsU0FBUztRQUVaLFFBQVE7UUFDUixLQUFLLElBQUksQ0FDUixvQkFBQyxJQUFJLElBQ0gsU0FBUyxFQUFFLElBQUksQ0FBQyxpQkFBaUIsYUFBakIsaUJBQWlCLHVCQUFqQixpQkFBaUIsQ0FBRSxJQUFJLENBQUMsRUFDeEMsSUFBSSxFQUFDLE1BQU0sRUFDWCxNQUFNLEVBQUMsTUFBTSxJQUVaLEtBQUssQ0FDRCxDQUNSO1FBQ0Qsb0JBQUMsVUFBVSxJQUNULFNBQVMsRUFBRSxpQkFBaUIsYUFBakIsaUJBQWlCLHVCQUFqQixpQkFBaUIsQ0FBRSxNQUFNLGdCQUN6QixhQUFhLEVBQ3hCLElBQUksRUFBRSxDQUFDLEVBQ1AsT0FBTyxFQUFFLE9BQU8sRUFDaEIsSUFBSSxFQUFFLENBQUMsR0FDUCxDQUNFLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuaW1wb3J0IHsgSWNvbkJ1dHRvbiB9IGZyb20gJy4uL0ljb25CdXR0b24nO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcyc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vVGV4dCc7XG5pbXBvcnQgeyBYIH0gZnJvbSAnQGxpZmVvbWljL2Nocm9taWNvbnMnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5cbmV4cG9ydCBjb25zdCBIZWFkZXJTdHlsZXNLZXkgPSAnQ2hyb21hU2xpZGVPdmVySGVhZGVyJztcblxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoXG4gICh0aGVtZSkgPT4gKHtcbiAgICByb290OiB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5ibGFja1s1MF0sXG4gICAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IEhlYWRlclN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBIZWFkZXJDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuZXhwb3J0IGludGVyZmFjZSBIZWFkZXJQcm9wcyB7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIG9uQ2xvc2U6ICgpID0+IGFueTtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIGNsYXNzZXM/OiB7XG4gICAgcm9vdD86IHN0cmluZztcbiAgICB0ZXh0Pzogc3RyaW5nO1xuICAgIGJ1dHRvbj86IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IEhlYWRlcjogUmVhY3QuRkM8SGVhZGVyUHJvcHM+ID0gKHtcbiAgY2hpbGRyZW4sXG4gIGNsYXNzZXM6IGFkZGl0aW9uYWxDbGFzc2VzLFxuICBjbGFzc05hbWUsXG4gIG9uQ2xvc2UsXG4gIHRpdGxlLFxuICAuLi5yb290UHJvcHNcbn0pID0+IHtcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7fSk7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjbHN4KGNsYXNzZXMucm9vdCwgYWRkaXRpb25hbENsYXNzZXM/LnJvb3QsIGNsYXNzTmFtZSl9XG4gICAgICB7Li4ucm9vdFByb3BzfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICAgIHt0aXRsZSAmJiAoXG4gICAgICAgIDxUZXh0XG4gICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KGFkZGl0aW9uYWxDbGFzc2VzPy50ZXh0KX1cbiAgICAgICAgICBzaXplPVwiYm9keVwiXG4gICAgICAgICAgd2VpZ2h0PVwiYm9sZFwiXG4gICAgICAgID5cbiAgICAgICAgICB7dGl0bGV9XG4gICAgICAgIDwvVGV4dD5cbiAgICAgICl9XG4gICAgICA8SWNvbkJ1dHRvblxuICAgICAgICBjbGFzc05hbWU9e2FkZGl0aW9uYWxDbGFzc2VzPy5idXR0b259XG4gICAgICAgIGFyaWEtbGFiZWw9XCJDbG9zZSBwYW5lbFwiXG4gICAgICAgIGljb249e1h9XG4gICAgICAgIG9uQ2xpY2s9e29uQ2xvc2V9XG4gICAgICAgIHNpemU9ezB9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdfQ==