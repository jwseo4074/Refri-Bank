var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { makeStyles } from '../../styles';
import * as React from 'react';
import clsx from 'clsx';
export var BodyStylesKey = 'ChromaSlideOverBody';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        display: 'flex',
        padding: theme.spacing(2),
        width: '100%',
        height: '100%',
    },
}); }, { name: BodyStylesKey });
export var Body = function (_a) {
    var as = _a.as, className = _a.className, children = _a.children, rootProps = __rest(_a, ["as", "className", "children"]);
    var classes = useStyles({});
    var AsComponent = as || 'div';
    return (React.createElement(AsComponent, __assign({ className: clsx(classes.root, className) }, rootProps), children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm9keS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1NsaWRlT3Zlci9Cb2R5LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMxQyxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFFeEIsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUFHLHFCQUFxQixDQUFDO0FBRW5ELE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRyxVQUFVLENBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLEtBQUssRUFBRSxNQUFNO1FBQ2IsTUFBTSxFQUFFLE1BQU07S0FDZjtDQUNGLENBQUMsRUFQUyxDQU9ULEVBQ0YsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLENBQ3hCLENBQUM7QUFTRixNQUFNLENBQUMsSUFBTSxJQUFJLEdBQXdCLFVBQUMsRUFLekM7SUFKQyxJQUFBLFVBQUUsRUFDRix3QkFBUyxFQUNULHNCQUFRLEVBQ1IsdURBQVk7SUFFWixJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFOUIsSUFBTSxXQUFXLEdBQUcsRUFBRSxJQUFJLEtBQUssQ0FBQztJQUVoQyxPQUFPLENBQ0wsb0JBQUMsV0FBVyxhQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsSUFBTSxTQUFTLEdBQ2pFLFFBQVEsQ0FDRyxDQUNmLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHZXRDbGFzc2VzIH0gZnJvbSAnLi4vLi4vdHlwZVV0aWxzJztcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5cbmV4cG9ydCBjb25zdCBCb2R5U3R5bGVzS2V5ID0gJ0Nocm9tYVNsaWRlT3ZlckJvZHknO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgfSxcbiAgfSksXG4gIHsgbmFtZTogQm9keVN0eWxlc0tleSB9XG4pO1xuXG5leHBvcnQgdHlwZSBCb2R5Q2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgQm9keVByb3BzIHtcbiAgYXM/OiBSZWFjdC5FbGVtZW50VHlwZTxhbnk+O1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIFtrZXk6IHN0cmluZ106IGFueTtcbn1cbmV4cG9ydCBjb25zdCBCb2R5OiBSZWFjdC5GQzxCb2R5UHJvcHM+ID0gKHtcbiAgYXMsXG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG4gIC4uLnJvb3RQcm9wc1xufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcblxuICBjb25zdCBBc0NvbXBvbmVudCA9IGFzIHx8ICdkaXYnO1xuXG4gIHJldHVybiAoXG4gICAgPEFzQ29tcG9uZW50IGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSl9IHsuLi5yb290UHJvcHN9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQXNDb21wb25lbnQ+XG4gICk7XG59O1xuIl19