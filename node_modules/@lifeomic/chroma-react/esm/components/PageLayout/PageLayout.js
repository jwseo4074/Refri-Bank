var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import PageLayoutDefaultHero from '../../assets/PageLayoutDefaultHero.svg';
import { makeStyles } from '../../styles';
import { PageHeader } from '../PageHeader';
export var PageLayoutStylesKey = 'ChromaPageLayout';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        display: 'flex',
        flexDirection: 'column',
        flex: 1,
        minHeight: '100%',
        marginRight: 'auto',
        marginLeft: 'auto',
        paddingLeft: theme.spacing(4),
        paddingRight: theme.spacing(4),
    },
    maxWidth: {
        maxWidth: theme.pxToRem(1344),
    },
    backgroundCover: {
        position: 'relative',
        // Negative margin so that it can stretch
        // outside of the default padding specified by `root`.
        marginLeft: -theme.spacing(4),
        marginRight: -theme.spacing(4),
        background: "url(".concat(PageLayoutDefaultHero, ") ").concat(theme.palette.primary.main),
        backgroundSize: 'cover',
        marginBottom: theme.spacing(2),
    },
    headerBackgroundPadding: {
        paddingTop: theme.spacing(3),
        paddingLeft: theme.spacing(4),
        paddingRight: theme.spacing(4),
        paddingBottom: theme.spacing(3),
    },
    disclaimer: {
        paddingBottom: theme.spacing(2),
    },
    tabs: {
        padding: theme.spacing(0),
    },
    sidebar: {
        width: theme.pxToRem(192),
        marginRight: theme.spacing(3),
        flexGrow: 0,
        flexShrink: 0,
    },
    layoutContainer: {
        display: 'flex',
        height: '100%',
        marginBottom: theme.spacing(4),
    },
    content: {
        flex: 1,
        width: '100%',
        // Fix for firefox so the content doesn't overflow
        maxWidth: '100%',
    },
}); }, { name: PageLayoutStylesKey });
var ConditionalWrapper = function (_a) {
    var condition = _a.condition, wrapper = _a.wrapper, children = _a.children;
    return (condition ? wrapper(children) : children);
};
export var PageLayout = React.forwardRef(function (_a, ref) {
    var backgroundImage = _a.backgroundImage, _b = _a.headerAlign, headerAlign = _b === void 0 ? 'center' : _b, headerCenter = _a.headerCenter, headerCenterClassName = _a.headerCenterClassName, headerActionsClassName = _a.headerActionsClassName, children = _a.children, additionalClasses = _a.classes, className = _a.className, disclaimer = _a.disclaimer, headerActions = _a.headerActions, sidebar = _a.sidebar, title = _a.title, tabs = _a.tabs, _c = _a.maxWidth, maxWidth = _c === void 0 ? true : _c, _d = _a.applyBackgroundCover, applyBackgroundCover = _d === void 0 ? false : _d, left = _a.left, leftClassName = _a.leftClassName, rootProps = __rest(_a, ["backgroundImage", "headerAlign", "headerCenter", "headerCenterClassName", "headerActionsClassName", "children", "classes", "className", "disclaimer", "headerActions", "sidebar", "title", "tabs", "maxWidth", "applyBackgroundCover", "left", "leftClassName"]);
    var classes = useStyles({ classes: additionalClasses });
    return (React.createElement("div", __assign({ ref: ref, className: clsx(classes.root, maxWidth && !applyBackgroundCover && classes.maxWidth, className) }, rootProps),
        React.createElement(ConditionalWrapper, { condition: applyBackgroundCover, wrapper: function (children) { return (React.createElement("div", { className: classes.backgroundCover, style: backgroundImage
                    ? {
                        backgroundImage: "url(".concat(backgroundImage, ")"),
                    }
                    : undefined }, children)); } },
            React.createElement(PageHeader, { align: headerAlign, className: applyBackgroundCover ? classes.headerBackgroundPadding : '', title: title, center: headerCenter, centerClassName: headerCenterClassName, margin: "none", actions: headerActions, actionsClassName: headerActionsClassName, color: applyBackgroundCover ? 'inverse' : 'default', left: left, leftClassName: leftClassName })),
        !!disclaimer && React.createElement("div", { className: classes.disclaimer }, disclaimer),
        !!tabs && React.createElement("div", { className: classes.tabs }, tabs),
        React.createElement("div", { className: classes.layoutContainer },
            !!sidebar && React.createElement("div", { className: classes.sidebar }, sidebar),
            React.createElement("div", { className: classes.content }, children))));
});
//# sourceMappingURL=data:application/json;base64,