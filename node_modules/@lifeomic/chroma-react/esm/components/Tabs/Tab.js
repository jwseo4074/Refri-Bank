var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { Tab as BaseTab } from 'reakit/Tab';
import { makeStyles } from '../../styles';
import { TabsContext } from './TabsContext';
export var TabStylesKey = 'ChromaTab';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'center',
        backgroundColor: 'transparent',
        border: 'none',
        cursor: 'pointer',
        display: 'inline-flex',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.typography.subtitle1.fontSize,
        fontWeight: theme.typography.fontWeightRegular,
        justifyContent: 'center',
        letterSpacing: '0.03125em',
        margin: 0,
        minHeight: theme.pxToRem(48),
        outline: 'none',
        overflow: 'hidden',
        paddingBottom: theme.spacing(0.75),
        paddingLeft: theme.spacing(3),
        paddingRight: theme.spacing(3),
        paddingTop: theme.spacing(0.75),
        transition: 'border-bottom 0.25s ease, color 0.5s ease',
        userSelect: 'none',
        verticalAlign: 'middle',
        '&:hover': {
            color: theme.palette.black[500],
        },
        '&:focus': {
            outline: 'none',
        },
        '&[aria-selected="true"]': {
            color: theme.palette.black[900],
            borderBottom: "4px solid ".concat(theme.palette.primary.main),
        },
        '&[aria-disabled="true"]': {
            color: theme.palette.black[400],
            cursor: 'initial',
            opacity: 0.4,
        },
    },
    pill: {
        borderBottom: 'none',
        borderRadius: theme.pxToRem(20),
        minHeight: theme.pxToRem(29),
        padding: theme.spacing(0.75, 2),
        position: 'relative',
        '&:hover': {
            color: theme.palette.text.primary,
        },
        '& span': {
            zIndex: 1,
        },
        '&::after': {
            backgroundColor: theme.palette.primary.main,
            borderRadius: theme.pxToRem(16),
            content: "''",
            display: 'block',
            height: '100%',
            left: 0,
            opacity: 0,
            position: 'absolute',
            top: 0,
            transform: 'scale3d(0.3, 0.3, 0.3)',
            transition: '0.15s ease-in',
            width: '100%',
            zIndex: 0,
        },
        '&[aria-selected="true"]': {
            borderBottom: 'none',
            color: theme.palette.common.white,
            '&::after': {
                opacity: 1,
                transform: 'scale3d(1, 1, 1)',
                transition: '0.2s cubic-bezier(0.34, 1.56, 0.64, 1)',
                transitionProperty: 'transform, opacity',
            },
        },
        '&:focus': {
            outline: 'none',
        },
        '&[aria-disabled="true"]': {
            background: 'none',
            color: theme.palette.text.disabled,
            cursor: 'initial',
        },
    },
    fullWidth: {
        flex: 1,
        minWidth: 0,
        '&$pill span': {
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
        },
    },
}); }, { name: TabStylesKey });
export var Tab = function (_a) {
    var _b;
    var className = _a.className, disabled = _a.disabled, onClick = _a.onClick, stopId = _a.stopId, children = _a.children, rootProps = __rest(_a, ["className", "disabled", "onClick", "stopId", "children"]);
    var classes = useStyles({});
    var _c = React.useContext(TabsContext), variant = _c.variant, fullWidth = _c.fullWidth, tabState = _c.tabState;
    return (React.createElement(BaseTab, __assign({}, tabState, { className: clsx(classes.root, className, (_b = {},
            _b[classes.pill] = variant === 'pill',
            _b[classes.fullWidth] = fullWidth,
            _b)), disabled: disabled, onClick: onClick, id: stopId, type: "button" }, rootProps), variant === 'pill' ? React.createElement("span", null, children) : children));
};
//# sourceMappingURL=data:application/json;base64,