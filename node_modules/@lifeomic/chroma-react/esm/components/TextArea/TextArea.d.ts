import * as React from 'react';
import { GetClasses } from '../../typeUtils';
import { BaseFormElement } from '../_private/forms';
export declare const TextAreaStylesKey = "ChromaTextArea";
export declare const useStyles: (props: {}) => Record<"root" | "textarea" | "label" | "fullWidth" | "labelInverse" | "srOnly" | "labelSecondary" | "labelIcon" | "labelIconInverse" | "tooltipContainer" | "message" | "textareaInverse" | "textareaError", string>;
export declare type TextAreaClasses = GetClasses<typeof useStyles>;
export interface TextAreaProps extends React.ComponentPropsWithoutRef<'textarea'> {
    color?: BaseFormElement['color'];
    hasError?: BaseFormElement['hasError'];
    errorMessage?: BaseFormElement['errorMessage'];
    helpMessage?: BaseFormElement['helpMessage'];
    label?: BaseFormElement['label'];
    fullWidth?: boolean;
    secondaryLabel?: string;
    icon?: React.ComponentType<React.SVGProps<SVGSVGElement>>;
    tooltipMessage?: string;
    textAreaClassName?: string;
}
export declare const TextArea: React.ForwardRefExoticComponent<TextAreaProps & React.RefAttributes<HTMLTextAreaElement>>;
