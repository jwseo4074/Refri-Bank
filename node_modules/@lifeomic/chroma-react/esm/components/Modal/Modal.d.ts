import { GetClasses } from '../../typeUtils';
import { ModalActionsProps } from './ModalActions';
import { Variants } from 'framer-motion';
import * as React from 'react';
export declare const ModalStylesKey = "ChromaModal";
export declare const OVERLAY_TEST_ID = "chroma-overlay-testid";
export declare const useStyles: (props: {}) => import("@material-ui/styles").ClassNameMap<"content" | "overlay" | "contentFullWidth" | "contentSize0" | "contentSize1" | "contentFullScreen" | "verticalPadding" | "modalHeader" | "modalHeaderFullScreen" | "modalChildrenContainer" | "modalChildrenContainerFullScreen" | "modalActions">;
export declare type ModalClasses = GetClasses<typeof useStyles>;
export interface ModalProps extends Pick<React.ComponentPropsWithoutRef<'div'>, 'className' | 'onClick' | 'onMouseDown' | 'onKeyDown'> {
    actions?: React.ReactNode;
    allowPinchZoom?: boolean;
    children?: React.ReactNode;
    customHeader?: React.ReactNode;
    contentClassName?: string;
    overlayClassName?: string;
    fullWidth?: boolean;
    isFormContent?: boolean;
    isFullScreen?: boolean;
    isOpen?: boolean;
    justifyActions?: ModalActionsProps['justify'];
    onDismiss?: (props: any) => void;
    disableDismissOnClickOutside?: boolean;
    onFormSubmit?: (data: any) => void;
    poses?: Variants;
    size?: 0 | 1;
    title?: string;
}
export declare const Modal: React.ForwardRefExoticComponent<ModalProps & React.RefAttributes<HTMLDivElement>>;
