var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import clsx from 'clsx';
import * as React from 'react';
import { makeStyles } from '../../styles';
import 'focus-visible';
export var ButtonStylesKey = 'ChromaButton';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        background: theme.palette.primary.main,
        border: "".concat(theme.pxToRem(1), " solid transparent"),
        borderRadius: theme.pxToRem(4),
        color: theme.palette.common.white,
        cursor: 'pointer',
        display: 'inline-block',
        whiteSpace: 'nowrap',
        fontFamily: theme.typography.fontFamily,
        fontSize: theme.typography.button.fontSize,
        fontWeight: theme.typography.fontWeightBold,
        letterSpacing: theme.pxToRem(0.5),
        lineHeight: theme.pxToRem(19),
        margin: 0,
        maxHeight: theme.pxToRem(35),
        minWidth: theme.pxToRem(64),
        outline: 'none',
        overflow: 'hidden',
        paddingBottom: theme.pxToRem(7),
        paddingLeft: theme.pxToRem(11),
        paddingRight: theme.pxToRem(11),
        paddingTop: theme.pxToRem(7),
        position: 'relative',
        textOverflow: 'ellipsis',
        transition: 'background-color 0.25s ease, color 0.25s ease, opacity 0.25s ease',
        userSelect: 'none',
        verticalAlign: 'middle',
        '&:hover': {
            backgroundColor: theme.palette.primary[900],
            outline: 'none',
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisible,
        },
        '&:disabled': {
            cursor: 'default',
            pointerEvents: 'none',
            backgroundColor: theme.palette.primary.main,
            opacity: 0.44,
        },
        '&::-moz-focus-inner': {
            border: 'none',
        },
    },
    containedInverse: {
        backgroundColor: theme.palette.common.white,
        color: theme.palette.primary.main,
        '&:hover': {
            backgroundColor: theme.palette.common.white,
            color: theme.palette.primary.main,
            opacity: 0.85,
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
        '&:disabled, &[disabled]': {
            backgroundColor: 'rgba(255, 255, 255, 0.45)',
            opacity: 1,
            color: theme.palette.text.secondary,
        },
    },
    outlined: {
        backgroundColor: 'transparent',
        borderColor: theme.palette.primary.main,
        color: theme.palette.primary.main,
        transition: 'border 0.25s ease, color 0.25s ease',
        '&:hover': {
            backgroundColor: 'transparent',
            borderColor: theme.palette.primary[900],
            color: theme.palette.primary[900],
        },
        '&:disabled': {
            backgroundColor: 'transparent',
            borderColor: theme.palette.primary.main,
            color: theme.palette.primary.main,
            opacity: 0.44,
        },
    },
    outlinedInverse: {
        borderColor: theme.palette.common.white,
        color: theme.palette.common.white,
        '&:hover': {
            color: theme.palette.common.white,
            opacity: 0.85,
            borderColor: 'rgba(255, 255, 255, 0.85)',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
        '&:disabled, &[disabled]': {
            color: 'rgba(255, 255, 255, 0.45)',
            opacity: 1,
            borderColor: 'rgba(255, 255, 255, 0.45)',
        },
    },
    text: {
        backgroundColor: 'transparent',
        color: theme.palette.primary.main,
        transition: 'color 0.25s ease',
        '&:hover': {
            backgroundColor: 'transparent',
            color: theme.palette.primary[900],
        },
        '&:disabled': {
            backgroundColor: 'transparent',
            color: theme.palette.primary.main,
            opacity: 0.44,
        },
    },
    textInverse: {
        color: theme.palette.common.white,
        '&:hover': {
            color: theme.palette.common.white,
            opacity: 0.85,
        },
        '&:focus': {
            outline: 'none',
        },
        '&:focus.focus-visible': {
            boxShadow: theme.boxShadows.focusVisibleInverse,
        },
        '&:disabled, &[disabled]': {
            color: theme.palette.common.white,
            opacity: 0.44,
        },
    },
    containedNegative: {
        backgroundColor: theme.palette.negative.main,
        color: theme.palette.common.white,
        '&:hover': {
            backgroundColor: theme.palette.negative.dark,
        },
        '&:disabled, &[disabled]': {
            backgroundColor: theme.palette.negative.main,
            color: theme.palette.common.white,
        },
    },
    containedPositive: {
        backgroundColor: theme.palette.positive.main,
        color: theme.palette.common.white,
        '&:hover': {
            backgroundColor: theme.palette.positive.dark,
        },
        '&:disabled, &[disabled]': {
            backgroundColor: theme.palette.positive.main,
            color: theme.palette.common.white,
        },
    },
    outlinedNegative: {
        borderColor: theme.palette.negative.main,
        color: theme.palette.negative.main,
        '&:hover': {
            borderColor: theme.palette.negative.dark,
            color: theme.palette.negative.dark,
        },
        '&:disabled, &[disabled]': {
            borderColor: theme.palette.negative.main,
            color: theme.palette.negative.main,
        },
    },
    outlinedPositive: {
        borderColor: theme.palette.positive.main,
        color: theme.palette.positive.main,
        '&:hover': {
            borderColor: theme.palette.positive.dark,
            color: theme.palette.positive.dark,
        },
        '&:disabled, &[disabled]': {
            borderColor: theme.palette.positive.main,
            color: theme.palette.positive.main,
        },
    },
    textNegative: {
        color: theme.palette.negative.main,
        '&:hover': {
            color: theme.palette.negative.dark,
        },
        '&:disabled': {
            color: theme.palette.negative.main,
        },
    },
    textPositive: {
        color: theme.palette.positive.main,
        '&:hover': {
            color: theme.palette.positive.dark,
        },
        '&:disabled': {
            color: theme.palette.positive.main,
        },
    },
    fullWidth: {
        width: '100%',
    },
    icon: {
        height: theme.spacing(2),
        marginRight: theme.spacing(1),
        position: 'relative',
        top: theme.pxToRem(-1),
        verticalAlign: 'middle',
        width: theme.spacing(2),
    },
    trailingIcon: {
        marginRight: 0,
        marginLeft: theme.spacing(1),
    },
}); }, { name: ButtonStylesKey });
export var Button = React.forwardRef(function (_a, ref) {
    var _b, _c;
    var className = _a.className, _d = _a.color, color = _d === void 0 ? 'default' : _d, children = _a.children, disabled = _a.disabled, fullWidth = _a.fullWidth, Icon = _a.icon, TrailingIcon = _a.trailingIcon, _e = _a.variant, variant = _e === void 0 ? 'contained' : _e, rootProps = __rest(_a, ["className", "color", "children", "disabled", "fullWidth", "icon", "trailingIcon", "variant"]);
    var classes = useStyles({});
    return (React.createElement("button", __assign({ ref: ref, className: clsx(classes.root, (_b = {},
            _b[classes.outlined] = variant === 'outlined',
            _b[classes.text] = variant === 'text',
            _b), (_c = {},
            _c[classes.containedInverse] = variant === 'contained' && color === 'inverse',
            _c[classes.outlinedInverse] = variant === 'outlined' && color === 'inverse',
            _c[classes.textInverse] = variant === 'text' && color === 'inverse',
            _c[classes.containedNegative] = variant === 'contained' && color === 'negative',
            _c[classes.outlinedNegative] = variant === 'outlined' && color === 'negative',
            _c[classes.textNegative] = variant === 'text' && color === 'negative',
            _c[classes.containedPositive] = variant === 'contained' && color === 'positive',
            _c[classes.outlinedPositive] = variant === 'outlined' && color === 'positive',
            _c[classes.textPositive] = variant === 'text' && color === 'positive',
            _c), fullWidth && classes.fullWidth, className), disabled: disabled ? true : undefined, tabIndex: disabled ? -1 : 0, type: "button" }, rootProps),
        !!Icon && React.createElement(Icon, { role: "img", "aria-hidden": true, className: classes.icon }),
        children,
        !!TrailingIcon && (React.createElement(TrailingIcon, { role: "img", "aria-hidden": true, className: clsx(classes.icon, classes.trailingIcon) }))));
});
//# sourceMappingURL=data:application/json;base64,