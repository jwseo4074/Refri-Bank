import * as React from 'react';
import { GetClasses } from '../../typeUtils';
import 'focus-visible';
export declare const ButtonStylesKey = "ChromaButton";
export declare const useStyles: (props: {}) => import("@material-ui/styles").ClassNameMap<"text" | "root" | "icon" | "fullWidth" | "containedInverse" | "outlined" | "outlinedInverse" | "textInverse" | "containedNegative" | "containedPositive" | "outlinedNegative" | "outlinedPositive" | "textNegative" | "textPositive" | "trailingIcon">;
export declare type ButtonClasses = GetClasses<typeof useStyles>;
export interface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {
    children?: React.ReactNode;
    color?: 'default' | 'inverse' | 'negative' | 'positive';
    disabled?: boolean;
    fullWidth?: boolean;
    icon?: React.ComponentType<React.SVGProps<SVGSVGElement>>;
    variant?: 'contained' | 'outlined' | 'text';
    trailingIcon?: React.ComponentType<React.SVGProps<SVGSVGElement>>;
}
export declare const Button: React.ForwardRefExoticComponent<ButtonProps & React.RefAttributes<HTMLButtonElement>>;
