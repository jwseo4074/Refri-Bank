var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { makeStyles } from '../../styles';
import clsx from 'clsx';
export var AlertStylesKey = 'ChromaAlert';
export var useStyles = makeStyles(function (theme) { return ({
    root: {
        alignItems: 'flex-start',
        borderRadius: '0.375rem',
        display: 'flex',
        justifyContent: 'center',
        padding: theme.spacing(2, 3),
    },
    fullWidth: {
        width: '100%',
    },
    info: {
        backgroundColor: theme.palette.blue[50],
        color: theme.palette.primary[800],
    },
    warning: {
        backgroundColor: theme.palette.yellow[100],
        color: theme.palette.yellow[900],
    },
    error: {
        backgroundColor: theme.palette.red[50],
        color: theme.palette.red[900],
    },
    success: {
        backgroundColor: theme.palette.green[100],
        color: theme.palette.green[900],
    },
}); }, { name: AlertStylesKey });
export var Alert = function (_a) {
    var className = _a.className, children = _a.children, fullWidth = _a.fullWidth, _b = _a.statusType, statusType = _b === void 0 ? 'info' : _b, rootProps = __rest(_a, ["className", "children", "fullWidth", "statusType"]);
    var classes = useStyles({});
    return (React.createElement("div", __assign({ className: clsx(classes.root, classes[statusType], fullWidth && classes.fullWidth, className), role: "alert" }, rootProps), children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxlcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9BbGVydC9BbGVydC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFMUMsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBR3hCLE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FBRyxhQUFhLENBQUM7QUFFNUMsTUFBTSxDQUFDLElBQU0sU0FBUyxHQUFHLFVBQVUsQ0FDakMsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO0lBQ1YsSUFBSSxFQUFFO1FBQ0osVUFBVSxFQUFFLFlBQVk7UUFDeEIsWUFBWSxFQUFFLFVBQVU7UUFDeEIsT0FBTyxFQUFFLE1BQU07UUFDZixjQUFjLEVBQUUsUUFBUTtRQUN4QixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQzdCO0lBQ0QsU0FBUyxFQUFFO1FBQ1QsS0FBSyxFQUFFLE1BQU07S0FDZDtJQUNELElBQUksRUFBRTtRQUNKLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDdkMsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztLQUNsQztJQUNELE9BQU8sRUFBRTtRQUNQLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDMUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztLQUNqQztJQUNELEtBQUssRUFBRTtRQUNMLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDdEMsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztLQUM5QjtJQUNELE9BQU8sRUFBRTtRQUNQLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7UUFDekMsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztLQUNoQztDQUNGLENBQUMsRUEzQlMsQ0EyQlQsRUFDRixFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FDekIsQ0FBQztBQVVGLE1BQU0sQ0FBQyxJQUFNLEtBQUssR0FBeUIsVUFBQyxFQU0zQztJQUxDLElBQUEsd0JBQVMsRUFDVCxzQkFBUSxFQUNSLHdCQUFTLEVBQ1Qsa0JBQW1CLEVBQW5CLHdDQUFtQixFQUNuQiw0RUFBWTtJQUVaLElBQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQ0wsc0NBQ0UsU0FBUyxFQUFFLElBQUksQ0FDYixPQUFPLENBQUMsSUFBSSxFQUNaLE9BQU8sQ0FBQyxVQUFVLENBQUMsRUFDbkIsU0FBUyxJQUFJLE9BQU8sQ0FBQyxTQUFTLEVBQzlCLFNBQVMsQ0FDVixFQUNELElBQUksRUFBQyxPQUFPLElBQ1IsU0FBUyxHQUVaLFFBQVEsQ0FDTCxDQUNQLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25TdGF0dXNUeXBlIH0gZnJvbSAnLi4vX3ByaXZhdGUvbm90aWZpY2F0aW9uVHlwZXMnO1xuXG5leHBvcnQgY29uc3QgQWxlcnRTdHlsZXNLZXkgPSAnQ2hyb21hQWxlcnQnO1xuXG5leHBvcnQgY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyhcbiAgKHRoZW1lKSA9PiAoe1xuICAgIHJvb3Q6IHtcbiAgICAgIGFsaWduSXRlbXM6ICdmbGV4LXN0YXJ0JyxcbiAgICAgIGJvcmRlclJhZGl1czogJzAuMzc1cmVtJyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMiwgMyksXG4gICAgfSxcbiAgICBmdWxsV2lkdGg6IHtcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuYmx1ZVs1MF0sXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5WzgwMF0sXG4gICAgfSxcbiAgICB3YXJuaW5nOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUueWVsbG93WzEwMF0sXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS55ZWxsb3dbOTAwXSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUucmVkWzUwXSxcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnJlZFs5MDBdLFxuICAgIH0sXG4gICAgc3VjY2Vzczoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLmdyZWVuWzEwMF0sXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5ncmVlbls5MDBdLFxuICAgIH0sXG4gIH0pLFxuICB7IG5hbWU6IEFsZXJ0U3R5bGVzS2V5IH1cbik7XG5cbmV4cG9ydCB0eXBlIEFsZXJ0Q2xhc3NlcyA9IEdldENsYXNzZXM8dHlwZW9mIHVzZVN0eWxlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWxlcnRQcm9wcyB7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgc3RhdHVzVHlwZT86IE5vdGlmaWNhdGlvblN0YXR1c1R5cGU7XG4gIGZ1bGxXaWR0aD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCBBbGVydDogUmVhY3QuRkM8QWxlcnRQcm9wcz4gPSAoe1xuICBjbGFzc05hbWUsXG4gIGNoaWxkcmVuLFxuICBmdWxsV2lkdGgsXG4gIHN0YXR1c1R5cGUgPSAnaW5mbycsXG4gIC4uLnJvb3RQcm9wc1xufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKHt9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgIGNsYXNzZXMucm9vdCxcbiAgICAgICAgY2xhc3Nlc1tzdGF0dXNUeXBlXSxcbiAgICAgICAgZnVsbFdpZHRoICYmIGNsYXNzZXMuZnVsbFdpZHRoLFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgICByb2xlPVwiYWxlcnRcIlxuICAgICAgey4uLnJvb3RQcm9wc31cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19