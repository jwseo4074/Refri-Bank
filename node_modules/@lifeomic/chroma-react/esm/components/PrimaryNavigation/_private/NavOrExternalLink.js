var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { NavLink } from 'react-router-dom';
export var NavOrExternalLink = function (_a) {
    var to = _a.to, children = _a.children, className = _a.className, props = __rest(_a, ["to", "children", "className"]);
    if (to.match(/^https?:/)) {
        return (React.createElement("a", { target: "_blank", rel: "noopener noreferrer", href: to, className: className }, children));
    }
    return (React.createElement(NavLink, __assign({ to: to, className: className }, props), children));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmF2T3JFeHRlcm5hbExpbmsuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9QcmltYXJ5TmF2aWdhdGlvbi9fcHJpdmF0ZS9OYXZPckV4dGVybmFsTGluay50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUzQyxNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FBa0IsVUFBQyxFQUtoRDtJQUpDLElBQUEsVUFBRSxFQUNGLHNCQUFRLEVBQ1Isd0JBQVMsRUFDVCxtREFBUTtJQUVSLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtRQUN4QixPQUFPLENBQ0wsMkJBQ0UsTUFBTSxFQUFDLFFBQVEsRUFDZixHQUFHLEVBQUMscUJBQXFCLEVBQ3pCLElBQUksRUFBRSxFQUFFLEVBQ1IsU0FBUyxFQUFFLFNBQVMsSUFFbkIsUUFBUSxDQUNQLENBQ0wsQ0FBQztLQUNIO0lBQ0QsT0FBTyxDQUNMLG9CQUFDLE9BQU8sYUFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxTQUFTLElBQU0sS0FBSyxHQUM3QyxRQUFRLENBQ0QsQ0FDWCxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5leHBvcnQgY29uc3QgTmF2T3JFeHRlcm5hbExpbms6IFJlYWN0LkZDPGFueT4gPSAoe1xuICB0byxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn0pID0+IHtcbiAgaWYgKHRvLm1hdGNoKC9eaHR0cHM/Oi8pKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxhXG4gICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICBocmVmPXt0b31cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvYT5cbiAgICApO1xuICB9XG4gIHJldHVybiAoXG4gICAgPE5hdkxpbmsgdG89e3RvfSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gey4uLnByb3BzfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L05hdkxpbms+XG4gICk7XG59O1xuIl19