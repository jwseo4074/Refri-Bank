var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import 'react-phone-number-input/style.css';
import * as React from 'react';
import { TextField } from '../TextField';
// @ts-ignore The flags module is not typed
import flags from 'react-phone-number-input/flags';
import PhoneInput from 'react-phone-number-input';
import { makeStyles } from '../../styles';
import clsx from 'clsx';
export var PhoneNumberFormatFieldStylesKey = 'ChromaPhoneNumberFormatField';
var useStyles = function (_a) {
    var about = _a.about, errorMessage = _a.errorMessage;
    return makeStyles(function (theme) { return ({
        textField: {
            marginTop: theme.spacing(2),
            marginBottom: theme.spacing(1),
        },
        phoneInputRoot: {
            display: 'flex',
            width: '100%',
            position: 'relative',
            '& > .PhoneInputCountry': {
                position: 'absolute',
                bottom: theme.spacing(about || errorMessage ? 5.25 : 2.5),
                left: theme.spacing(1),
                '& .PhoneInputCountryIcon--border': {
                    boxShadow: 'unset',
                    backgroundColor: 'unset',
                },
            },
        },
        phoneInput: {
            '& > input': {
                paddingLeft: theme.spacing(6),
            },
        },
    }); }, { name: PhoneNumberFormatFieldStylesKey })({});
};
var PhoneInputCompatibleChromaInput = React.forwardRef(function (props, ref) {
    var classes = useStyles({});
    var className = props.className, textFieldProps = __rest(props, ["className"]);
    return (React.createElement(TextField, __assign({ fullWidth: true, label: "Phone Number", helpMessage: props.about, ref: ref }, textFieldProps, { className: clsx(classes.phoneInput, classes.textField, className) })));
});
export var PhoneNumberFormatField = function (_a) {
    var className = _a.className, props = __rest(_a, ["className"]);
    var value = props.value, onChange = props.onChange, errorMessage = props.errorMessage;
    var classes = useStyles(props);
    return (React.createElement(PhoneInput, __assign({ className: clsx(classes.phoneInputRoot, className), defaultCountry: "US", flags: flags }, props, { 
        // @ts-ignore defaultValue has type mismatch
        inputComponent: PhoneInputCompatibleChromaInput, value: value, onChange: onChange, error: errorMessage })));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGhvbmVOdW1iZXJGb3JtYXRGaWVsZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL051bWJlckZvcm1hdC9QaG9uZU51bWJlckZvcm1hdEZpZWxkLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxvQ0FBb0MsQ0FBQztBQUM1QyxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQWtCLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN6RCwyQ0FBMkM7QUFDM0MsT0FBTyxLQUFLLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkQsT0FBTyxVQUErQixNQUFNLDBCQUEwQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDMUMsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBR3hCLE1BQU0sQ0FBQyxJQUFNLCtCQUErQixHQUFHLDhCQUE4QixDQUFDO0FBRTlFLElBQU0sU0FBUyxHQUFHLFVBQUMsRUFNbEI7UUFMQyxLQUFLLFdBQUEsRUFDTCxZQUFZLGtCQUFBO0lBS1osT0FBQSxVQUFVLENBQ1IsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO1FBQ1YsU0FBUyxFQUFFO1lBQ1QsU0FBUyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzNCLFlBQVksRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUMvQjtRQUNELGNBQWMsRUFBRTtZQUNkLE9BQU8sRUFBRSxNQUFNO1lBQ2YsS0FBSyxFQUFFLE1BQU07WUFDYixRQUFRLEVBQUUsVUFBVTtZQUNwQix3QkFBd0IsRUFBRTtnQkFDeEIsUUFBUSxFQUFFLFVBQVU7Z0JBQ3BCLE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO2dCQUN6RCxJQUFJLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLGtDQUFrQyxFQUFFO29CQUNsQyxTQUFTLEVBQUUsT0FBTztvQkFDbEIsZUFBZSxFQUFFLE9BQU87aUJBQ3pCO2FBQ0Y7U0FDRjtRQUNELFVBQVUsRUFBRTtZQUNWLFdBQVcsRUFBRTtnQkFDWCxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7YUFDOUI7U0FDRjtLQUNGLENBQUMsRUF4QlMsQ0F3QlQsRUFDRixFQUFFLElBQUksRUFBRSwrQkFBK0IsRUFBRSxDQUMxQyxDQUFDLEVBQUUsQ0FBQztBQTNCTCxDQTJCSyxDQUFDO0FBSVIsSUFBTSwrQkFBK0IsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUd0RCxVQUFDLEtBQUssRUFBRSxHQUFHO0lBQ1gsSUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3RCLElBQUEsU0FBUyxHQUF3QixLQUFLLFVBQTdCLEVBQUssY0FBYyxVQUFLLEtBQUssRUFBeEMsYUFBZ0MsQ0FBRixDQUFXO0lBQy9DLE9BQU8sQ0FDTCxvQkFBQyxTQUFTLGFBQ1IsU0FBUyxRQUNULEtBQUssRUFBQyxjQUFjLEVBQ3BCLFdBQVcsRUFBRSxLQUFLLENBQUMsS0FBSyxFQUN4QixHQUFHLEVBQUUsR0FBRyxJQUNKLGNBQWMsSUFDbEIsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLElBQ2pFLENBQ0gsQ0FBQztBQUNKLENBQUMsQ0FBQyxDQUFDO0FBWUgsTUFBTSxDQUFDLElBQU0sc0JBQXNCLEdBQTBDLFVBQUMsRUFHN0U7SUFGQyxJQUFBLFNBQVMsZUFBQSxFQUNOLEtBQUssY0FGb0UsYUFHN0UsQ0FEUztJQUVBLElBQUEsS0FBSyxHQUE2QixLQUFLLE1BQWxDLEVBQUUsUUFBUSxHQUFtQixLQUFLLFNBQXhCLEVBQUUsWUFBWSxHQUFLLEtBQUssYUFBVixDQUFXO0lBQ2hELElBQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxPQUFPLENBQ0wsb0JBQUMsVUFBVSxhQUNULFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsRUFDbEQsY0FBYyxFQUFDLElBQUksRUFDbkIsS0FBSyxFQUFFLEtBQUssSUFDUixLQUFLO1FBQ1QsNENBQTRDO1FBQzVDLGNBQWMsRUFBRSwrQkFBK0IsRUFDL0MsS0FBSyxFQUFFLEtBQUssRUFDWixRQUFRLEVBQUUsUUFBUSxFQUNsQixLQUFLLEVBQUUsWUFBWSxJQUNuQixDQUNILENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3JlYWN0LXBob25lLW51bWJlci1pbnB1dC9zdHlsZS5jc3MnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVGV4dEZpZWxkUHJvcHMsIFRleHRGaWVsZCB9IGZyb20gJy4uL1RleHRGaWVsZCc7XG4vLyBAdHMtaWdub3JlIFRoZSBmbGFncyBtb2R1bGUgaXMgbm90IHR5cGVkXG5pbXBvcnQgZmxhZ3MgZnJvbSAncmVhY3QtcGhvbmUtbnVtYmVyLWlucHV0L2ZsYWdzJztcbmltcG9ydCBQaG9uZUlucHV0LCB7IFBob25lSW5wdXRQcm9wcyB9IGZyb20gJ3JlYWN0LXBob25lLW51bWJlci1pbnB1dCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnLi4vLi4vc3R5bGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgR2V0Q2xhc3NlcyB9IGZyb20gJy4uLy4uL3R5cGVVdGlscyc7XG5cbmV4cG9ydCBjb25zdCBQaG9uZU51bWJlckZvcm1hdEZpZWxkU3R5bGVzS2V5ID0gJ0Nocm9tYVBob25lTnVtYmVyRm9ybWF0RmllbGQnO1xuXG5jb25zdCB1c2VTdHlsZXMgPSAoe1xuICBhYm91dCxcbiAgZXJyb3JNZXNzYWdlLFxufToge1xuICBhYm91dD86IHN0cmluZztcbiAgZXJyb3JNZXNzYWdlPzogc3RyaW5nO1xufSkgPT5cbiAgbWFrZVN0eWxlcyhcbiAgICAodGhlbWUpID0+ICh7XG4gICAgICB0ZXh0RmllbGQ6IHtcbiAgICAgICAgbWFyZ2luVG9wOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgICAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgICB9LFxuICAgICAgcGhvbmVJbnB1dFJvb3Q6IHtcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgJyYgPiAuUGhvbmVJbnB1dENvdW50cnknOiB7XG4gICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgYm90dG9tOiB0aGVtZS5zcGFjaW5nKGFib3V0IHx8IGVycm9yTWVzc2FnZSA/IDUuMjUgOiAyLjUpLFxuICAgICAgICAgIGxlZnQ6IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgICAgICAgJyYgLlBob25lSW5wdXRDb3VudHJ5SWNvbi0tYm9yZGVyJzoge1xuICAgICAgICAgICAgYm94U2hhZG93OiAndW5zZXQnLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndW5zZXQnLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgcGhvbmVJbnB1dDoge1xuICAgICAgICAnJiA+IGlucHV0Jzoge1xuICAgICAgICAgIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nKDYpLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9KSxcbiAgICB7IG5hbWU6IFBob25lTnVtYmVyRm9ybWF0RmllbGRTdHlsZXNLZXkgfVxuICApKHt9KTtcblxuZXhwb3J0IHR5cGUgUGhvbmVOdW1iZXJGb3JtYXRGaWVsZENsYXNzZXMgPSBHZXRDbGFzc2VzPHR5cGVvZiB1c2VTdHlsZXM+O1xuXG5jb25zdCBQaG9uZUlucHV0Q29tcGF0aWJsZUNocm9tYUlucHV0ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTElucHV0RWxlbWVudCxcbiAgT21pdDxUZXh0RmllbGRQcm9wcywgJ2NvbG9yJz5cbj4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyh7fSk7XG4gIGNvbnN0IHsgY2xhc3NOYW1lLCAuLi50ZXh0RmllbGRQcm9wcyB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPFRleHRGaWVsZFxuICAgICAgZnVsbFdpZHRoXG4gICAgICBsYWJlbD1cIlBob25lIE51bWJlclwiXG4gICAgICBoZWxwTWVzc2FnZT17cHJvcHMuYWJvdXR9XG4gICAgICByZWY9e3JlZn1cbiAgICAgIHsuLi50ZXh0RmllbGRQcm9wc31cbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnBob25lSW5wdXQsIGNsYXNzZXMudGV4dEZpZWxkLCBjbGFzc05hbWUpfVxuICAgIC8+XG4gICk7XG59KTtcblxuZXhwb3J0IHR5cGUgUGhvbmVOdW1iZXJGb3JtYXRGaWVsZFByb3BzID0gT21pdDxcbiAgUGhvbmVJbnB1dFByb3BzLFxuICAndmFsdWUnIHwgJ29uQ2hhbmdlJ1xuPiAmIHtcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIG9uQ2hhbmdlOiAodmFsOiBzdHJpbmcpID0+IHZvaWQ7XG4gIGhhc0Vycm9yPzogYm9vbGVhbjtcbiAgZXJyb3JNZXNzYWdlPzogc3RyaW5nO1xufTtcbmV4cG9ydCBjb25zdCBQaG9uZU51bWJlckZvcm1hdEZpZWxkOiBSZWFjdC5GQzxQaG9uZU51bWJlckZvcm1hdEZpZWxkUHJvcHM+ID0gKHtcbiAgY2xhc3NOYW1lLFxuICAuLi5wcm9wc1xufSkgPT4ge1xuICBjb25zdCB7IHZhbHVlLCBvbkNoYW5nZSwgZXJyb3JNZXNzYWdlIH0gPSBwcm9wcztcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyhwcm9wcyk7XG4gIHJldHVybiAoXG4gICAgPFBob25lSW5wdXRcbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc2VzLnBob25lSW5wdXRSb290LCBjbGFzc05hbWUpfVxuICAgICAgZGVmYXVsdENvdW50cnk9XCJVU1wiXG4gICAgICBmbGFncz17ZmxhZ3N9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICAvLyBAdHMtaWdub3JlIGRlZmF1bHRWYWx1ZSBoYXMgdHlwZSBtaXNtYXRjaFxuICAgICAgaW5wdXRDb21wb25lbnQ9e1Bob25lSW5wdXRDb21wYXRpYmxlQ2hyb21hSW5wdXR9XG4gICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICBlcnJvcj17ZXJyb3JNZXNzYWdlfVxuICAgIC8+XG4gICk7XG59O1xuIl19