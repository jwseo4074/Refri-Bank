var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import 'react-phone-number-input/style.css';
import * as React from 'react';
import { TextField } from '../TextField';
// @ts-ignore The flags module is not typed
import flags from 'react-phone-number-input/flags';
import PhoneInput from 'react-phone-number-input';
import { makeStyles } from '../../styles';
import clsx from 'clsx';
export var PhoneNumberFormatFieldStylesKey = 'ChromaPhoneNumberFormatField';
var useStyles = function (_a) {
    var about = _a.about, errorMessage = _a.errorMessage;
    return makeStyles(function (theme) { return ({
        textField: {
            marginTop: theme.spacing(2),
            marginBottom: theme.spacing(1),
        },
        phoneInputRoot: {
            display: 'flex',
            width: '100%',
            position: 'relative',
            '& > .PhoneInputCountry': {
                position: 'absolute',
                bottom: theme.spacing(about || errorMessage ? 5.25 : 2.5),
                left: theme.spacing(1),
                '& .PhoneInputCountryIcon--border': {
                    boxShadow: 'unset',
                    backgroundColor: 'unset',
                },
            },
        },
        phoneInput: {
            '& > input': {
                paddingLeft: theme.spacing(6),
            },
        },
    }); }, { name: PhoneNumberFormatFieldStylesKey })({});
};
var PhoneInputCompatibleChromaInput = React.forwardRef(function (props, ref) {
    var classes = useStyles({});
    var className = props.className, textFieldProps = __rest(props, ["className"]);
    return (React.createElement(TextField, __assign({ fullWidth: true, label: "Phone Number", helpMessage: props.about, ref: ref }, textFieldProps, { className: clsx(classes.phoneInput, classes.textField, className) })));
});
export var PhoneNumberFormatField = function (_a) {
    var className = _a.className, props = __rest(_a, ["className"]);
    var value = props.value, onChange = props.onChange, errorMessage = props.errorMessage;
    var classes = useStyles(props);
    return (React.createElement(PhoneInput, __assign({ className: clsx(classes.phoneInputRoot, className), defaultCountry: "US", flags: flags }, props, { 
        // @ts-ignore defaultValue has type mismatch
        inputComponent: PhoneInputCompatibleChromaInput, value: value, onChange: onChange, error: errorMessage })));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGhvbmVOdW1iZXJGb3JtYXRGaWVsZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL051bWJlckZvcm1hdC9QaG9uZU51bWJlckZvcm1hdEZpZWxkLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxvQ0FBb0MsQ0FBQztBQUM1QyxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQWtCLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN6RCwyQ0FBMkM7QUFDM0MsT0FBTyxLQUFLLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkQsT0FBTyxVQUErQixNQUFNLDBCQUEwQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDMUMsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBR3hCLE1BQU0sQ0FBQyxJQUFNLCtCQUErQixHQUFHLDhCQUE4QixDQUFDO0FBRTlFLElBQU0sU0FBUyxHQUFHLFVBQUMsRUFNbEI7UUFMQyxnQkFBSyxFQUNMLDhCQUFZO0lBS1osT0FBQSxVQUFVLENBQ1IsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDO1FBQ1YsU0FBUyxFQUFFO1lBQ1QsU0FBUyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzNCLFlBQVksRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUMvQjtRQUNELGNBQWMsRUFBRTtZQUNkLE9BQU8sRUFBRSxNQUFNO1lBQ2YsS0FBSyxFQUFFLE1BQU07WUFDYixRQUFRLEVBQUUsVUFBVTtZQUNwQix3QkFBd0IsRUFBRTtnQkFDeEIsUUFBUSxFQUFFLFVBQVU7Z0JBQ3BCLE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO2dCQUN6RCxJQUFJLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLGtDQUFrQyxFQUFFO29CQUNsQyxTQUFTLEVBQUUsT0FBTztvQkFDbEIsZUFBZSxFQUFFLE9BQU87aUJBQ3pCO2FBQ0Y7U0FDRjtRQUNELFVBQVUsRUFBRTtZQUNWLFdBQVcsRUFBRTtnQkFDWCxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7YUFDOUI7U0FDRjtLQUNGLENBQUMsRUF4QlMsQ0F3QlQsRUFDRixFQUFFLElBQUksRUFBRSwrQkFBK0IsRUFBRSxDQUMxQyxDQUFDLEVBQUUsQ0FBQztBQTNCTCxDQTJCSyxDQUFDO0FBSVIsSUFBTSwrQkFBK0IsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUd0RCxVQUFDLEtBQUssRUFBRSxHQUFHO0lBQ1gsSUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3RCLElBQUEsMkJBQVMsRUFBRSw2Q0FBaUIsQ0FBVztJQUMvQyxPQUFPLENBQ0wsb0JBQUMsU0FBUyxhQUNSLFNBQVMsUUFDVCxLQUFLLEVBQUMsY0FBYyxFQUNwQixXQUFXLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFDeEIsR0FBRyxFQUFFLEdBQUcsSUFDSixjQUFjLElBQ2xCLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxJQUNqRSxDQUNILENBQUM7QUFDSixDQUFDLENBQUMsQ0FBQztBQVlILE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUEwQyxVQUFDLEVBRzdFO0lBRkMsSUFBQSx3QkFBUyxFQUNULGlDQUFRO0lBRUEsSUFBQSxtQkFBSyxFQUFFLHlCQUFRLEVBQUUsaUNBQVksQ0FBVztJQUNoRCxJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsT0FBTyxDQUNMLG9CQUFDLFVBQVUsYUFDVCxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsU0FBUyxDQUFDLEVBQ2xELGNBQWMsRUFBQyxJQUFJLEVBQ25CLEtBQUssRUFBRSxLQUFLLElBQ1IsS0FBSztRQUNULDRDQUE0QztRQUM1QyxjQUFjLEVBQUUsK0JBQStCLEVBQy9DLEtBQUssRUFBRSxLQUFLLEVBQ1osUUFBUSxFQUFFLFFBQVEsRUFDbEIsS0FBSyxFQUFFLFlBQVksSUFDbkIsQ0FDSCxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC1waG9uZS1udW1iZXItaW5wdXQvc3R5bGUuY3NzJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRleHRGaWVsZFByb3BzLCBUZXh0RmllbGQgfSBmcm9tICcuLi9UZXh0RmllbGQnO1xuLy8gQHRzLWlnbm9yZSBUaGUgZmxhZ3MgbW9kdWxlIGlzIG5vdCB0eXBlZFxuaW1wb3J0IGZsYWdzIGZyb20gJ3JlYWN0LXBob25lLW51bWJlci1pbnB1dC9mbGFncyc7XG5pbXBvcnQgUGhvbmVJbnB1dCwgeyBQaG9uZUlucHV0UHJvcHMgfSBmcm9tICdyZWFjdC1waG9uZS1udW1iZXItaW5wdXQnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJy4uLy4uL3N0eWxlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IEdldENsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlVXRpbHMnO1xuXG5leHBvcnQgY29uc3QgUGhvbmVOdW1iZXJGb3JtYXRGaWVsZFN0eWxlc0tleSA9ICdDaHJvbWFQaG9uZU51bWJlckZvcm1hdEZpZWxkJztcblxuY29uc3QgdXNlU3R5bGVzID0gKHtcbiAgYWJvdXQsXG4gIGVycm9yTWVzc2FnZSxcbn06IHtcbiAgYWJvdXQ/OiBzdHJpbmc7XG4gIGVycm9yTWVzc2FnZT86IHN0cmluZztcbn0pID0+XG4gIG1ha2VTdHlsZXMoXG4gICAgKHRoZW1lKSA9PiAoe1xuICAgICAgdGV4dEZpZWxkOiB7XG4gICAgICAgIG1hcmdpblRvcDogdGhlbWUuc3BhY2luZygyKSxcbiAgICAgICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nKDEpLFxuICAgICAgfSxcbiAgICAgIHBob25lSW5wdXRSb290OiB7XG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICAgICcmID4gLlBob25lSW5wdXRDb3VudHJ5Jzoge1xuICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgIGJvdHRvbTogdGhlbWUuc3BhY2luZyhhYm91dCB8fCBlcnJvck1lc3NhZ2UgPyA1LjI1IDogMi41KSxcbiAgICAgICAgICBsZWZ0OiB0aGVtZS5zcGFjaW5nKDEpLFxuICAgICAgICAgICcmIC5QaG9uZUlucHV0Q291bnRyeUljb24tLWJvcmRlcic6IHtcbiAgICAgICAgICAgIGJveFNoYWRvdzogJ3Vuc2V0JyxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3Vuc2V0JyxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIHBob25lSW5wdXQ6IHtcbiAgICAgICAgJyYgPiBpbnB1dCc6IHtcbiAgICAgICAgICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZyg2KSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSksXG4gICAgeyBuYW1lOiBQaG9uZU51bWJlckZvcm1hdEZpZWxkU3R5bGVzS2V5IH1cbiAgKSh7fSk7XG5cbmV4cG9ydCB0eXBlIFBob25lTnVtYmVyRm9ybWF0RmllbGRDbGFzc2VzID0gR2V0Q2xhc3Nlczx0eXBlb2YgdXNlU3R5bGVzPjtcblxuY29uc3QgUGhvbmVJbnB1dENvbXBhdGlibGVDaHJvbWFJbnB1dCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxJbnB1dEVsZW1lbnQsXG4gIE9taXQ8VGV4dEZpZWxkUHJvcHMsICdjb2xvcic+XG4+KChwcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoe30pO1xuICBjb25zdCB7IGNsYXNzTmFtZSwgLi4udGV4dEZpZWxkUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxUZXh0RmllbGRcbiAgICAgIGZ1bGxXaWR0aFxuICAgICAgbGFiZWw9XCJQaG9uZSBOdW1iZXJcIlxuICAgICAgaGVscE1lc3NhZ2U9e3Byb3BzLmFib3V0fVxuICAgICAgcmVmPXtyZWZ9XG4gICAgICB7Li4udGV4dEZpZWxkUHJvcHN9XG4gICAgICBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5waG9uZUlucHV0LCBjbGFzc2VzLnRleHRGaWVsZCwgY2xhc3NOYW1lKX1cbiAgICAvPlxuICApO1xufSk7XG5cbmV4cG9ydCB0eXBlIFBob25lTnVtYmVyRm9ybWF0RmllbGRQcm9wcyA9IE9taXQ8XG4gIFBob25lSW5wdXRQcm9wcyxcbiAgJ3ZhbHVlJyB8ICdvbkNoYW5nZSdcbj4gJiB7XG4gIGxhYmVsPzogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xuICBvbkNoYW5nZTogKHZhbDogc3RyaW5nKSA9PiB2b2lkO1xuICBoYXNFcnJvcj86IGJvb2xlYW47XG4gIGVycm9yTWVzc2FnZT86IHN0cmluZztcbn07XG5leHBvcnQgY29uc3QgUGhvbmVOdW1iZXJGb3JtYXRGaWVsZDogUmVhY3QuRkM8UGhvbmVOdW1iZXJGb3JtYXRGaWVsZFByb3BzPiA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn0pID0+IHtcbiAgY29uc3QgeyB2YWx1ZSwgb25DaGFuZ2UsIGVycm9yTWVzc2FnZSB9ID0gcHJvcHM7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMocHJvcHMpO1xuICByZXR1cm4gKFxuICAgIDxQaG9uZUlucHV0XG4gICAgICBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5waG9uZUlucHV0Um9vdCwgY2xhc3NOYW1lKX1cbiAgICAgIGRlZmF1bHRDb3VudHJ5PVwiVVNcIlxuICAgICAgZmxhZ3M9e2ZsYWdzfVxuICAgICAgey4uLnByb3BzfVxuICAgICAgLy8gQHRzLWlnbm9yZSBkZWZhdWx0VmFsdWUgaGFzIHR5cGUgbWlzbWF0Y2hcbiAgICAgIGlucHV0Q29tcG9uZW50PXtQaG9uZUlucHV0Q29tcGF0aWJsZUNocm9tYUlucHV0fVxuICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgZXJyb3I9e2Vycm9yTWVzc2FnZX1cbiAgICAvPlxuICApO1xufTtcbiJdfQ==