"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var deepmerge_1 = __importDefault(require("deepmerge"));
var black_1 = __importDefault(require("../colors/black"));
var blue_1 = __importDefault(require("../colors/blue"));
var charcoal_1 = __importDefault(require("../colors/charcoal"));
var darkGraphite_1 = __importDefault(require("../colors/darkGraphite"));
var graphite_1 = __importDefault(require("../colors/graphite"));
var green_1 = __importDefault(require("../colors/green"));
var grey_1 = __importDefault(require("../colors/grey"));
var navy_1 = __importDefault(require("../colors/navy"));
var orange_1 = __importDefault(require("../colors/orange"));
var purple_1 = __importDefault(require("../colors/purple"));
var red_1 = __importDefault(require("../colors/red"));
var text_1 = __importDefault(require("../colors/text"));
var yellow_1 = __importDefault(require("../colors/yellow"));
var baseMuiPalette = {
    primary: blue_1.default,
    secondary: green_1.default,
    error: red_1.default,
    type: 'light',
    common: {
        black: black_1.default.main,
        white: '#ffffff',
    },
    grey: grey_1.default,
    text: text_1.default,
    divider: grey_1.default[400],
    background: {
        paper: grey_1.default[50],
        default: '#f5f8fa',
    },
};
var basePalette = __assign({ black: black_1.default,
    blue: blue_1.default,
    charcoal: charcoal_1.default,
    darkGraphite: darkGraphite_1.default,
    graphite: graphite_1.default,
    green: green_1.default,
    navy: navy_1.default,
    orange: orange_1.default,
    purple: purple_1.default,
    red: red_1.default,
    yellow: yellow_1.default }, baseMuiPalette);
exports.createPalette = function (palette) {
    if (palette === void 0) { palette = {}; }
    return deepmerge_1.default(basePalette, palette, { clone: false });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlUGFsZXR0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvY3JlYXRlUGFsZXR0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0Esd0RBQWtDO0FBQ2xDLDBEQUFvQztBQUNwQyx3REFBa0M7QUFDbEMsZ0VBQTBDO0FBQzFDLHdFQUFrRDtBQUNsRCxnRUFBMEM7QUFDMUMsMERBQW9DO0FBQ3BDLHdEQUFrQztBQUNsQyx3REFBa0M7QUFDbEMsNERBQXNDO0FBQ3RDLDREQUFzQztBQUN0QyxzREFBZ0M7QUFDaEMsd0RBQWtDO0FBQ2xDLDREQUFzQztBQUd0QyxJQUFNLGNBQWMsR0FBRztJQUNyQixPQUFPLEVBQUUsY0FBSTtJQUNiLFNBQVMsRUFBRSxlQUFLO0lBQ2hCLEtBQUssRUFBRSxhQUFHO0lBQ1YsSUFBSSxFQUFFLE9BQU87SUFDYixNQUFNLEVBQUU7UUFDTixLQUFLLEVBQUUsZUFBSyxDQUFDLElBQUk7UUFDakIsS0FBSyxFQUFFLFNBQVM7S0FDakI7SUFDRCxJQUFJLGdCQUFBO0lBQ0osSUFBSSxnQkFBQTtJQUNKLE9BQU8sRUFBRSxjQUFJLENBQUMsR0FBRyxDQUFDO0lBQ2xCLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxjQUFJLENBQUMsRUFBRSxDQUFDO1FBQ2YsT0FBTyxFQUFFLFNBQVM7S0FDbkI7Q0FDRixDQUFDO0FBRUYsSUFBTSxXQUFXLGNBQ2YsS0FBSyxpQkFBQTtJQUNMLElBQUksZ0JBQUE7SUFDSixRQUFRLG9CQUFBO0lBQ1IsWUFBWSx3QkFBQTtJQUNaLFFBQVEsb0JBQUE7SUFDUixLQUFLLGlCQUFBO0lBQ0wsSUFBSSxnQkFBQTtJQUNKLE1BQU0sa0JBQUE7SUFDTixNQUFNLGtCQUFBO0lBQ04sR0FBRyxlQUFBO0lBQ0gsTUFBTSxrQkFBQSxJQUNILGNBQWMsQ0FDbEIsQ0FBQztBQU1XLFFBQUEsYUFBYSxHQUFHLFVBQUMsT0FBNEI7SUFBNUIsd0JBQUEsRUFBQSxZQUE0QjtJQUN4RCxPQUFPLG1CQUFTLENBQUMsV0FBVyxFQUFFLE9BQU8sRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBUSxDQUFDO0FBQ2xFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhbGV0dGUgYXMgTVVJUGFsZXR0ZSB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL3N0eWxlcy9jcmVhdGVQYWxldHRlJztcbmltcG9ydCBkZWVwbWVyZ2UgZnJvbSAnZGVlcG1lcmdlJztcbmltcG9ydCBibGFjayBmcm9tICcuLi9jb2xvcnMvYmxhY2snO1xuaW1wb3J0IGJsdWUgZnJvbSAnLi4vY29sb3JzL2JsdWUnO1xuaW1wb3J0IGNoYXJjb2FsIGZyb20gJy4uL2NvbG9ycy9jaGFyY29hbCc7XG5pbXBvcnQgZGFya0dyYXBoaXRlIGZyb20gJy4uL2NvbG9ycy9kYXJrR3JhcGhpdGUnO1xuaW1wb3J0IGdyYXBoaXRlIGZyb20gJy4uL2NvbG9ycy9ncmFwaGl0ZSc7XG5pbXBvcnQgZ3JlZW4gZnJvbSAnLi4vY29sb3JzL2dyZWVuJztcbmltcG9ydCBncmV5IGZyb20gJy4uL2NvbG9ycy9ncmV5JztcbmltcG9ydCBuYXZ5IGZyb20gJy4uL2NvbG9ycy9uYXZ5JztcbmltcG9ydCBvcmFuZ2UgZnJvbSAnLi4vY29sb3JzL29yYW5nZSc7XG5pbXBvcnQgcHVycGxlIGZyb20gJy4uL2NvbG9ycy9wdXJwbGUnO1xuaW1wb3J0IHJlZCBmcm9tICcuLi9jb2xvcnMvcmVkJztcbmltcG9ydCB0ZXh0IGZyb20gJy4uL2NvbG9ycy90ZXh0JztcbmltcG9ydCB5ZWxsb3cgZnJvbSAnLi4vY29sb3JzL3llbGxvdyc7XG5pbXBvcnQgeyBEZWVwUGFydGlhbCB9IGZyb20gJy4uL3R5cGVVdGlscyc7XG5cbmNvbnN0IGJhc2VNdWlQYWxldHRlID0ge1xuICBwcmltYXJ5OiBibHVlLFxuICBzZWNvbmRhcnk6IGdyZWVuLFxuICBlcnJvcjogcmVkLFxuICB0eXBlOiAnbGlnaHQnLFxuICBjb21tb246IHtcbiAgICBibGFjazogYmxhY2subWFpbixcbiAgICB3aGl0ZTogJyNmZmZmZmYnLFxuICB9LFxuICBncmV5LFxuICB0ZXh0LFxuICBkaXZpZGVyOiBncmV5WzQwMF0sXG4gIGJhY2tncm91bmQ6IHtcbiAgICBwYXBlcjogZ3JleVs1MF0sXG4gICAgZGVmYXVsdDogJyNmNWY4ZmEnLFxuICB9LFxufTtcblxuY29uc3QgYmFzZVBhbGV0dGUgPSB7XG4gIGJsYWNrLFxuICBibHVlLFxuICBjaGFyY29hbCxcbiAgZGFya0dyYXBoaXRlLFxuICBncmFwaGl0ZSxcbiAgZ3JlZW4sXG4gIG5hdnksXG4gIG9yYW5nZSxcbiAgcHVycGxlLFxuICByZWQsXG4gIHllbGxvdyxcbiAgLi4uYmFzZU11aVBhbGV0dGUsXG59O1xuXG5leHBvcnQgdHlwZSBQYWxldHRlID0gdHlwZW9mIGJhc2VQYWxldHRlICYgTVVJUGFsZXR0ZTtcblxuZXhwb3J0IHR5cGUgUGFsZXR0ZU9wdGlvbnMgPSBEZWVwUGFydGlhbDxQYWxldHRlPjtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBhbGV0dGUgPSAocGFsZXR0ZTogUGFsZXR0ZU9wdGlvbnMgPSB7fSk6IFBhbGV0dGUgPT4ge1xuICByZXR1cm4gZGVlcG1lcmdlKGJhc2VQYWxldHRlLCBwYWxldHRlLCB7IGNsb25lOiBmYWxzZSB9KSBhcyBhbnk7XG59O1xuIl19