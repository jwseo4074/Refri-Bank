"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMuiButtonOverrides = function (theme) {
    var basePadding = theme.spacing(1.375) + "px " + theme.spacing(1.75) + "px";
    return {
        root: __assign(__assign({}, theme.typography.button), { textTransform: 'initial', boxSizing: 'border-box', minWidth: theme.spacing(11), minHeight: theme.pxToRem(30), padding: basePadding, transition: theme.transitions.create(['background-color', 'color', 'box-shadow', 'border'], {
                duration: theme.transitions.duration.short,
            }), '&:focus': {
                outline: 0,
            } }),
        textPrimary: {
            // text, contained, and outlined buttons should all be the same size
            padding: basePadding,
            color: theme.palette.primary.main,
            '&:hover, &:focus': {
                backgroundColor: 'inherit',
                color: theme.palette.primary[800],
            },
            '&:disabled': {
                color: theme.palette.primary.main,
                opacity: 0.44,
            },
        },
        outlinedPrimary: {
            border: "1px solid " + theme.palette.primary.main,
            '&:hover, &:focus': {
                backgroundColor: 'transparent',
                color: theme.palette.primary[800],
                border: "1px solid " + theme.palette.primary[800],
            },
            '&:disabled': {
                color: theme.palette.primary.main,
                opacity: 0.44,
                border: "1px solid " + theme.palette.primary.main,
            },
        },
        containedPrimary: {
            color: theme.palette.common.white,
            backgroundColor: theme.palette.primary.main,
            boxShadow: 'none',
            '&$focusVisible': {
                boxShadow: theme.shadows[6],
            },
            '&:disabled': {
                color: theme.palette.common.white,
                backgroundColor: theme.palette.primary.main,
                opacity: 0.44,
            },
            '&:active': {
                // Remove boxshadow "pop" when clicking
                boxShadow: 'none',
            },
            '&:hover, &:focus': {
                backgroundColor: theme.palette.primary[800],
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.grey[300],
                },
            },
        },
        sizeSmall: __assign(__assign({}, theme.typography.button), { padding: theme.spacing(1) + "px " + theme.spacing(1.375) + "px", minWidth: theme.spacing(8), minHeight: theme.pxToRem(32) }),
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTXVpQnV0dG9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0eWxlcy9vdmVycmlkZXMvTXVpQnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFHYSxRQUFBLHdCQUF3QixHQUFHLFVBQ3RDLEtBQVk7SUFFWixJQUFNLFdBQVcsR0FBTSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxXQUFNLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQUksQ0FBQztJQUV6RSxPQUFPO1FBQ0wsSUFBSSx3QkFDQyxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sS0FDMUIsYUFBYSxFQUFFLFNBQVMsRUFDeEIsU0FBUyxFQUFFLFlBQVksRUFDdkIsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQzNCLFNBQVMsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUM1QixPQUFPLEVBQUUsV0FBVyxFQUNwQixVQUFVLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQ2xDLENBQUMsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxRQUFRLENBQUMsRUFDckQ7Z0JBQ0UsUUFBUSxFQUFFLEtBQUssQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLEtBQUs7YUFDM0MsQ0FDRixFQUNELFNBQVMsRUFBRTtnQkFDVCxPQUFPLEVBQUUsQ0FBQzthQUNYLEdBQ0Y7UUFDRCxXQUFXLEVBQUU7WUFDWCxvRUFBb0U7WUFDcEUsT0FBTyxFQUFFLFdBQVc7WUFDcEIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUk7WUFDakMsa0JBQWtCLEVBQUU7Z0JBQ2xCLGVBQWUsRUFBRSxTQUFTO2dCQUMxQixLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO2FBQ2xDO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO2dCQUNqQyxPQUFPLEVBQUUsSUFBSTthQUNkO1NBQ0Y7UUFDRCxlQUFlLEVBQUU7WUFDZixNQUFNLEVBQUUsZUFBYSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFNO1lBQ2pELGtCQUFrQixFQUFFO2dCQUNsQixlQUFlLEVBQUUsYUFBYTtnQkFDOUIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztnQkFDakMsTUFBTSxFQUFFLGVBQWEsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFHO2FBQ2xEO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO2dCQUNqQyxPQUFPLEVBQUUsSUFBSTtnQkFDYixNQUFNLEVBQUUsZUFBYSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFNO2FBQ2xEO1NBQ0Y7UUFDRCxnQkFBZ0IsRUFBRTtZQUNoQixLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSztZQUNqQyxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSTtZQUMzQyxTQUFTLEVBQUUsTUFBTTtZQUNqQixnQkFBZ0IsRUFBRTtnQkFDaEIsU0FBUyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2FBQzVCO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLO2dCQUNqQyxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSTtnQkFDM0MsT0FBTyxFQUFFLElBQUk7YUFDZDtZQUNELFVBQVUsRUFBRTtnQkFDVix1Q0FBdUM7Z0JBQ3ZDLFNBQVMsRUFBRSxNQUFNO2FBQ2xCO1lBQ0Qsa0JBQWtCLEVBQUU7Z0JBQ2xCLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7Z0JBQzNDLHFEQUFxRDtnQkFDckQsc0JBQXNCLEVBQUU7b0JBQ3RCLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7aUJBQ3pDO2FBQ0Y7U0FDRjtRQUNELFNBQVMsd0JBQ0osS0FBSyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEtBQzFCLE9BQU8sRUFBSyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFNLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQUksRUFDMUQsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQzFCLFNBQVMsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUM3QjtLQUNGLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPdmVycmlkZXMgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMvb3ZlcnJpZGVzJztcbmltcG9ydCB7IFRoZW1lIH0gZnJvbSAnLi4vY3JlYXRlVGhlbWUnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlTXVpQnV0dG9uT3ZlcnJpZGVzID0gKFxuICB0aGVtZTogVGhlbWVcbik6IE92ZXJyaWRlc1snTXVpQnV0dG9uJ10gPT4ge1xuICBjb25zdCBiYXNlUGFkZGluZyA9IGAke3RoZW1lLnNwYWNpbmcoMS4zNzUpfXB4ICR7dGhlbWUuc3BhY2luZygxLjc1KX1weGA7XG5cbiAgcmV0dXJuIHtcbiAgICByb290OiB7XG4gICAgICAuLi50aGVtZS50eXBvZ3JhcGh5LmJ1dHRvbixcbiAgICAgIHRleHRUcmFuc2Zvcm06ICdpbml0aWFsJyxcbiAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgICAgbWluV2lkdGg6IHRoZW1lLnNwYWNpbmcoMTEpLFxuICAgICAgbWluSGVpZ2h0OiB0aGVtZS5weFRvUmVtKDMwKSxcbiAgICAgIHBhZGRpbmc6IGJhc2VQYWRkaW5nLFxuICAgICAgdHJhbnNpdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKFxuICAgICAgICBbJ2JhY2tncm91bmQtY29sb3InLCAnY29sb3InLCAnYm94LXNoYWRvdycsICdib3JkZXInXSxcbiAgICAgICAge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5zaG9ydCxcbiAgICAgICAgfVxuICAgICAgKSxcbiAgICAgICcmOmZvY3VzJzoge1xuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHRleHRQcmltYXJ5OiB7XG4gICAgICAvLyB0ZXh0LCBjb250YWluZWQsIGFuZCBvdXRsaW5lZCBidXR0b25zIHNob3VsZCBhbGwgYmUgdGhlIHNhbWUgc2l6ZVxuICAgICAgcGFkZGluZzogYmFzZVBhZGRpbmcsXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAnJjpob3ZlciwgJjpmb2N1cyc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnaW5oZXJpdCcsXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnlbODAwXSxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCc6IHtcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgICBvcGFjaXR5OiAwLjQ0LFxuICAgICAgfSxcbiAgICB9LFxuICAgIG91dGxpbmVkUHJpbWFyeToge1xuICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7dGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW59YCxcbiAgICAgICcmOmhvdmVyLCAmOmZvY3VzJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnlbODAwXSxcbiAgICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7dGhlbWUucGFsZXR0ZS5wcmltYXJ5WzgwMF19YCxcbiAgICAgIH0sXG4gICAgICAnJjpkaXNhYmxlZCc6IHtcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgICBvcGFjaXR5OiAwLjQ0LFxuICAgICAgICBib3JkZXI6IGAxcHggc29saWQgJHt0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbn1gLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGNvbnRhaW5lZFByaW1hcnk6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi53aGl0ZSxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICBib3hTaGFkb3c6ICdub25lJyxcbiAgICAgICcmJGZvY3VzVmlzaWJsZSc6IHtcbiAgICAgICAgYm94U2hhZG93OiB0aGVtZS5zaGFkb3dzWzZdLFxuICAgICAgfSxcbiAgICAgICcmOmRpc2FibGVkJzoge1xuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAgIG9wYWNpdHk6IDAuNDQsXG4gICAgICB9LFxuICAgICAgJyY6YWN0aXZlJzoge1xuICAgICAgICAvLyBSZW1vdmUgYm94c2hhZG93IFwicG9wXCIgd2hlbiBjbGlja2luZ1xuICAgICAgICBib3hTaGFkb3c6ICdub25lJyxcbiAgICAgIH0sXG4gICAgICAnJjpob3ZlciwgJjpmb2N1cyc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnlbODAwXSxcbiAgICAgICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAgICAgJ0BtZWRpYSAoaG92ZXI6IG5vbmUpJzoge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5ncmV5WzMwMF0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgc2l6ZVNtYWxsOiB7XG4gICAgICAuLi50aGVtZS50eXBvZ3JhcGh5LmJ1dHRvbixcbiAgICAgIHBhZGRpbmc6IGAke3RoZW1lLnNwYWNpbmcoMSl9cHggJHt0aGVtZS5zcGFjaW5nKDEuMzc1KX1weGAsXG4gICAgICBtaW5XaWR0aDogdGhlbWUuc3BhY2luZyg4KSxcbiAgICAgIG1pbkhlaWdodDogdGhlbWUucHhUb1JlbSgzMiksXG4gICAgfSxcbiAgfTtcbn07XG4iXX0=