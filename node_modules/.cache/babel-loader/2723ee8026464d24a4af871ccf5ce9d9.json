{"ast":null,"code":"var _jsxFileName = \"/Users/seojiwon/Desktop/RefriBank/src/page/mainpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //이거 대문자로 해야함!!\n\nimport Body from '../components/mainpage/body';\nimport Footer from '../components/mainpage/footer';\nimport Aside from '../components/mainpage/aside';\nimport Footer_bottom from '../components/mainpage/footer-bottom';\nimport Axios from 'axios';\nimport Alert from './alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  history\n}) => {\n  _s();\n\n  // 히스토리를 받았어 (프롭스로)\n  const [text, settext] = useState('');\n  const [ftable, setftable] = useState();\n  const [livetable, setlivetable] = useState();\n  const [ftable_cnt, setftable_cnt] = useState();\n  const [page_slice, set_page_slice] = useState({\n    start: 0,\n    end: 8\n  });\n  useEffect(() => {\n    Axios.post('https://qkrtmfqls.gabia.io/liverank', {}).then(response => {\n      // 처음에 로딩 될 때, 라이브랭크로 받아오는데 이게 지금 3천개 다 가져온거임\n      // 굳이 이렇게 할 필요없다 이거야\n      // 어차피 여기서 받아온거는\n      // 왼쪽에 푸터(전부다 보여주던가, 16개로 한페이지만 보여주던가),\n      // 오른쪽에 어사이드(10개)\n      // 이게 끝이야 => 내 생각엔 그냥 처음에 좋아요 순으로 26개만 받아와\n      // 그다음 왼쪽은 11번~26번 보여주고\n      // 오른쪽은 1번~10번 ( 좋아요 최상위 10개 ) 보여주는것도 괜찮을거 같음\n      // 이게 아니면 그냥 아예 랜덤으로 26개만 받아오던가\n      // 여기서 우리가 고민 해야 할건\n      // 1. 각각의 컴포넌트에서 포스트를 요청 => 2번 포스트\n      // 2. 메인에서 포스트 한번만 하고 그걸 인자로 넘겨준다\n      // 이 두개 중 뭐가 이득이냐, 이걸 생각해야함\n      let new_arr = response.data.slice();\n      new_arr.sort(function (a, b) {\n        return a.likeit - b.likeit;\n      });\n      setftable(new_arr);\n      setlivetable(response.data);\n      setftable_cnt(response.data.length / 8);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // 처음에 로딩 될 때 한번만 하면 되니까 useeffect로 한번만 해주면 됨\n\n  const gettable = () => {\n    if (text != '') {\n      Axios.post('https://qkrtmfqls.gabia.io/gettable', {\n        id: text\n      }).then(response => {\n        setftable(response.data);\n        setftable_cnt(response.data.length / 8); // gettable => 검색 했을 때 테이블 불러오는거\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-top-form\",\n      children: /*#__PURE__*/_jsxDEV(Body, {\n        gettable: gettable,\n        settext: settext,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-bottom-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-form\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {\n          ftable: ftable,\n          history: history,\n          page_slice: page_slice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aside-form\",\n        children: /*#__PURE__*/_jsxDEV(Aside, {\n          livetable: livetable,\n          history: history\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"move-footer-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '80%',\n          display: 'flex',\n          'margin-top': '2%',\n          'margin-bottom': '2%',\n          'justify-content': 'center',\n          'align-items': 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"like_select_num_btn_form\",\n          children: ftable &&\n          /*#__PURE__*/\n          // 비동기 처리\n          _jsxDEV(Footer_bottom, {\n            set_page_slice: set_page_slice,\n            ftable_cnt: ftable_cnt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"HEg9n+wCYD36rI8W/5usEE+NaMY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seojiwon/Desktop/RefriBank/src/page/mainpage.js"],"names":["React","useState","useEffect","Body","Footer","Aside","Footer_bottom","Axios","Alert","App","history","text","settext","ftable","setftable","livetable","setlivetable","ftable_cnt","setftable_cnt","page_slice","set_page_slice","start","end","post","then","response","new_arr","data","slice","sort","a","b","likeit","length","catch","error","console","log","gettable","id","width","height","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,EAA1C;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,EAA5C;AACA,QAAM,CAACkB,UAAD,EAAaC,cAAb,IAA+BnB,QAAQ,CAAC;AAAEoB,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,GAAG,EAAE;AAAjB,GAAD,CAA7C;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACgB,IAAN,CAAW,qCAAX,EAAkD,EAAlD,EACGC,IADH,CACSC,QAAD,IAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA,UAAIC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,EAAd;AACAF,MAAAA,OAAO,CAACG,IAAR,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC3B,eAAOD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAApB;AACD,OAFD;AAGAlB,MAAAA,SAAS,CAACY,OAAD,CAAT;AACAV,MAAAA,YAAY,CAACS,QAAQ,CAACE,IAAV,CAAZ;AACAT,MAAAA,aAAa,CAACO,QAAQ,CAACE,IAAT,CAAcM,MAAd,GAAuB,CAAxB,CAAb;AACD,KAzBH,EA2BGC,KA3BH,CA2BUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KA7BH;AA8BD,GA/BQ,EA+BN,EA/BM,CAAT,CAR2B,CAwC3B;;AAEA,QAAMG,QAAQ,GAAG,MAAM;AACrB,QAAI3B,IAAI,IAAI,EAAZ,EAAgB;AACdJ,MAAAA,KAAK,CAACgB,IAAN,CAAW,qCAAX,EAAkD;AAChDgB,QAAAA,EAAE,EAAE5B;AAD4C,OAAlD,EAGGa,IAHH,CAGSC,QAAD,IAAc;AAClBX,QAAAA,SAAS,CAACW,QAAQ,CAACE,IAAV,CAAT;AACAT,QAAAA,aAAa,CAACO,QAAQ,CAACE,IAAT,CAAcM,MAAd,GAAuB,CAAxB,CAAb,CAFkB,CAGlB;AACD,OAPH,EASGC,KATH,CASUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAXH;AAYD;AACF,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEG,QAAhB;AAA0B,QAAA,OAAO,EAAE1B,OAAnC;AAA4C,QAAA,IAAI,EAAED;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEE,MAAhB;AAAwB,UAAA,OAAO,EAAEH,OAAjC;AAA0C,UAAA,UAAU,EAAES;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEJ,SAAlB;AAA6B,UAAA,OAAO,EAAEL;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAYE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAE;AACL8B,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAIL,wBAAc,IAJT;AAKL,2BAAiB,IALZ;AAML,6BAAmB,QANd;AAOL,yBAAe;AAPV,SADT;AAAA,+BAWE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,oBACG7B,MAAM;AAAA;AAAM;AACX,kBAAC,aAAD;AAAe,YAAA,cAAc,EAAEO,cAA/B;AAA+C,YAAA,UAAU,EAAEH;AAA3D;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAkCD,CA7FD;;GAAMR,G;;KAAAA,G;AA+FN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n//이거 대문자로 해야함!!\nimport Body from '../components/mainpage/body';\nimport Footer from '../components/mainpage/footer';\nimport Aside from '../components/mainpage/aside';\nimport Footer_bottom from '../components/mainpage/footer-bottom';\nimport Axios from 'axios';\nimport Alert from './alert';\n\nconst App = ({ history }) => {\n  // 히스토리를 받았어 (프롭스로)\n  const [text, settext] = useState('');\n  const [ftable, setftable] = useState();\n  const [livetable, setlivetable] = useState();\n  const [ftable_cnt, setftable_cnt] = useState();\n  const [page_slice, set_page_slice] = useState({ start: 0, end: 8 });\n\n  useEffect(() => {\n    Axios.post('https://qkrtmfqls.gabia.io/liverank', {})\n      .then((response) => {\n        // 처음에 로딩 될 때, 라이브랭크로 받아오는데 이게 지금 3천개 다 가져온거임\n        // 굳이 이렇게 할 필요없다 이거야\n        // 어차피 여기서 받아온거는\n        // 왼쪽에 푸터(전부다 보여주던가, 16개로 한페이지만 보여주던가),\n        // 오른쪽에 어사이드(10개)\n        // 이게 끝이야 => 내 생각엔 그냥 처음에 좋아요 순으로 26개만 받아와\n        // 그다음 왼쪽은 11번~26번 보여주고\n        // 오른쪽은 1번~10번 ( 좋아요 최상위 10개 ) 보여주는것도 괜찮을거 같음\n\n        // 이게 아니면 그냥 아예 랜덤으로 26개만 받아오던가\n\n        // 여기서 우리가 고민 해야 할건\n        // 1. 각각의 컴포넌트에서 포스트를 요청 => 2번 포스트\n        // 2. 메인에서 포스트 한번만 하고 그걸 인자로 넘겨준다\n        // 이 두개 중 뭐가 이득이냐, 이걸 생각해야함\n\n        let new_arr = response.data.slice();\n        new_arr.sort(function (a, b) {\n          return a.likeit - b.likeit;\n        });\n        setftable(new_arr);\n        setlivetable(response.data);\n        setftable_cnt(response.data.length / 8);\n      })\n\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  // 처음에 로딩 될 때 한번만 하면 되니까 useeffect로 한번만 해주면 됨\n\n  const gettable = () => {\n    if (text != '') {\n      Axios.post('https://qkrtmfqls.gabia.io/gettable', {\n        id: text,\n      })\n        .then((response) => {\n          setftable(response.data);\n          setftable_cnt(response.data.length / 8);\n          // gettable => 검색 했을 때 테이블 불러오는거\n        })\n\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"body-top-form\">\n        <Body gettable={gettable} settext={settext} text={text} />\n      </div>\n      <div className=\"body-bottom-form\">\n        <div className=\"footer-form\">\n          <Footer ftable={ftable} history={history} page_slice={page_slice} />\n        </div>\n        <div className=\"aside-form\">\n          <Aside livetable={livetable} history={history} />\n        </div>\n      </div>\n      <div className=\"move-footer-form\">\n        <div\n          style={{\n            width: '100%',\n            height: '80%',\n            display: 'flex',\n            'margin-top': '2%',\n            'margin-bottom': '2%',\n            'justify-content': 'center',\n            'align-items': 'center',\n          }}\n        >\n          <div className=\"like_select_num_btn_form\">\n            {ftable && ( // 비동기 처리\n              <Footer_bottom set_page_slice={set_page_slice} ftable_cnt={ftable_cnt} />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}