{"ast":null,"code":"var _jsxFileName = \"/Users/seojiwon/Desktop/RefriBank/src/page/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../style/signup_page/register.css';\nimport logo from '../img/main_body_img/login-logo.png';\nimport Alert from './alert';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  history,\n  setthis_signup_set_inputs,\n  this_signup_set_inputs\n}) {\n  _s();\n\n  // 만약에 전달안해줬는데? 여기서 히스토리 받았자나 => 그럼 안되지\n  const [register, setregister] = useState({\n    id: '',\n    pwd: '',\n    pwdcheck: '',\n    name: ''\n  });\n\n  const user_register = async e => {\n    if (register.id.length < 1 || register.id.length > 10) {\n      Alert('ID Check', 'ID는 최소 1글자 이상, 최대 10글자 이하입니다.');\n      return;\n    } // 비밀번호 체크\n\n\n    if (register.pwd.length < 1 || register.pwd.length > 10) {\n      Alert('PWD Check', 'PWD는 최소 1글자 이상, 최대 10글자 이하입니다.');\n      return;\n    } // 닉네임 체크\n\n\n    if (register.name.length < 1 || register.name.length > 10) {\n      Alert('Name Check', '이름은 최소 1글자 이상, 최대 10글자 이하입니다.');\n      return;\n    }\n\n    e.preventDefault();\n    await Axios.post('https://qkrtmfqls.gabia.io/register', {\n      id: register.id,\n      psword: register.pwd,\n      name: register.name\n    }).then(response => {\n      console.log(response.data);\n\n      if (response.data.success) {\n        Alert('Register', '회원가입을 축하드립니다!');\n        history.push('/');\n      } else {\n        Alert('Register', response.data.msg);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const Func_signup_check_password = e => {\n    e.preventDefault(); // 버튼을 누를시 수행하는 고유 동작을 중단시킴\n\n    if (register.pwd === register.pwdcheck) Alert('Register', '비밀번호가 일치합니다.'); // 로그인 성공 했을때에만 냉장고 버튼 생기게 해줘야 함\n    // 로그인 안하면 ( 쿠키 없을 때 ) 버튼 생기면 안됨\n    else Alert('Register', '비밀번호가 일치하지 않습니다.');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page-main-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-sub-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-logo-top-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-logo-img-form\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"register-logo-img\",\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-input-main-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-input-sub-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"ID\",\n            onChange: e => setregister({ ...register,\n              id: e.target.value\n            }),\n            value: register.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => setregister({ ...register,\n              pwd: e.target.value\n            }),\n            value: register.pwd,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Check Password\",\n            onChange: e => setregister({ ...register,\n              pwdcheck: e.target.value\n            }),\n            value: register.pwdcheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: Func_signup_check_password,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Check Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Nickname\",\n            onChange: e => setregister({ ...register,\n              name: e.target.value\n            }),\n            value: register.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: user_register,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EgznXC8+E5ZIALucySwp6Avlziw=\");\n\n_c = App;\nexport default _c2 = /*#__PURE__*/React.memo(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/seojiwon/Desktop/RefriBank/src/page/register.js"],"names":["React","useState","logo","Alert","Axios","App","history","setthis_signup_set_inputs","this_signup_set_inputs","register","setregister","id","pwd","pwdcheck","name","user_register","e","length","preventDefault","post","psword","then","response","console","log","data","success","push","msg","catch","error","Func_signup_check_password","target","value","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../style/signup_page/register.css';\nimport logo from '../img/main_body_img/login-logo.png';\nimport Alert from './alert';\nimport Axios from 'axios';\n\nfunction App({ history, setthis_signup_set_inputs, this_signup_set_inputs }) {\n  // 만약에 전달안해줬는데? 여기서 히스토리 받았자나 => 그럼 안되지\n  const [register, setregister] = useState({\n    id: '',\n    pwd: '',\n    pwdcheck: '',\n    name: '',\n  });\n\n  const user_register = async (e) => {\n    if (register.id.length < 1 || register.id.length > 10) {\n      Alert('ID Check', 'ID는 최소 1글자 이상, 최대 10글자 이하입니다.');\n      return;\n    }\n    // 비밀번호 체크\n    if (register.pwd.length < 1 || register.pwd.length > 10) {\n      Alert('PWD Check', 'PWD는 최소 1글자 이상, 최대 10글자 이하입니다.');\n      return;\n    }\n    // 닉네임 체크\n    if (register.name.length < 1 || register.name.length > 10) {\n      Alert('Name Check', '이름은 최소 1글자 이상, 최대 10글자 이하입니다.');\n      return;\n    }\n\n    e.preventDefault();\n    await Axios.post('https://qkrtmfqls.gabia.io/register', {\n      id: register.id,\n      psword: register.pwd,\n      name: register.name,\n    })\n      .then((response) => {\n        console.log(response.data)\n        if (response.data.success) {\n\n          Alert('Register', '회원가입을 축하드립니다!');\n          history.push('/');\n        } else {\n          Alert('Register', response.data.msg);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const Func_signup_check_password = (e) => {\n    e.preventDefault();\n    // 버튼을 누를시 수행하는 고유 동작을 중단시킴\n    if (register.pwd === register.pwdcheck)\n      Alert('Register', '비밀번호가 일치합니다.');\n    // 로그인 성공 했을때에만 냉장고 버튼 생기게 해줘야 함\n    // 로그인 안하면 ( 쿠키 없을 때 ) 버튼 생기면 안됨\n    else Alert('Register', '비밀번호가 일치하지 않습니다.');\n  };\n\n  return (\n    <div className=\"register-page-main-form\">\n      <div className=\"register-sub-form\">\n        <div className=\"register-logo-top-form\">\n          <div className=\"register-logo-img-form\">\n            <img className=\"register-logo-img\" src={logo}></img>\n          </div>\n        </div>\n        <div className=\"register-input-main-form\">\n          <div className=\"register-input-sub-form\">\n            <input\n              type=\"text\"\n              placeholder=\"ID\"\n              onChange={(e) => setregister({ ...register, id: e.target.value })}\n              value={register.id}\n            />\n            <input\n              type=\"password\"\n              onChange={(e) =>\n                setregister({ ...register, pwd: e.target.value })\n              }\n              value={register.pwd}\n              placeholder=\"Password\"\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Check Password\"\n              onChange={(e) =>\n                setregister({ ...register, pwdcheck: e.target.value })\n              }\n              value={register.pwdcheck}\n            />\n            <button onClick={Func_signup_check_password}>\n              <div>\n                <span>Check Password</span>\n              </div>\n            </button>\n            <input\n              type=\"text\"\n              placeholder=\"Nickname\"\n              onChange={(e) =>\n                setregister({ ...register, name: e.target.value })\n              }\n              value={register.name}\n            />\n            <button onClick={user_register}>\n              <div>\n                <span>Submit</span>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n"]},"metadata":{},"sourceType":"module"}