"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
function SvgReadOnly(props) {
    return (React.createElement("svg", __assign({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm15.8 2.9-2.5-2.5a1.28387 1.28387 0 0 0 -1-.4 1.28387 1.28387 0 0 0 -1 .4l-1.8 1.7 4.3 4.5 1.8-1.8a1.28387 1.28387 0 0 0 .4-1 2.38821 2.38821 0 0 0 -.2-.9zm-9.8 5.4-2.4 2.4c-.1.1-.1.1-.2.1s-.2 0-.2-.2a.34914.34914 0 0 1 .1-.2l2.4-2.4-1.1-1-4.6 4.6v4.4h4.4l4.6-4.6zm-2.2 6.3h-1.1v-1.4h-1.4v-1.1l1-1 2.5 2.5zm5-11.8-1.8 1.8 1 1.1.9-1c.1-.1.1-.1.2-.1s.2 0 .2.2a.13851.13851 0 0 1 0 .2l-1 1 3.1 3 1.8-1.8zm-8.64891-1.51745 1.06065-1.06065 14.49555 14.49555-1.06065 1.06065z' })));
}
exports.default = SvgReadOnly;
