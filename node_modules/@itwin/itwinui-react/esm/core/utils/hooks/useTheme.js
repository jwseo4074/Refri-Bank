/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
import React from 'react';
import '@itwin/itwinui-css/css/global.css';
import { getDocument, getWindow } from '../common';
/**
 * Hook that applies styling and theme to all components.
 * Defaults to light theme if none provided or set elsewhere.
 * @param theme Light, dark, or based on OS setting.
 * @param themeOptions Options that override default theming behavior.
 */
export var useTheme = function (theme, themeOptions) {
    var _a;
    var ownerDocument = (_a = themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.ownerDocument) !== null && _a !== void 0 ? _a : getDocument();
    React.useLayoutEffect(function () {
        if (!(ownerDocument === null || ownerDocument === void 0 ? void 0 : ownerDocument.body.classList.contains('iui-body'))) {
            ownerDocument === null || ownerDocument === void 0 ? void 0 : ownerDocument.body.classList.add('iui-body');
        }
    }, [ownerDocument]);
    React.useLayoutEffect(function () {
        var _a, _b;
        if (!ownerDocument) {
            return;
        }
        switch (theme) {
            case 'light':
                addLightTheme(ownerDocument);
                break;
            case 'dark':
                addDarkTheme(ownerDocument);
                break;
            case 'os':
                if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.matchMedia) === null || _b === void 0 ? void 0 : _b.call(_a, '(prefers-color-scheme: dark)').matches) {
                    addDarkTheme(ownerDocument);
                }
                else {
                    addLightTheme(ownerDocument);
                }
                break;
            default:
                if (ownerDocument.documentElement.className.indexOf('iui-theme') === -1) {
                    addLightTheme(ownerDocument);
                }
        }
    }, [ownerDocument, theme]);
};
var addLightTheme = function (ownerDocument) {
    ownerDocument.documentElement.classList.add('iui-theme-light');
    ownerDocument.documentElement.classList.remove('iui-theme-dark');
};
var addDarkTheme = function (ownerDocument) {
    ownerDocument.documentElement.classList.add('iui-theme-dark');
    ownerDocument.documentElement.classList.remove('iui-theme-light');
};
