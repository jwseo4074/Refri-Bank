var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
import cx from 'classnames';
import React from 'react';
import { useTheme } from '../../utils/hooks/useTheme';
import '@itwin/itwinui-css/css/keyboard.css';
/**
 * Some predefined strings for common keyboard keys.
 */
export var KbdKeys = {
    Command: '\u2318 Cmd',
    Shift: '\u21e7 Shift',
    Backspace: '\u232b Backspace',
    Enter: '\u21b5 Enter',
    Eject: '\u23cf Eject',
    Control: 'Ctrl',
    Windows: '\u229e Win',
    Apple: '\uf8ff',
    Option: '\u2325 Option',
    Left: '\u2190',
    Up: '\u2191',
    Right: '\u2192',
    Down: '\u2193',
};
/**
 * A keyboard key element.
 * @example
 * <Kbd>A</Kbd>
 * <Kbd title='Enter'>{KbdKeys.Enter}</Kbd>
 */
export var Kbd = function (props) {
    var className = props.className, children = props.children, rest = __rest(props, ["className", "children"]);
    useTheme();
    return (React.createElement("kbd", __assign({ className: cx('iui-keyboard', className) }, rest), children));
};
export default Kbd;
