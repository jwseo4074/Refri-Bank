var isValidDate = function (date) {
    return !!date && !isNaN(date.valueOf());
};
/**
 * Filters dates.
 * @param rows Table rows
 * @param ids Property names of data object to use for filtering
 * @param filterValue Filter value
 * @returns Filtered rows
 */
var betweenDate = function (rows, ids, filterValue) {
    var _a = filterValue || [], min = _a[0], max = _a[1];
    var MAX_DATE_VALUE = 8640000000000000;
    var minValue = (isValidDate(min) ? min : new Date(-MAX_DATE_VALUE));
    var maxValue = (isValidDate(max) ? max : new Date(MAX_DATE_VALUE));
    return rows.filter(function (row) {
        return ids.some(function (id) {
            var rowValue = row.values[id];
            return (rowValue.valueOf() >= minValue.valueOf() &&
                rowValue.valueOf() <= maxValue.valueOf());
        });
    });
};
/**
 * Filter is not being set if filter value is invalid.
 */
betweenDate.autoRemove = function (val) {
    return !val || (!isValidDate(val[0]) && !isValidDate(val[1]));
};
export var customFilterFunctions = {
    betweenDate: betweenDate,
};
