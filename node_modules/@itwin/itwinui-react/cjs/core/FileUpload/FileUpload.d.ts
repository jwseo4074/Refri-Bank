import React from 'react';
import { CommonProps } from '../utils/props';
import '@itwin/itwinui-css/css/file-upload.css';
export declare type FileUploadProps = {
    /**
     * Content shown over `children` when file is being dragged onto the component.
     * Should always be used when drag content differs from `children` being wrapped.
     * Can be skipped if wrapping `FileUploadTemplate`.
     */
    dragContent?: React.ReactNode;
    /**
     * Callback fired when files are dropped onto the component.
     */
    onFileDropped: (files: FileList) => void;
    /**
     * Component to wrap `FileUpload` around.
     * Either pass `FileUploadTemplate` (for default state) or a different component to wrap.
     */
    children: React.ReactNode;
} & CommonProps;
/**
 * File upload component to be wrapped around `FileUploadTemplate` or any arbitrary component.
 * Provides support for dragging and dropping multiple files.
 * @example
 * <FileUpload onFileDropped={console.log}><FileUploadTemplate /></FileUpload>
 * <FileUpload dragContent='Drop file here' onFileDropped={console.log}><Textarea /></FileUpload>
 */
export declare const FileUpload: React.ForwardRefExoticComponent<{
    /**
     * Content shown over `children` when file is being dragged onto the component.
     * Should always be used when drag content differs from `children` being wrapped.
     * Can be skipped if wrapping `FileUploadTemplate`.
     */
    dragContent?: React.ReactNode;
    /**
     * Callback fired when files are dropped onto the component.
     */
    onFileDropped: (files: FileList) => void;
    /**
     * Component to wrap `FileUpload` around.
     * Either pass `FileUploadTemplate` (for default state) or a different component to wrap.
     */
    children: React.ReactNode;
} & {
    title?: string | undefined;
    id?: string | undefined;
} & {
    style?: React.CSSProperties | undefined;
} & import("../utils/props").ClassNameProps & React.RefAttributes<HTMLDivElement>>;
export default FileUpload;
