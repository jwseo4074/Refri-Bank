"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Alert = void 0;
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
var CloseSmall_1 = __importDefault(require("@itwin/itwinui-icons-react/cjs/icons/CloseSmall"));
var classnames_1 = __importDefault(require("classnames"));
var react_1 = __importDefault(require("react"));
var useTheme_1 = require("../utils/hooks/useTheme");
require("@itwin/itwinui-css/css/alert.css");
var IconButton_1 = require("../Buttons/IconButton");
var common_1 = require("../utils/common");
/**
 * A small box to quickly grab user attention and communicate a brief message
 * @example
 * <Alert>This is a basic alert.</Alert>
 * <Alert type='positive'>This is a positive alert.</Alert>
 * <Alert type='warning'>This is a warning alert.</Alert>
 * <Alert type='negative'>This is a negative alert.</Alert>
 * <Alert type='positive' clickableText="I am a clickable text" onClick={()=>alert("Pressed")}>This is a positive alert with a clickable text</Alert>
 */
var Alert = function (props) {
    var children = props.children, className = props.className, _a = props.type, type = _a === void 0 ? 'informational' : _a, clickableText = props.clickableText, onClick = props.onClick, onClose = props.onClose, style = props.style, _b = props.isSticky, isSticky = _b === void 0 ? false : _b, rest = __rest(props, ["children", "className", "type", "clickableText", "onClick", "onClose", "style", "isSticky"]);
    useTheme_1.useTheme();
    var StatusIcon = common_1.StatusIconMap[type];
    return (react_1.default.createElement("div", __assign({ className: classnames_1.default('iui-alert', "iui-" + type, { 'iui-sticky': isSticky }, className), style: style }, rest),
        react_1.default.createElement(StatusIcon, { className: 'iui-icon' }),
        react_1.default.createElement("span", { className: 'iui-message' },
            children,
            clickableText && (react_1.default.createElement("a", { style: { cursor: 'pointer' }, onClick: onClick }, clickableText))),
        onClose && (react_1.default.createElement(IconButton_1.IconButton, { styleType: 'borderless', size: 'small', onClick: onClose, "aria-label": 'Close' },
            react_1.default.createElement(CloseSmall_1.default, { "aria-hidden": true })))));
};
exports.Alert = Alert;
exports.default = exports.Alert;
