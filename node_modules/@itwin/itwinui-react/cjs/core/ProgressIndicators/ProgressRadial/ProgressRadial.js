"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProgressRadial = void 0;
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
var CheckmarkSmall_1 = __importDefault(require("@itwin/itwinui-icons-react/cjs/icons/CheckmarkSmall"));
var ImportantSmall_1 = __importDefault(require("@itwin/itwinui-icons-react/cjs/icons/ImportantSmall"));
var classnames_1 = __importDefault(require("classnames"));
var react_1 = __importDefault(require("react"));
var useTheme_1 = require("../../utils/hooks/useTheme");
require("@itwin/itwinui-css/css/progress-indicator.css");
/**
 * Circular Progress Indicator
 * @example
 * Basic
 * <ProgressRadial value={50} />
 * Indeterminate
 * <ProgressRadial indeterminate />
 * Positive / Negative
 * <ProgressRadial status='positive' />
 * <ProgressRadial status='negative' />
 * Centered Content
 * <ProgressRadial value={63}>63</ProgressRadial>
 * Small
 * <ProgressRadial size={'small'} indeterminate/>
 */
var ProgressRadial = function (props) {
    var _a;
    var _b = props.value, value = _b === void 0 ? 0 : _b, _c = props.indeterminate, indeterminate = _c === void 0 ? false : _c, status = props.status, children = props.children, _d = props.size, size = _d === void 0 ? '' : _d, className = props.className, style = props.style, rest = __rest(props, ["value", "indeterminate", "status", "children", "size", "className", "style"]);
    useTheme_1.useTheme();
    var statusMap = {
        negative: react_1.default.createElement(ImportantSmall_1.default, { "aria-hidden": true }),
        positive: react_1.default.createElement(CheckmarkSmall_1.default, { "aria-hidden": true }),
    };
    var fillStyle = {
        strokeDashoffset: status === 'positive'
            ? 0
            : 88 -
                Math.min(88, Math.max(0, indeterminate ? 88 : (88 * value) / 100)),
    };
    return (react_1.default.createElement("div", __assign({ className: classnames_1.default('iui-progress-indicator-radial', (_a = {
                'iui-determinate': !indeterminate,
                'iui-indeterminate': indeterminate
            },
            _a["iui-" + size] = !!size,
            _a["iui-" + status] = !!status,
            _a), className), style: style }, rest),
        react_1.default.createElement("svg", { className: 'iui-radial', viewBox: '0 0 32 32', "aria-hidden": 'true' },
            react_1.default.createElement("circle", { className: 'iui-track', cx: '16', cy: '16', r: '14' }),
            react_1.default.createElement("circle", { className: 'iui-fill', cx: '16', cy: '16', r: '14', style: fillStyle })),
        react_1.default.createElement(react_1.default.Fragment, null,
            status && (react_1.default.createElement("span", { className: 'iui-inner-content' }, statusMap[status])),
            !status && children && (react_1.default.createElement("span", { className: 'iui-inner-content' }, children)))));
};
exports.ProgressRadial = ProgressRadial;
exports.default = exports.ProgressRadial;
