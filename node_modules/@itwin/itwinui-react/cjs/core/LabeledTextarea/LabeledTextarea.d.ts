import React from 'react';
import { TextareaProps } from '../Textarea/Textarea';
import { LabeledInputProps } from '../LabeledInput';
import '@itwin/itwinui-css/css/inputs.css';
export declare type LabeledTextareaProps = {
    /**
     * Label for the textarea.
     */
    label: React.ReactNode;
    /**
     * Message below the textarea. Does not apply to 'inline' textarea.
     */
    message?: React.ReactNode;
    /**
     * Status of text area.
     */
    status?: 'positive' | 'warning' | 'negative';
    /**
     * Custom class name for textarea.
     */
    textareaClassName?: string;
    /**
     * Custom style for textarea.
     */
    textareaStyle?: React.CSSProperties;
} & Pick<LabeledInputProps, 'svgIcon' | 'displayStyle' | 'iconDisplayStyle'> & TextareaProps;
/**
 * Textarea wrapper that allows for additional styling and labelling
 * @example
 * <LabeledTextarea
 *  label='Textarea Label'
 *  message='Help Message'
 *  placeholder='This is a textarea'
 * />
 * <LabeledTextarea
 *  label='Disabled Textarea Label'
 *  message='Help Message'
 *  placeholder='This is a textarea'
 *  disabled={true}
 * />
 * <LabeledTextarea
 *  label='Textarea Label'
 *  message='Negative Message'
 *  placeholder='This is a textarea'
 *  status='negative'
 * />
 */
export declare const LabeledTextarea: React.ForwardRefExoticComponent<{
    /**
     * Label for the textarea.
     */
    label: React.ReactNode;
    /**
     * Message below the textarea. Does not apply to 'inline' textarea.
     */
    message?: React.ReactNode;
    /**
     * Status of text area.
     */
    status?: "positive" | "warning" | "negative" | undefined;
    /**
     * Custom class name for textarea.
     */
    textareaClassName?: string | undefined;
    /**
     * Custom style for textarea.
     */
    textareaStyle?: React.CSSProperties | undefined;
} & Pick<LabeledInputProps, "displayStyle" | "svgIcon" | "iconDisplayStyle"> & {
    setFocus?: boolean | undefined;
} & React.TextareaHTMLAttributes<HTMLTextAreaElement> & React.RefAttributes<HTMLTextAreaElement>>;
export default LabeledTextarea;
