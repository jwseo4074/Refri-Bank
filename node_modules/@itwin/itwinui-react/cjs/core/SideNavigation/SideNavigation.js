"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SideNavigation = void 0;
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var useTheme_1 = require("../utils/hooks/useTheme");
var ChevronRight_1 = __importDefault(require("@itwin/itwinui-icons-react/cjs/icons/ChevronRight"));
var Buttons_1 = require("../Buttons");
var Tooltip_1 = require("../Tooltip");
require("@itwin/itwinui-css/css/side-navigation.css");
/**
 * Left side navigation menu component.
 * @example
 * <SideNavigation
 *   items={[
 *     <SidenavButton startIcon={<SvgPlaceholder />}>App 1</SidenavButton>,
 *     <SidenavButton startIcon={<SvgPlaceholder />}>App 2</SidenavButton>,
 *     <SidenavButton startIcon={<SvgPlaceholder />}>App 3</SidenavButton>,
 *   ]}
 *   secondaryItems={[
 *     <SidenavButton startIcon={<SvgSettings />}>Settings</SidenavButton>,
 *   ]}
 * />
 */
var SideNavigation = function (props) {
    var items = props.items, secondaryItems = props.secondaryItems, _a = props.expanderPlacement, expanderPlacement = _a === void 0 ? 'top' : _a, className = props.className, _b = props.isExpanded, isExpanded = _b === void 0 ? false : _b, onExpanderClick = props.onExpanderClick, rest = __rest(props, ["items", "secondaryItems", "expanderPlacement", "className", "isExpanded", "onExpanderClick"]);
    useTheme_1.useTheme();
    var _c = react_1.default.useState(isExpanded), _isExpanded = _c[0], _setIsExpanded = _c[1];
    react_1.default.useEffect(function () {
        _setIsExpanded(isExpanded);
    }, [isExpanded]);
    var ExpandButton = (react_1.default.createElement(Buttons_1.IconButton, { className: 'iui-sidenav-button iui-expand', onClick: react_1.default.useCallback(function () {
            _setIsExpanded(function (expanded) { return !expanded; });
            onExpanderClick === null || onExpanderClick === void 0 ? void 0 : onExpanderClick();
        }, [onExpanderClick]) },
        react_1.default.createElement(ChevronRight_1.default, null)));
    return (react_1.default.createElement("div", __assign({ className: classnames_1.default('iui-side-navigation', {
            'iui-expanded': _isExpanded,
            'iui-collapsed': !_isExpanded,
        }, className) }, rest),
        expanderPlacement === 'top' && ExpandButton,
        react_1.default.createElement("div", { className: 'iui-sidenav-content' },
            react_1.default.createElement("div", { className: 'iui-top' }, items.map(function (sidenavButton, index) {
                return !_isExpanded ? (react_1.default.createElement(Tooltip_1.Tooltip, { content: sidenavButton.props.children, placement: 'right', key: index }, sidenavButton)) : (sidenavButton);
            })),
            react_1.default.createElement("div", { className: 'iui-bottom' }, secondaryItems === null || secondaryItems === void 0 ? void 0 : secondaryItems.map(function (sidenavButton, index) {
                return !_isExpanded ? (react_1.default.createElement(Tooltip_1.Tooltip, { content: sidenavButton.props.children, placement: 'right', key: index }, sidenavButton)) : (sidenavButton);
            }))),
        expanderPlacement === 'bottom' && ExpandButton));
};
exports.SideNavigation = SideNavigation;
exports.default = exports.SideNavigation;
