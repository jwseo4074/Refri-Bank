"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
var react_1 = __importDefault(require("react"));
var Calendar_1 = __importDefault(require("@itwin/itwinui-icons-react/cjs/icons/Calendar"));
var Popover_1 = require("../../../utils/Popover");
var LabeledInput_1 = require("../../../LabeledInput");
var DatePicker_1 = require("../../../DatePicker");
var Buttons_1 = require("../../../Buttons");
var DatePickerInput = function (props) {
    var onChange = props.onChange, date = props.date, parseInput = props.parseInput, formatDate = props.formatDate, rest = __rest(props, ["onChange", "date", "parseInput", "formatDate"]);
    var buttonRef = react_1.default.useRef(null);
    var _a = react_1.default.useState(''), inputValue = _a[0], setInputValue = _a[1];
    react_1.default.useEffect(function () {
        if (date && !isNaN(date.valueOf())) {
            setInputValue(formatDate(date));
        }
    }, [date, formatDate]);
    var _b = react_1.default.useState(false), isVisible = _b[0], setIsVisible = _b[1];
    var close = react_1.default.useCallback(function () { return setIsVisible(false); }, []);
    var onDateSelected = react_1.default.useCallback(function (date) {
        var _a;
        onChange(date);
        close();
        (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }, [close, onChange]);
    var onInputChange = react_1.default.useCallback(function (event) {
        var value = event.target.value;
        setInputValue(value);
        if (!value) {
            onChange(undefined);
        }
        var parsedDate = parseInput(value);
        if (parsedDate && !isNaN(parsedDate.valueOf())) {
            onChange(parsedDate);
        }
    }, [onChange, parseInput]);
    return (react_1.default.createElement(Popover_1.Popover, { content: react_1.default.createElement(DatePicker_1.DatePicker, { date: date, onChange: onDateSelected, setFocus: true }), placement: 'bottom', visible: isVisible, onClickOutside: function (_, e) {
            var _a;
            if (!((_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target))) {
                close();
            }
        } },
        react_1.default.createElement(LabeledInput_1.LabeledInput, __assign({ displayStyle: 'inline', value: inputValue, onChange: onInputChange, onClick: close, svgIcon: react_1.default.createElement(Buttons_1.IconButton, { styleType: 'borderless', onClick: function () { return setIsVisible(function (v) { return !v; }); }, ref: buttonRef },
                react_1.default.createElement(Calendar_1.default, null)) }, rest))));
};
exports.default = DatePickerInput;
