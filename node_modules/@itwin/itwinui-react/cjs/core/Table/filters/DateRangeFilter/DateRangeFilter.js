"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateRangeFilter = void 0;
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
var react_1 = __importDefault(require("react"));
var useTheme_1 = require("../../../utils/hooks/useTheme");
var FilterButtonBar_1 = require("../FilterButtonBar");
var BaseFilter_1 = require("../BaseFilter");
require("@itwin/itwinui-css/css/table.css");
var DatePickerInput_1 = __importDefault(require("./DatePickerInput"));
var defaultStrings = {
    from: 'From',
    to: 'To',
};
var defaultFormatDate = function (date) {
    var formatter = new Intl.DateTimeFormat('en-us', {
        month: 'short',
        day: 'numeric',
        year: 'numeric',
    });
    return formatter.format(date);
};
var defaultParseInput = function (text) {
    // Checks whether date is in correct format e.g. Feb 11, 2021
    if (/^[a-z]{3}\s\d{1,2},\s\d{4}$/gi.test(text)) {
        return new Date(text);
    }
    return new Date('');
};
var DateRangeFilter = function (props) {
    var _a, _b, _c, _d;
    var column = props.column, translatedLabels = props.translatedLabels, setFilter = props.setFilter, clearFilter = props.clearFilter, _e = props.formatDate, formatDate = _e === void 0 ? defaultFormatDate : _e, _f = props.parseInput, parseInput = _f === void 0 ? defaultParseInput : _f, _g = props.placeholder, placeholder = _g === void 0 ? 'MMM dd, yyyy' : _g;
    useTheme_1.useTheme();
    var translatedStrings = __assign(__assign({}, defaultStrings), translatedLabels);
    var _h = react_1.default.useState(((_a = column.filterValue) === null || _a === void 0 ? void 0 : _a[0]) ? new Date((_b = column.filterValue) === null || _b === void 0 ? void 0 : _b[0]) : undefined), from = _h[0], setFrom = _h[1];
    var _j = react_1.default.useState(((_c = column.filterValue) === null || _c === void 0 ? void 0 : _c[1]) ? new Date((_d = column.filterValue) === null || _d === void 0 ? void 0 : _d[1]) : undefined), to = _j[0], setTo = _j[1];
    var onKeyDown = function (event) {
        if (event.key === 'Enter') {
            setFilter([from, to]);
        }
    };
    return (react_1.default.createElement(BaseFilter_1.BaseFilter, null,
        react_1.default.createElement(DatePickerInput_1.default, { label: translatedStrings.from, date: from, onChange: setFrom, formatDate: formatDate, parseInput: parseInput, onKeyDown: onKeyDown, placeholder: placeholder, setFocus: true }),
        react_1.default.createElement(DatePickerInput_1.default, { label: translatedStrings.to, date: to, onChange: setTo, formatDate: formatDate, parseInput: parseInput, onKeyDown: onKeyDown, placeholder: placeholder }),
        react_1.default.createElement(FilterButtonBar_1.FilterButtonBar, { setFilter: function () { return setFilter([from, to]); }, clearFilter: clearFilter, translatedLabels: translatedLabels })));
};
exports.DateRangeFilter = DateRangeFilter;
