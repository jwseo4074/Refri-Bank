"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterButtonBar = void 0;
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
require("@itwin/itwinui-css/css/table.css");
var utils_1 = require("../../utils");
var Buttons_1 = require("../../Buttons");
var defaultStrings = {
    filter: 'Filter',
    clear: 'Clear',
};
/**
 * Button bar component that should be used in a filter. It already has Filter and Clear buttons.
 * @example
 * <FilterButtonBar setFilter={() => setFilter(text)} clearFilter={clearFilter} />
 */
var FilterButtonBar = function (props) {
    var children = props.children, setFilter = props.setFilter, clearFilter = props.clearFilter, translatedLabels = props.translatedLabels, className = props.className, style = props.style, id = props.id;
    var translatedStrings = __assign(__assign({}, defaultStrings), translatedLabels);
    (0, utils_1.useTheme)();
    return (react_1.default.createElement("div", { className: (0, classnames_1.default)('iui-button-bar', className), style: style, id: id },
        children,
        react_1.default.createElement(Buttons_1.Button, { styleType: 'high-visibility', onClick: setFilter }, translatedStrings.filter),
        react_1.default.createElement(Buttons_1.Button, { onClick: clearFilter }, translatedStrings.clear)));
};
exports.FilterButtonBar = FilterButtonBar;
