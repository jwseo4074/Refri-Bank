/// <reference types="react" />
import { CommonProps } from './props';
export declare const StatusIconMap: {
    negative: (args?: CommonProps | undefined) => JSX.Element;
    positive: (args?: CommonProps | undefined) => JSX.Element;
    warning: (args?: CommonProps | undefined) => JSX.Element;
    informational: (args?: CommonProps | undefined) => JSX.Element;
};
/**
 * Generate color from user name or email.
 * Recommended to use for `backgroundColor` in `UserIcon` component.
 */
export declare const getUserColor: (emailOrName: string) => string;
/**
 * Get the container as a child of body, or create one if it doesn't exist.
 * Mostly used for dynamic components like Modal or Toast.
 *
 * @param containerId id of the container to find or create
 * @param ownerDocument Can be changed if the container should be in a different document (e.g. in popup).
 */
export declare const getContainer: (containerId: string, ownerDocument?: Document | undefined) => HTMLElement | undefined;
/**
 * Get document if it is defined.
 * Used to support SSR/SSG applications.
 */
export declare const getDocument: () => Document | undefined;
/**
 * Get window if it is defined.
 * Used to support SSR/SSG applications.
 */
export declare const getWindow: () => (Window & typeof globalThis) | undefined;
/**
 * Return input value bounded by specified range.
 */
export declare const getBoundedValue: (val: number, min: number, max: number) => number;
