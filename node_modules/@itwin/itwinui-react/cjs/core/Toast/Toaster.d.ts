import React from 'react';
import { ToastProps } from './Toast';
export declare type ToasterSettings = {
    /**
     * Order of toasts.
     * When set to 'descending', most recent toasts are on top. When set to 'ascending', most recent toasts are on bottom.
  
     * When `placement` is set to a top value, order defaults to 'descending', otherwise 'ascending'.
     */
    order?: 'descending' | 'ascending';
    /**
     * Placement of toasts.
     * Changes placement of toasts. Start indicates left side of viewport. End - right side of viewport.
     * @default 'top'
     */
    placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end';
};
export declare type ToastOptions = Omit<ToastProps, 'category' | 'isVisible' | 'id' | 'content'>;
export default class Toaster {
    private toasts;
    private lastId;
    private settings;
    private toastsRef;
    private isInitialized;
    private asyncInit;
    /**
     * Set global Toaster settings for toasts order and placement.
     * Settings will be applied to new toasts on the page.
     */
    setSettings(newSettings: ToasterSettings): void;
    positive(content: React.ReactNode, options?: ToastOptions): {
        close: () => void;
    };
    informational(content: React.ReactNode, options?: ToastOptions): {
        close: () => void;
    };
    negative(content: React.ReactNode, options?: ToastOptions): {
        close: () => void;
    };
    warning(content: React.ReactNode, options?: ToastOptions): {
        close: () => void;
    };
    private createToast;
    private removeToast;
    private updateView;
    private closeToast;
    closeAll(): void;
}
